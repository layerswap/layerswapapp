"use strict";(self.webpackChunklayerswap=self.webpackChunklayerswap||[]).push([[9589],{"./node_modules/semver/classes/comparator.js":(module,__unused_webpack_exports,__webpack_require__)=>{const ANY=Symbol("SemVer ANY");class Comparator{static get ANY(){return ANY}constructor(comp,options){if(options=parseOptions(options),comp instanceof Comparator){if(comp.loose===!!options.loose)return comp;comp=comp.value}comp=comp.trim().split(/\s+/).join(" "),debug("comparator",comp,options),this.options=options,this.loose=!!options.loose,this.parse(comp),this.semver===ANY?this.value="":this.value=this.operator+this.semver.version,debug("comp",this)}parse(comp){const r=this.options.loose?re[t.COMPARATORLOOSE]:re[t.COMPARATOR],m=comp.match(r);if(!m)throw new TypeError(`Invalid comparator: ${comp}`);this.operator=void 0!==m[1]?m[1]:"","="===this.operator&&(this.operator=""),m[2]?this.semver=new SemVer(m[2],this.options.loose):this.semver=ANY}toString(){return this.value}test(version){if(debug("Comparator.test",version,this.options.loose),this.semver===ANY||version===ANY)return!0;if("string"==typeof version)try{version=new SemVer(version,this.options)}catch(er){return!1}return cmp(version,this.operator,this.semver,this.options)}intersects(comp,options){if(!(comp instanceof Comparator))throw new TypeError("a Comparator is required");return""===this.operator?""===this.value||new Range(comp.value,options).test(this.value):""===comp.operator?""===comp.value||new Range(this.value,options).test(comp.semver):(!(options=parseOptions(options)).includePrerelease||"<0.0.0-0"!==this.value&&"<0.0.0-0"!==comp.value)&&(!(!options.includePrerelease&&(this.value.startsWith("<0.0.0")||comp.value.startsWith("<0.0.0")))&&(!(!this.operator.startsWith(">")||!comp.operator.startsWith(">"))||(!(!this.operator.startsWith("<")||!comp.operator.startsWith("<"))||(!(this.semver.version!==comp.semver.version||!this.operator.includes("=")||!comp.operator.includes("="))||(!!(cmp(this.semver,"<",comp.semver,options)&&this.operator.startsWith(">")&&comp.operator.startsWith("<"))||!!(cmp(this.semver,">",comp.semver,options)&&this.operator.startsWith("<")&&comp.operator.startsWith(">")))))))}}module.exports=Comparator;const parseOptions=__webpack_require__("./node_modules/semver/internal/parse-options.js"),{safeRe:re,t}=__webpack_require__("./node_modules/semver/internal/re.js"),cmp=__webpack_require__("./node_modules/semver/functions/cmp.js"),debug=__webpack_require__("./node_modules/semver/internal/debug.js"),SemVer=__webpack_require__("./node_modules/semver/classes/semver.js"),Range=__webpack_require__("./node_modules/semver/classes/range.js")},"./node_modules/semver/classes/range.js":(module,__unused_webpack_exports,__webpack_require__)=>{const SPACE_CHARACTERS=/\s+/g;class Range{constructor(range,options){if(options=parseOptions(options),range instanceof Range)return range.loose===!!options.loose&&range.includePrerelease===!!options.includePrerelease?range:new Range(range.raw,options);if(range instanceof Comparator)return this.raw=range.value,this.set=[[range]],this.formatted=void 0,this;if(this.options=options,this.loose=!!options.loose,this.includePrerelease=!!options.includePrerelease,this.raw=range.trim().replace(SPACE_CHARACTERS," "),this.set=this.raw.split("||").map(r=>this.parseRange(r.trim())).filter(c=>c.length),!this.set.length)throw new TypeError(`Invalid SemVer Range: ${this.raw}`);if(this.set.length>1){const first=this.set[0];if(this.set=this.set.filter(c=>!isNullSet(c[0])),0===this.set.length)this.set=[first];else if(this.set.length>1)for(const c of this.set)if(1===c.length&&isAny(c[0])){this.set=[c];break}}this.formatted=void 0}get range(){if(void 0===this.formatted){this.formatted="";for(let i=0;i<this.set.length;i++){i>0&&(this.formatted+="||");const comps=this.set[i];for(let k=0;k<comps.length;k++)k>0&&(this.formatted+=" "),this.formatted+=comps[k].toString().trim()}}return this.formatted}format(){return this.range}toString(){return this.range}parseRange(range){const memoKey=((this.options.includePrerelease&&FLAG_INCLUDE_PRERELEASE)|(this.options.loose&&FLAG_LOOSE))+":"+range,cached=cache.get(memoKey);if(cached)return cached;const loose=this.options.loose,hr=loose?re[t.HYPHENRANGELOOSE]:re[t.HYPHENRANGE];range=range.replace(hr,hyphenReplace(this.options.includePrerelease)),debug("hyphen replace",range),range=range.replace(re[t.COMPARATORTRIM],comparatorTrimReplace),debug("comparator trim",range),range=range.replace(re[t.TILDETRIM],tildeTrimReplace),debug("tilde trim",range),range=range.replace(re[t.CARETTRIM],caretTrimReplace),debug("caret trim",range);let rangeList=range.split(" ").map(comp=>parseComparator(comp,this.options)).join(" ").split(/\s+/).map(comp=>replaceGTE0(comp,this.options));loose&&(rangeList=rangeList.filter(comp=>(debug("loose invalid filter",comp,this.options),!!comp.match(re[t.COMPARATORLOOSE])))),debug("range list",rangeList);const rangeMap=new Map,comparators=rangeList.map(comp=>new Comparator(comp,this.options));for(const comp of comparators){if(isNullSet(comp))return[comp];rangeMap.set(comp.value,comp)}rangeMap.size>1&&rangeMap.has("")&&rangeMap.delete("");const result=[...rangeMap.values()];return cache.set(memoKey,result),result}intersects(range,options){if(!(range instanceof Range))throw new TypeError("a Range is required");return this.set.some(thisComparators=>isSatisfiable(thisComparators,options)&&range.set.some(rangeComparators=>isSatisfiable(rangeComparators,options)&&thisComparators.every(thisComparator=>rangeComparators.every(rangeComparator=>thisComparator.intersects(rangeComparator,options)))))}test(version){if(!version)return!1;if("string"==typeof version)try{version=new SemVer(version,this.options)}catch(er){return!1}for(let i=0;i<this.set.length;i++)if(testSet(this.set[i],version,this.options))return!0;return!1}}module.exports=Range;const cache=new(__webpack_require__("./node_modules/semver/internal/lrucache.js")),parseOptions=__webpack_require__("./node_modules/semver/internal/parse-options.js"),Comparator=__webpack_require__("./node_modules/semver/classes/comparator.js"),debug=__webpack_require__("./node_modules/semver/internal/debug.js"),SemVer=__webpack_require__("./node_modules/semver/classes/semver.js"),{safeRe:re,t,comparatorTrimReplace,tildeTrimReplace,caretTrimReplace}=__webpack_require__("./node_modules/semver/internal/re.js"),{FLAG_INCLUDE_PRERELEASE,FLAG_LOOSE}=__webpack_require__("./node_modules/semver/internal/constants.js"),isNullSet=c=>"<0.0.0-0"===c.value,isAny=c=>""===c.value,isSatisfiable=(comparators,options)=>{let result=!0;const remainingComparators=comparators.slice();let testComparator=remainingComparators.pop();for(;result&&remainingComparators.length;)result=remainingComparators.every(otherComparator=>testComparator.intersects(otherComparator,options)),testComparator=remainingComparators.pop();return result},parseComparator=(comp,options)=>(debug("comp",comp,options),comp=replaceCarets(comp,options),debug("caret",comp),comp=replaceTildes(comp,options),debug("tildes",comp),comp=replaceXRanges(comp,options),debug("xrange",comp),comp=replaceStars(comp,options),debug("stars",comp),comp),isX=id=>!id||"x"===id.toLowerCase()||"*"===id,replaceTildes=(comp,options)=>comp.trim().split(/\s+/).map(c=>replaceTilde(c,options)).join(" "),replaceTilde=(comp,options)=>{const r=options.loose?re[t.TILDELOOSE]:re[t.TILDE];return comp.replace(r,(_,M,m,p,pr)=>{let ret;return debug("tilde",comp,_,M,m,p,pr),isX(M)?ret="":isX(m)?ret=`>=${M}.0.0 <${+M+1}.0.0-0`:isX(p)?ret=`>=${M}.${m}.0 <${M}.${+m+1}.0-0`:pr?(debug("replaceTilde pr",pr),ret=`>=${M}.${m}.${p}-${pr} <${M}.${+m+1}.0-0`):ret=`>=${M}.${m}.${p} <${M}.${+m+1}.0-0`,debug("tilde return",ret),ret})},replaceCarets=(comp,options)=>comp.trim().split(/\s+/).map(c=>replaceCaret(c,options)).join(" "),replaceCaret=(comp,options)=>{debug("caret",comp,options);const r=options.loose?re[t.CARETLOOSE]:re[t.CARET],z=options.includePrerelease?"-0":"";return comp.replace(r,(_,M,m,p,pr)=>{let ret;return debug("caret",comp,_,M,m,p,pr),isX(M)?ret="":isX(m)?ret=`>=${M}.0.0${z} <${+M+1}.0.0-0`:isX(p)?ret="0"===M?`>=${M}.${m}.0${z} <${M}.${+m+1}.0-0`:`>=${M}.${m}.0${z} <${+M+1}.0.0-0`:pr?(debug("replaceCaret pr",pr),ret="0"===M?"0"===m?`>=${M}.${m}.${p}-${pr} <${M}.${m}.${+p+1}-0`:`>=${M}.${m}.${p}-${pr} <${M}.${+m+1}.0-0`:`>=${M}.${m}.${p}-${pr} <${+M+1}.0.0-0`):(debug("no pr"),ret="0"===M?"0"===m?`>=${M}.${m}.${p}${z} <${M}.${m}.${+p+1}-0`:`>=${M}.${m}.${p}${z} <${M}.${+m+1}.0-0`:`>=${M}.${m}.${p} <${+M+1}.0.0-0`),debug("caret return",ret),ret})},replaceXRanges=(comp,options)=>(debug("replaceXRanges",comp,options),comp.split(/\s+/).map(c=>replaceXRange(c,options)).join(" ")),replaceXRange=(comp,options)=>{comp=comp.trim();const r=options.loose?re[t.XRANGELOOSE]:re[t.XRANGE];return comp.replace(r,(ret,gtlt,M,m,p,pr)=>{debug("xRange",comp,ret,gtlt,M,m,p,pr);const xM=isX(M),xm=xM||isX(m),xp=xm||isX(p),anyX=xp;return"="===gtlt&&anyX&&(gtlt=""),pr=options.includePrerelease?"-0":"",xM?ret=">"===gtlt||"<"===gtlt?"<0.0.0-0":"*":gtlt&&anyX?(xm&&(m=0),p=0,">"===gtlt?(gtlt=">=",xm?(M=+M+1,m=0,p=0):(m=+m+1,p=0)):"<="===gtlt&&(gtlt="<",xm?M=+M+1:m=+m+1),"<"===gtlt&&(pr="-0"),ret=`${gtlt+M}.${m}.${p}${pr}`):xm?ret=`>=${M}.0.0${pr} <${+M+1}.0.0-0`:xp&&(ret=`>=${M}.${m}.0${pr} <${M}.${+m+1}.0-0`),debug("xRange return",ret),ret})},replaceStars=(comp,options)=>(debug("replaceStars",comp,options),comp.trim().replace(re[t.STAR],"")),replaceGTE0=(comp,options)=>(debug("replaceGTE0",comp,options),comp.trim().replace(re[options.includePrerelease?t.GTE0PRE:t.GTE0],"")),hyphenReplace=incPr=>($0,from,fM,fm,fp,fpr,fb,to,tM,tm,tp,tpr)=>`${from=isX(fM)?"":isX(fm)?`>=${fM}.0.0${incPr?"-0":""}`:isX(fp)?`>=${fM}.${fm}.0${incPr?"-0":""}`:fpr?`>=${from}`:`>=${from}${incPr?"-0":""}`} ${to=isX(tM)?"":isX(tm)?`<${+tM+1}.0.0-0`:isX(tp)?`<${tM}.${+tm+1}.0-0`:tpr?`<=${tM}.${tm}.${tp}-${tpr}`:incPr?`<${tM}.${tm}.${+tp+1}-0`:`<=${to}`}`.trim(),testSet=(set,version,options)=>{for(let i=0;i<set.length;i++)if(!set[i].test(version))return!1;if(version.prerelease.length&&!options.includePrerelease){for(let i=0;i<set.length;i++)if(debug(set[i].semver),set[i].semver!==Comparator.ANY&&set[i].semver.prerelease.length>0){const allowed=set[i].semver;if(allowed.major===version.major&&allowed.minor===version.minor&&allowed.patch===version.patch)return!0}return!1}return!0}},"./node_modules/semver/classes/semver.js":(module,__unused_webpack_exports,__webpack_require__)=>{const debug=__webpack_require__("./node_modules/semver/internal/debug.js"),{MAX_LENGTH,MAX_SAFE_INTEGER}=__webpack_require__("./node_modules/semver/internal/constants.js"),{safeRe:re,t}=__webpack_require__("./node_modules/semver/internal/re.js"),parseOptions=__webpack_require__("./node_modules/semver/internal/parse-options.js"),{compareIdentifiers}=__webpack_require__("./node_modules/semver/internal/identifiers.js");class SemVer{constructor(version,options){if(options=parseOptions(options),version instanceof SemVer){if(version.loose===!!options.loose&&version.includePrerelease===!!options.includePrerelease)return version;version=version.version}else if("string"!=typeof version)throw new TypeError(`Invalid version. Must be a string. Got type "${typeof version}".`);if(version.length>MAX_LENGTH)throw new TypeError(`version is longer than ${MAX_LENGTH} characters`);debug("SemVer",version,options),this.options=options,this.loose=!!options.loose,this.includePrerelease=!!options.includePrerelease;const m=version.trim().match(options.loose?re[t.LOOSE]:re[t.FULL]);if(!m)throw new TypeError(`Invalid Version: ${version}`);if(this.raw=version,this.major=+m[1],this.minor=+m[2],this.patch=+m[3],this.major>MAX_SAFE_INTEGER||this.major<0)throw new TypeError("Invalid major version");if(this.minor>MAX_SAFE_INTEGER||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>MAX_SAFE_INTEGER||this.patch<0)throw new TypeError("Invalid patch version");m[4]?this.prerelease=m[4].split(".").map(id=>{if(/^[0-9]+$/.test(id)){const num=+id;if(num>=0&&num<MAX_SAFE_INTEGER)return num}return id}):this.prerelease=[],this.build=m[5]?m[5].split("."):[],this.format()}format(){return this.version=`${this.major}.${this.minor}.${this.patch}`,this.prerelease.length&&(this.version+=`-${this.prerelease.join(".")}`),this.version}toString(){return this.version}compare(other){if(debug("SemVer.compare",this.version,this.options,other),!(other instanceof SemVer)){if("string"==typeof other&&other===this.version)return 0;other=new SemVer(other,this.options)}return other.version===this.version?0:this.compareMain(other)||this.comparePre(other)}compareMain(other){return other instanceof SemVer||(other=new SemVer(other,this.options)),compareIdentifiers(this.major,other.major)||compareIdentifiers(this.minor,other.minor)||compareIdentifiers(this.patch,other.patch)}comparePre(other){if(other instanceof SemVer||(other=new SemVer(other,this.options)),this.prerelease.length&&!other.prerelease.length)return-1;if(!this.prerelease.length&&other.prerelease.length)return 1;if(!this.prerelease.length&&!other.prerelease.length)return 0;let i=0;do{const a=this.prerelease[i],b=other.prerelease[i];if(debug("prerelease compare",i,a,b),void 0===a&&void 0===b)return 0;if(void 0===b)return 1;if(void 0===a)return-1;if(a!==b)return compareIdentifiers(a,b)}while(++i)}compareBuild(other){other instanceof SemVer||(other=new SemVer(other,this.options));let i=0;do{const a=this.build[i],b=other.build[i];if(debug("build compare",i,a,b),void 0===a&&void 0===b)return 0;if(void 0===b)return 1;if(void 0===a)return-1;if(a!==b)return compareIdentifiers(a,b)}while(++i)}inc(release,identifier,identifierBase){if(release.startsWith("pre")){if(!identifier&&!1===identifierBase)throw new Error("invalid increment argument: identifier is empty");if(identifier){const match=`-${identifier}`.match(this.options.loose?re[t.PRERELEASELOOSE]:re[t.PRERELEASE]);if(!match||match[1]!==identifier)throw new Error(`invalid identifier: ${identifier}`)}}switch(release){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",identifier,identifierBase);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",identifier,identifierBase);break;case"prepatch":this.prerelease.length=0,this.inc("patch",identifier,identifierBase),this.inc("pre",identifier,identifierBase);break;case"prerelease":0===this.prerelease.length&&this.inc("patch",identifier,identifierBase),this.inc("pre",identifier,identifierBase);break;case"release":if(0===this.prerelease.length)throw new Error(`version ${this.raw} is not a prerelease`);this.prerelease.length=0;break;case"major":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case"patch":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case"pre":{const base=Number(identifierBase)?1:0;if(0===this.prerelease.length)this.prerelease=[base];else{let i=this.prerelease.length;for(;--i>=0;)"number"==typeof this.prerelease[i]&&(this.prerelease[i]++,i=-2);if(-1===i){if(identifier===this.prerelease.join(".")&&!1===identifierBase)throw new Error("invalid increment argument: identifier already exists");this.prerelease.push(base)}}if(identifier){let prerelease=[identifier,base];!1===identifierBase&&(prerelease=[identifier]),0===compareIdentifiers(this.prerelease[0],identifier)?isNaN(this.prerelease[1])&&(this.prerelease=prerelease):this.prerelease=prerelease}break}default:throw new Error(`invalid increment argument: ${release}`)}return this.raw=this.format(),this.build.length&&(this.raw+=`+${this.build.join(".")}`),this}}module.exports=SemVer},"./node_modules/semver/functions/clean.js":(module,__unused_webpack_exports,__webpack_require__)=>{const parse=__webpack_require__("./node_modules/semver/functions/parse.js");module.exports=(version,options)=>{const s=parse(version.trim().replace(/^[=v]+/,""),options);return s?s.version:null}},"./node_modules/semver/functions/cmp.js":(module,__unused_webpack_exports,__webpack_require__)=>{const eq=__webpack_require__("./node_modules/semver/functions/eq.js"),neq=__webpack_require__("./node_modules/semver/functions/neq.js"),gt=__webpack_require__("./node_modules/semver/functions/gt.js"),gte=__webpack_require__("./node_modules/semver/functions/gte.js"),lt=__webpack_require__("./node_modules/semver/functions/lt.js"),lte=__webpack_require__("./node_modules/semver/functions/lte.js");module.exports=(a,op,b,loose)=>{switch(op){case"===":return"object"==typeof a&&(a=a.version),"object"==typeof b&&(b=b.version),a===b;case"!==":return"object"==typeof a&&(a=a.version),"object"==typeof b&&(b=b.version),a!==b;case"":case"=":case"==":return eq(a,b,loose);case"!=":return neq(a,b,loose);case">":return gt(a,b,loose);case">=":return gte(a,b,loose);case"<":return lt(a,b,loose);case"<=":return lte(a,b,loose);default:throw new TypeError(`Invalid operator: ${op}`)}}},"./node_modules/semver/functions/coerce.js":(module,__unused_webpack_exports,__webpack_require__)=>{const SemVer=__webpack_require__("./node_modules/semver/classes/semver.js"),parse=__webpack_require__("./node_modules/semver/functions/parse.js"),{safeRe:re,t}=__webpack_require__("./node_modules/semver/internal/re.js");module.exports=(version,options)=>{if(version instanceof SemVer)return version;if("number"==typeof version&&(version=String(version)),"string"!=typeof version)return null;let match=null;if((options=options||{}).rtl){const coerceRtlRegex=options.includePrerelease?re[t.COERCERTLFULL]:re[t.COERCERTL];let next;for(;(next=coerceRtlRegex.exec(version))&&(!match||match.index+match[0].length!==version.length);)match&&next.index+next[0].length===match.index+match[0].length||(match=next),coerceRtlRegex.lastIndex=next.index+next[1].length+next[2].length;coerceRtlRegex.lastIndex=-1}else match=version.match(options.includePrerelease?re[t.COERCEFULL]:re[t.COERCE]);if(null===match)return null;const major=match[2],minor=match[3]||"0",patch=match[4]||"0",prerelease=options.includePrerelease&&match[5]?`-${match[5]}`:"",build=options.includePrerelease&&match[6]?`+${match[6]}`:"";return parse(`${major}.${minor}.${patch}${prerelease}${build}`,options)}},"./node_modules/semver/functions/compare-build.js":(module,__unused_webpack_exports,__webpack_require__)=>{const SemVer=__webpack_require__("./node_modules/semver/classes/semver.js");module.exports=(a,b,loose)=>{const versionA=new SemVer(a,loose),versionB=new SemVer(b,loose);return versionA.compare(versionB)||versionA.compareBuild(versionB)}},"./node_modules/semver/functions/compare-loose.js":(module,__unused_webpack_exports,__webpack_require__)=>{const compare=__webpack_require__("./node_modules/semver/functions/compare.js");module.exports=(a,b)=>compare(a,b,!0)},"./node_modules/semver/functions/compare.js":(module,__unused_webpack_exports,__webpack_require__)=>{const SemVer=__webpack_require__("./node_modules/semver/classes/semver.js");module.exports=(a,b,loose)=>new SemVer(a,loose).compare(new SemVer(b,loose))},"./node_modules/semver/functions/diff.js":(module,__unused_webpack_exports,__webpack_require__)=>{const parse=__webpack_require__("./node_modules/semver/functions/parse.js");module.exports=(version1,version2)=>{const v1=parse(version1,null,!0),v2=parse(version2,null,!0),comparison=v1.compare(v2);if(0===comparison)return null;const v1Higher=comparison>0,highVersion=v1Higher?v1:v2,lowVersion=v1Higher?v2:v1,highHasPre=!!highVersion.prerelease.length;if(!!lowVersion.prerelease.length&&!highHasPre){if(!lowVersion.patch&&!lowVersion.minor)return"major";if(0===lowVersion.compareMain(highVersion))return lowVersion.minor&&!lowVersion.patch?"minor":"patch"}const prefix=highHasPre?"pre":"";return v1.major!==v2.major?prefix+"major":v1.minor!==v2.minor?prefix+"minor":v1.patch!==v2.patch?prefix+"patch":"prerelease"}},"./node_modules/semver/functions/eq.js":(module,__unused_webpack_exports,__webpack_require__)=>{const compare=__webpack_require__("./node_modules/semver/functions/compare.js");module.exports=(a,b,loose)=>0===compare(a,b,loose)},"./node_modules/semver/functions/gt.js":(module,__unused_webpack_exports,__webpack_require__)=>{const compare=__webpack_require__("./node_modules/semver/functions/compare.js");module.exports=(a,b,loose)=>compare(a,b,loose)>0},"./node_modules/semver/functions/gte.js":(module,__unused_webpack_exports,__webpack_require__)=>{const compare=__webpack_require__("./node_modules/semver/functions/compare.js");module.exports=(a,b,loose)=>compare(a,b,loose)>=0},"./node_modules/semver/functions/inc.js":(module,__unused_webpack_exports,__webpack_require__)=>{const SemVer=__webpack_require__("./node_modules/semver/classes/semver.js");module.exports=(version,release,options,identifier,identifierBase)=>{"string"==typeof options&&(identifierBase=identifier,identifier=options,options=void 0);try{return new SemVer(version instanceof SemVer?version.version:version,options).inc(release,identifier,identifierBase).version}catch(er){return null}}},"./node_modules/semver/functions/lt.js":(module,__unused_webpack_exports,__webpack_require__)=>{const compare=__webpack_require__("./node_modules/semver/functions/compare.js");module.exports=(a,b,loose)=>compare(a,b,loose)<0},"./node_modules/semver/functions/lte.js":(module,__unused_webpack_exports,__webpack_require__)=>{const compare=__webpack_require__("./node_modules/semver/functions/compare.js");module.exports=(a,b,loose)=>compare(a,b,loose)<=0},"./node_modules/semver/functions/major.js":(module,__unused_webpack_exports,__webpack_require__)=>{const SemVer=__webpack_require__("./node_modules/semver/classes/semver.js");module.exports=(a,loose)=>new SemVer(a,loose).major},"./node_modules/semver/functions/minor.js":(module,__unused_webpack_exports,__webpack_require__)=>{const SemVer=__webpack_require__("./node_modules/semver/classes/semver.js");module.exports=(a,loose)=>new SemVer(a,loose).minor},"./node_modules/semver/functions/neq.js":(module,__unused_webpack_exports,__webpack_require__)=>{const compare=__webpack_require__("./node_modules/semver/functions/compare.js");module.exports=(a,b,loose)=>0!==compare(a,b,loose)},"./node_modules/semver/functions/parse.js":(module,__unused_webpack_exports,__webpack_require__)=>{const SemVer=__webpack_require__("./node_modules/semver/classes/semver.js");module.exports=(version,options,throwErrors=!1)=>{if(version instanceof SemVer)return version;try{return new SemVer(version,options)}catch(er){if(!throwErrors)return null;throw er}}},"./node_modules/semver/functions/patch.js":(module,__unused_webpack_exports,__webpack_require__)=>{const SemVer=__webpack_require__("./node_modules/semver/classes/semver.js");module.exports=(a,loose)=>new SemVer(a,loose).patch},"./node_modules/semver/functions/prerelease.js":(module,__unused_webpack_exports,__webpack_require__)=>{const parse=__webpack_require__("./node_modules/semver/functions/parse.js");module.exports=(version,options)=>{const parsed=parse(version,options);return parsed&&parsed.prerelease.length?parsed.prerelease:null}},"./node_modules/semver/functions/rcompare.js":(module,__unused_webpack_exports,__webpack_require__)=>{const compare=__webpack_require__("./node_modules/semver/functions/compare.js");module.exports=(a,b,loose)=>compare(b,a,loose)},"./node_modules/semver/functions/rsort.js":(module,__unused_webpack_exports,__webpack_require__)=>{const compareBuild=__webpack_require__("./node_modules/semver/functions/compare-build.js");module.exports=(list,loose)=>list.sort((a,b)=>compareBuild(b,a,loose))},"./node_modules/semver/functions/satisfies.js":(module,__unused_webpack_exports,__webpack_require__)=>{const Range=__webpack_require__("./node_modules/semver/classes/range.js");module.exports=(version,range,options)=>{try{range=new Range(range,options)}catch(er){return!1}return range.test(version)}},"./node_modules/semver/functions/sort.js":(module,__unused_webpack_exports,__webpack_require__)=>{const compareBuild=__webpack_require__("./node_modules/semver/functions/compare-build.js");module.exports=(list,loose)=>list.sort((a,b)=>compareBuild(a,b,loose))},"./node_modules/semver/functions/valid.js":(module,__unused_webpack_exports,__webpack_require__)=>{const parse=__webpack_require__("./node_modules/semver/functions/parse.js");module.exports=(version,options)=>{const v=parse(version,options);return v?v.version:null}},"./node_modules/semver/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{const internalRe=__webpack_require__("./node_modules/semver/internal/re.js"),constants=__webpack_require__("./node_modules/semver/internal/constants.js"),SemVer=__webpack_require__("./node_modules/semver/classes/semver.js"),identifiers=__webpack_require__("./node_modules/semver/internal/identifiers.js"),parse=__webpack_require__("./node_modules/semver/functions/parse.js"),valid=__webpack_require__("./node_modules/semver/functions/valid.js"),clean=__webpack_require__("./node_modules/semver/functions/clean.js"),inc=__webpack_require__("./node_modules/semver/functions/inc.js"),diff=__webpack_require__("./node_modules/semver/functions/diff.js"),major=__webpack_require__("./node_modules/semver/functions/major.js"),minor=__webpack_require__("./node_modules/semver/functions/minor.js"),patch=__webpack_require__("./node_modules/semver/functions/patch.js"),prerelease=__webpack_require__("./node_modules/semver/functions/prerelease.js"),compare=__webpack_require__("./node_modules/semver/functions/compare.js"),rcompare=__webpack_require__("./node_modules/semver/functions/rcompare.js"),compareLoose=__webpack_require__("./node_modules/semver/functions/compare-loose.js"),compareBuild=__webpack_require__("./node_modules/semver/functions/compare-build.js"),sort=__webpack_require__("./node_modules/semver/functions/sort.js"),rsort=__webpack_require__("./node_modules/semver/functions/rsort.js"),gt=__webpack_require__("./node_modules/semver/functions/gt.js"),lt=__webpack_require__("./node_modules/semver/functions/lt.js"),eq=__webpack_require__("./node_modules/semver/functions/eq.js"),neq=__webpack_require__("./node_modules/semver/functions/neq.js"),gte=__webpack_require__("./node_modules/semver/functions/gte.js"),lte=__webpack_require__("./node_modules/semver/functions/lte.js"),cmp=__webpack_require__("./node_modules/semver/functions/cmp.js"),coerce=__webpack_require__("./node_modules/semver/functions/coerce.js"),Comparator=__webpack_require__("./node_modules/semver/classes/comparator.js"),Range=__webpack_require__("./node_modules/semver/classes/range.js"),satisfies=__webpack_require__("./node_modules/semver/functions/satisfies.js"),toComparators=__webpack_require__("./node_modules/semver/ranges/to-comparators.js"),maxSatisfying=__webpack_require__("./node_modules/semver/ranges/max-satisfying.js"),minSatisfying=__webpack_require__("./node_modules/semver/ranges/min-satisfying.js"),minVersion=__webpack_require__("./node_modules/semver/ranges/min-version.js"),validRange=__webpack_require__("./node_modules/semver/ranges/valid.js"),outside=__webpack_require__("./node_modules/semver/ranges/outside.js"),gtr=__webpack_require__("./node_modules/semver/ranges/gtr.js"),ltr=__webpack_require__("./node_modules/semver/ranges/ltr.js"),intersects=__webpack_require__("./node_modules/semver/ranges/intersects.js"),simplifyRange=__webpack_require__("./node_modules/semver/ranges/simplify.js"),subset=__webpack_require__("./node_modules/semver/ranges/subset.js");module.exports={parse,valid,clean,inc,diff,major,minor,patch,prerelease,compare,rcompare,compareLoose,compareBuild,sort,rsort,gt,lt,eq,neq,gte,lte,cmp,coerce,Comparator,Range,satisfies,toComparators,maxSatisfying,minSatisfying,minVersion,validRange,outside,gtr,ltr,intersects,simplifyRange,subset,SemVer,re:internalRe.re,src:internalRe.src,tokens:internalRe.t,SEMVER_SPEC_VERSION:constants.SEMVER_SPEC_VERSION,RELEASE_TYPES:constants.RELEASE_TYPES,compareIdentifiers:identifiers.compareIdentifiers,rcompareIdentifiers:identifiers.rcompareIdentifiers}},"./node_modules/semver/internal/constants.js":module=>{const MAX_SAFE_INTEGER=Number.MAX_SAFE_INTEGER||9007199254740991;module.exports={MAX_LENGTH:256,MAX_SAFE_COMPONENT_LENGTH:16,MAX_SAFE_BUILD_LENGTH:250,MAX_SAFE_INTEGER,RELEASE_TYPES:["major","premajor","minor","preminor","patch","prepatch","prerelease"],SEMVER_SPEC_VERSION:"2.0.0",FLAG_INCLUDE_PRERELEASE:1,FLAG_LOOSE:2}},"./node_modules/semver/internal/debug.js":(module,__unused_webpack_exports,__webpack_require__)=>{var process=__webpack_require__("./node_modules/process/browser.js"),console=__webpack_require__("./node_modules/console-browserify/index.js");const debug="object"==typeof process&&process.env&&process.env.NODE_DEBUG&&/\bsemver\b/i.test(process.env.NODE_DEBUG)?(...args)=>console.error("SEMVER",...args):()=>{};module.exports=debug},"./node_modules/semver/internal/identifiers.js":module=>{const numeric=/^[0-9]+$/,compareIdentifiers=(a,b)=>{const anum=numeric.test(a),bnum=numeric.test(b);return anum&&bnum&&(a=+a,b=+b),a===b?0:anum&&!bnum?-1:bnum&&!anum?1:a<b?-1:1};module.exports={compareIdentifiers,rcompareIdentifiers:(a,b)=>compareIdentifiers(b,a)}},"./node_modules/semver/internal/lrucache.js":module=>{module.exports=class LRUCache{constructor(){this.max=1e3,this.map=new Map}get(key){const value=this.map.get(key);return void 0===value?void 0:(this.map.delete(key),this.map.set(key,value),value)}delete(key){return this.map.delete(key)}set(key,value){if(!this.delete(key)&&void 0!==value){if(this.map.size>=this.max){const firstKey=this.map.keys().next().value;this.delete(firstKey)}this.map.set(key,value)}return this}}},"./node_modules/semver/internal/parse-options.js":module=>{const looseOption=Object.freeze({loose:!0}),emptyOpts=Object.freeze({});module.exports=options=>options?"object"!=typeof options?looseOption:options:emptyOpts},"./node_modules/semver/internal/re.js":(module,exports,__webpack_require__)=>{const{MAX_SAFE_COMPONENT_LENGTH,MAX_SAFE_BUILD_LENGTH,MAX_LENGTH}=__webpack_require__("./node_modules/semver/internal/constants.js"),debug=__webpack_require__("./node_modules/semver/internal/debug.js"),re=(exports=module.exports={}).re=[],safeRe=exports.safeRe=[],src=exports.src=[],safeSrc=exports.safeSrc=[],t=exports.t={};let R=0;const safeRegexReplacements=[["\\s",1],["\\d",MAX_LENGTH],["[a-zA-Z0-9-]",MAX_SAFE_BUILD_LENGTH]],createToken=(name,value,isGlobal)=>{const safe=(value=>{for(const[token,max]of safeRegexReplacements)value=value.split(`${token}*`).join(`${token}{0,${max}}`).split(`${token}+`).join(`${token}{1,${max}}`);return value})(value),index=R++;debug(name,index,value),t[name]=index,src[index]=value,safeSrc[index]=safe,re[index]=new RegExp(value,isGlobal?"g":void 0),safeRe[index]=new RegExp(safe,isGlobal?"g":void 0)};createToken("NUMERICIDENTIFIER","0|[1-9]\\d*"),createToken("NUMERICIDENTIFIERLOOSE","\\d+"),createToken("NONNUMERICIDENTIFIER","\\d*[a-zA-Z-][a-zA-Z0-9-]*"),createToken("MAINVERSION",`(${src[t.NUMERICIDENTIFIER]})\\.(${src[t.NUMERICIDENTIFIER]})\\.(${src[t.NUMERICIDENTIFIER]})`),createToken("MAINVERSIONLOOSE",`(${src[t.NUMERICIDENTIFIERLOOSE]})\\.(${src[t.NUMERICIDENTIFIERLOOSE]})\\.(${src[t.NUMERICIDENTIFIERLOOSE]})`),createToken("PRERELEASEIDENTIFIER",`(?:${src[t.NONNUMERICIDENTIFIER]}|${src[t.NUMERICIDENTIFIER]})`),createToken("PRERELEASEIDENTIFIERLOOSE",`(?:${src[t.NONNUMERICIDENTIFIER]}|${src[t.NUMERICIDENTIFIERLOOSE]})`),createToken("PRERELEASE",`(?:-(${src[t.PRERELEASEIDENTIFIER]}(?:\\.${src[t.PRERELEASEIDENTIFIER]})*))`),createToken("PRERELEASELOOSE",`(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`),createToken("BUILDIDENTIFIER","[a-zA-Z0-9-]+"),createToken("BUILD",`(?:\\+(${src[t.BUILDIDENTIFIER]}(?:\\.${src[t.BUILDIDENTIFIER]})*))`),createToken("FULLPLAIN",`v?${src[t.MAINVERSION]}${src[t.PRERELEASE]}?${src[t.BUILD]}?`),createToken("FULL",`^${src[t.FULLPLAIN]}$`),createToken("LOOSEPLAIN",`[v=\\s]*${src[t.MAINVERSIONLOOSE]}${src[t.PRERELEASELOOSE]}?${src[t.BUILD]}?`),createToken("LOOSE",`^${src[t.LOOSEPLAIN]}$`),createToken("GTLT","((?:<|>)?=?)"),createToken("XRANGEIDENTIFIERLOOSE",`${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`),createToken("XRANGEIDENTIFIER",`${src[t.NUMERICIDENTIFIER]}|x|X|\\*`),createToken("XRANGEPLAIN",`[v=\\s]*(${src[t.XRANGEIDENTIFIER]})(?:\\.(${src[t.XRANGEIDENTIFIER]})(?:\\.(${src[t.XRANGEIDENTIFIER]})(?:${src[t.PRERELEASE]})?${src[t.BUILD]}?)?)?`),createToken("XRANGEPLAINLOOSE",`[v=\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})(?:\\.(${src[t.XRANGEIDENTIFIERLOOSE]})(?:\\.(${src[t.XRANGEIDENTIFIERLOOSE]})(?:${src[t.PRERELEASELOOSE]})?${src[t.BUILD]}?)?)?`),createToken("XRANGE",`^${src[t.GTLT]}\\s*${src[t.XRANGEPLAIN]}$`),createToken("XRANGELOOSE",`^${src[t.GTLT]}\\s*${src[t.XRANGEPLAINLOOSE]}$`),createToken("COERCEPLAIN",`(^|[^\\d])(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}})(?:\\.(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?(?:\\.(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`),createToken("COERCE",`${src[t.COERCEPLAIN]}(?:$|[^\\d])`),createToken("COERCEFULL",src[t.COERCEPLAIN]+`(?:${src[t.PRERELEASE]})?`+`(?:${src[t.BUILD]})?(?:$|[^\\d])`),createToken("COERCERTL",src[t.COERCE],!0),createToken("COERCERTLFULL",src[t.COERCEFULL],!0),createToken("LONETILDE","(?:~>?)"),createToken("TILDETRIM",`(\\s*)${src[t.LONETILDE]}\\s+`,!0),exports.tildeTrimReplace="$1~",createToken("TILDE",`^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`),createToken("TILDELOOSE",`^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`),createToken("LONECARET","(?:\\^)"),createToken("CARETTRIM",`(\\s*)${src[t.LONECARET]}\\s+`,!0),exports.caretTrimReplace="$1^",createToken("CARET",`^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`),createToken("CARETLOOSE",`^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`),createToken("COMPARATORLOOSE",`^${src[t.GTLT]}\\s*(${src[t.LOOSEPLAIN]})$|^$`),createToken("COMPARATOR",`^${src[t.GTLT]}\\s*(${src[t.FULLPLAIN]})$|^$`),createToken("COMPARATORTRIM",`(\\s*)${src[t.GTLT]}\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`,!0),exports.comparatorTrimReplace="$1$2$3",createToken("HYPHENRANGE",`^\\s*(${src[t.XRANGEPLAIN]})\\s+-\\s+(${src[t.XRANGEPLAIN]})\\s*$`),createToken("HYPHENRANGELOOSE",`^\\s*(${src[t.XRANGEPLAINLOOSE]})\\s+-\\s+(${src[t.XRANGEPLAINLOOSE]})\\s*$`),createToken("STAR","(<|>)?=?\\s*\\*"),createToken("GTE0","^\\s*>=\\s*0\\.0\\.0\\s*$"),createToken("GTE0PRE","^\\s*>=\\s*0\\.0\\.0-0\\s*$")},"./node_modules/semver/ranges/gtr.js":(module,__unused_webpack_exports,__webpack_require__)=>{const outside=__webpack_require__("./node_modules/semver/ranges/outside.js");module.exports=(version,range,options)=>outside(version,range,">",options)},"./node_modules/semver/ranges/intersects.js":(module,__unused_webpack_exports,__webpack_require__)=>{const Range=__webpack_require__("./node_modules/semver/classes/range.js");module.exports=(r1,r2,options)=>(r1=new Range(r1,options),r2=new Range(r2,options),r1.intersects(r2,options))},"./node_modules/semver/ranges/ltr.js":(module,__unused_webpack_exports,__webpack_require__)=>{const outside=__webpack_require__("./node_modules/semver/ranges/outside.js");module.exports=(version,range,options)=>outside(version,range,"<",options)},"./node_modules/semver/ranges/max-satisfying.js":(module,__unused_webpack_exports,__webpack_require__)=>{const SemVer=__webpack_require__("./node_modules/semver/classes/semver.js"),Range=__webpack_require__("./node_modules/semver/classes/range.js");module.exports=(versions,range,options)=>{let max=null,maxSV=null,rangeObj=null;try{rangeObj=new Range(range,options)}catch(er){return null}return versions.forEach(v=>{rangeObj.test(v)&&(max&&-1!==maxSV.compare(v)||(max=v,maxSV=new SemVer(max,options)))}),max}},"./node_modules/semver/ranges/min-satisfying.js":(module,__unused_webpack_exports,__webpack_require__)=>{const SemVer=__webpack_require__("./node_modules/semver/classes/semver.js"),Range=__webpack_require__("./node_modules/semver/classes/range.js");module.exports=(versions,range,options)=>{let min=null,minSV=null,rangeObj=null;try{rangeObj=new Range(range,options)}catch(er){return null}return versions.forEach(v=>{rangeObj.test(v)&&(min&&1!==minSV.compare(v)||(min=v,minSV=new SemVer(min,options)))}),min}},"./node_modules/semver/ranges/min-version.js":(module,__unused_webpack_exports,__webpack_require__)=>{const SemVer=__webpack_require__("./node_modules/semver/classes/semver.js"),Range=__webpack_require__("./node_modules/semver/classes/range.js"),gt=__webpack_require__("./node_modules/semver/functions/gt.js");module.exports=(range,loose)=>{range=new Range(range,loose);let minver=new SemVer("0.0.0");if(range.test(minver))return minver;if(minver=new SemVer("0.0.0-0"),range.test(minver))return minver;minver=null;for(let i=0;i<range.set.length;++i){const comparators=range.set[i];let setMin=null;comparators.forEach(comparator=>{const compver=new SemVer(comparator.semver.version);switch(comparator.operator){case">":0===compver.prerelease.length?compver.patch++:compver.prerelease.push(0),compver.raw=compver.format();case"":case">=":setMin&&!gt(compver,setMin)||(setMin=compver);break;case"<":case"<=":break;default:throw new Error(`Unexpected operation: ${comparator.operator}`)}}),!setMin||minver&&!gt(minver,setMin)||(minver=setMin)}return minver&&range.test(minver)?minver:null}},"./node_modules/semver/ranges/outside.js":(module,__unused_webpack_exports,__webpack_require__)=>{const SemVer=__webpack_require__("./node_modules/semver/classes/semver.js"),Comparator=__webpack_require__("./node_modules/semver/classes/comparator.js"),{ANY}=Comparator,Range=__webpack_require__("./node_modules/semver/classes/range.js"),satisfies=__webpack_require__("./node_modules/semver/functions/satisfies.js"),gt=__webpack_require__("./node_modules/semver/functions/gt.js"),lt=__webpack_require__("./node_modules/semver/functions/lt.js"),lte=__webpack_require__("./node_modules/semver/functions/lte.js"),gte=__webpack_require__("./node_modules/semver/functions/gte.js");module.exports=(version,range,hilo,options)=>{let gtfn,ltefn,ltfn,comp,ecomp;switch(version=new SemVer(version,options),range=new Range(range,options),hilo){case">":gtfn=gt,ltefn=lte,ltfn=lt,comp=">",ecomp=">=";break;case"<":gtfn=lt,ltefn=gte,ltfn=gt,comp="<",ecomp="<=";break;default:throw new TypeError('Must provide a hilo val of "<" or ">"')}if(satisfies(version,range,options))return!1;for(let i=0;i<range.set.length;++i){const comparators=range.set[i];let high=null,low=null;if(comparators.forEach(comparator=>{comparator.semver===ANY&&(comparator=new Comparator(">=0.0.0")),high=high||comparator,low=low||comparator,gtfn(comparator.semver,high.semver,options)?high=comparator:ltfn(comparator.semver,low.semver,options)&&(low=comparator)}),high.operator===comp||high.operator===ecomp)return!1;if((!low.operator||low.operator===comp)&&ltefn(version,low.semver))return!1;if(low.operator===ecomp&&ltfn(version,low.semver))return!1}return!0}},"./node_modules/semver/ranges/simplify.js":(module,__unused_webpack_exports,__webpack_require__)=>{const satisfies=__webpack_require__("./node_modules/semver/functions/satisfies.js"),compare=__webpack_require__("./node_modules/semver/functions/compare.js");module.exports=(versions,range,options)=>{const set=[];let first=null,prev=null;const v=versions.sort((a,b)=>compare(a,b,options));for(const version of v){satisfies(version,range,options)?(prev=version,first||(first=version)):(prev&&set.push([first,prev]),prev=null,first=null)}first&&set.push([first,null]);const ranges=[];for(const[min,max]of set)min===max?ranges.push(min):max||min!==v[0]?max?min===v[0]?ranges.push(`<=${max}`):ranges.push(`${min} - ${max}`):ranges.push(`>=${min}`):ranges.push("*");const simplified=ranges.join(" || "),original="string"==typeof range.raw?range.raw:String(range);return simplified.length<original.length?simplified:range}},"./node_modules/semver/ranges/subset.js":(module,__unused_webpack_exports,__webpack_require__)=>{const Range=__webpack_require__("./node_modules/semver/classes/range.js"),Comparator=__webpack_require__("./node_modules/semver/classes/comparator.js"),{ANY}=Comparator,satisfies=__webpack_require__("./node_modules/semver/functions/satisfies.js"),compare=__webpack_require__("./node_modules/semver/functions/compare.js"),minimumVersionWithPreRelease=[new Comparator(">=0.0.0-0")],minimumVersion=[new Comparator(">=0.0.0")],simpleSubset=(sub,dom,options)=>{if(sub===dom)return!0;if(1===sub.length&&sub[0].semver===ANY){if(1===dom.length&&dom[0].semver===ANY)return!0;sub=options.includePrerelease?minimumVersionWithPreRelease:minimumVersion}if(1===dom.length&&dom[0].semver===ANY){if(options.includePrerelease)return!0;dom=minimumVersion}const eqSet=new Set;let gt,lt,gtltComp,higher,lower,hasDomLT,hasDomGT;for(const c of sub)">"===c.operator||">="===c.operator?gt=higherGT(gt,c,options):"<"===c.operator||"<="===c.operator?lt=lowerLT(lt,c,options):eqSet.add(c.semver);if(eqSet.size>1)return null;if(gt&&lt){if(gtltComp=compare(gt.semver,lt.semver,options),gtltComp>0)return null;if(0===gtltComp&&(">="!==gt.operator||"<="!==lt.operator))return null}for(const eq of eqSet){if(gt&&!satisfies(eq,String(gt),options))return null;if(lt&&!satisfies(eq,String(lt),options))return null;for(const c of dom)if(!satisfies(eq,String(c),options))return!1;return!0}let needDomLTPre=!(!lt||options.includePrerelease||!lt.semver.prerelease.length)&&lt.semver,needDomGTPre=!(!gt||options.includePrerelease||!gt.semver.prerelease.length)&&gt.semver;needDomLTPre&&1===needDomLTPre.prerelease.length&&"<"===lt.operator&&0===needDomLTPre.prerelease[0]&&(needDomLTPre=!1);for(const c of dom){if(hasDomGT=hasDomGT||">"===c.operator||">="===c.operator,hasDomLT=hasDomLT||"<"===c.operator||"<="===c.operator,gt)if(needDomGTPre&&c.semver.prerelease&&c.semver.prerelease.length&&c.semver.major===needDomGTPre.major&&c.semver.minor===needDomGTPre.minor&&c.semver.patch===needDomGTPre.patch&&(needDomGTPre=!1),">"===c.operator||">="===c.operator){if(higher=higherGT(gt,c,options),higher===c&&higher!==gt)return!1}else if(">="===gt.operator&&!satisfies(gt.semver,String(c),options))return!1;if(lt)if(needDomLTPre&&c.semver.prerelease&&c.semver.prerelease.length&&c.semver.major===needDomLTPre.major&&c.semver.minor===needDomLTPre.minor&&c.semver.patch===needDomLTPre.patch&&(needDomLTPre=!1),"<"===c.operator||"<="===c.operator){if(lower=lowerLT(lt,c,options),lower===c&&lower!==lt)return!1}else if("<="===lt.operator&&!satisfies(lt.semver,String(c),options))return!1;if(!c.operator&&(lt||gt)&&0!==gtltComp)return!1}return!(gt&&hasDomLT&&!lt&&0!==gtltComp)&&(!(lt&&hasDomGT&&!gt&&0!==gtltComp)&&(!needDomGTPre&&!needDomLTPre))},higherGT=(a,b,options)=>{if(!a)return b;const comp=compare(a.semver,b.semver,options);return comp>0?a:comp<0||">"===b.operator&&">="===a.operator?b:a},lowerLT=(a,b,options)=>{if(!a)return b;const comp=compare(a.semver,b.semver,options);return comp<0?a:comp>0||"<"===b.operator&&"<="===a.operator?b:a};module.exports=(sub,dom,options={})=>{if(sub===dom)return!0;sub=new Range(sub,options),dom=new Range(dom,options);let sawNonNull=!1;OUTER:for(const simpleSub of sub.set){for(const simpleDom of dom.set){const isSub=simpleSubset(simpleSub,simpleDom,options);if(sawNonNull=sawNonNull||null!==isSub,isSub)continue OUTER}if(sawNonNull)return!1}return!0}},"./node_modules/semver/ranges/to-comparators.js":(module,__unused_webpack_exports,__webpack_require__)=>{const Range=__webpack_require__("./node_modules/semver/classes/range.js");module.exports=(range,options)=>new Range(range,options).set.map(comp=>comp.map(c=>c.value).join(" ").trim().split(" "))},"./node_modules/semver/ranges/valid.js":(module,__unused_webpack_exports,__webpack_require__)=>{const Range=__webpack_require__("./node_modules/semver/classes/range.js");module.exports=(range,options)=>{try{return new Range(range,options).range||"*"}catch(er){return null}}}}]);