"use strict";(self.webpackChunklayerswap=self.webpackChunklayerswap||[]).push([[9966],{"./node_modules/ethers/lib.esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BaseContract:()=>BaseContract,BigNumber:()=>bignumber.gH,Contract:()=>Contract,ContractFactory:()=>ContractFactory,FixedNumber:()=>FixedNumber,Signer:()=>lib_esm_Signer,VoidSigner:()=>lib_esm_VoidSigner,Wallet:()=>wallet_lib_esm.Wallet,Wordlist:()=>Wordlist,constants:()=>constants_lib_esm_namespaceObject,errors:()=>node_modules_ethersproject_logger_lib_esm.ErrorCode,ethers:()=>ethers_namespaceObject,getDefaultProvider:()=>getDefaultProvider,logger:()=>ethers_logger,providers:()=>providers_lib_esm_namespaceObject,utils:()=>utils_namespaceObject,version:()=>ethers_lib_esm_version_version,wordlists:()=>wordlists});var constants_lib_esm_namespaceObject={};__webpack_require__.r(constants_lib_esm_namespaceObject),__webpack_require__.d(constants_lib_esm_namespaceObject,{AddressZero:()=>addresses.L,EtherSymbol:()=>EtherSymbol,HashZero:()=>HashZero,MaxInt256:()=>bignumbers.fw,MaxUint256:()=>bignumbers.Is,MinInt256:()=>bignumbers.LV,NegativeOne:()=>bignumbers.eR,One:()=>bignumbers.pD,Two:()=>bignumbers.d0,WeiPerEther:()=>bignumbers.lQ,Zero:()=>bignumbers.XK});var providers_lib_esm_namespaceObject={};__webpack_require__.r(providers_lib_esm_namespaceObject),__webpack_require__.d(providers_lib_esm_namespaceObject,{AlchemyProvider:()=>AlchemyProvider,AlchemyWebSocketProvider:()=>AlchemyWebSocketProvider,AnkrProvider:()=>AnkrProvider,BaseProvider:()=>base_provider.DJ,CloudflareProvider:()=>CloudflareProvider,EtherscanProvider:()=>EtherscanProvider,FallbackProvider:()=>FallbackProvider,Formatter:()=>formatter.ZA,InfuraProvider:()=>InfuraProvider,InfuraWebSocketProvider:()=>InfuraWebSocketProvider,IpcProvider:()=>IpcProvider,JsonRpcBatchProvider:()=>JsonRpcBatchProvider,JsonRpcProvider:()=>json_rpc_provider.F,JsonRpcSigner:()=>json_rpc_provider.c,NodesmithProvider:()=>NodesmithProvider,PocketProvider:()=>PocketProvider,Provider:()=>abstract_provider_lib_esm.Kq,Resolver:()=>base_provider.xR,StaticJsonRpcProvider:()=>StaticJsonRpcProvider,UrlJsonRpcProvider:()=>UrlJsonRpcProvider,Web3Provider:()=>web3_provider.j,WebSocketProvider:()=>WebSocketProvider,getDefaultProvider:()=>getDefaultProvider,getNetwork:()=>networks_lib_esm.N,isCommunityResourcable:()=>formatter.fw,isCommunityResource:()=>formatter.ws,showThrottleMessage:()=>formatter.Zd});var utils_namespaceObject={};__webpack_require__.r(utils_namespaceObject),__webpack_require__.d(utils_namespaceObject,{AbiCoder:()=>abi_coder.y,ConstructorFragment:()=>fragments.Pw,ErrorFragment:()=>fragments.bp,EventFragment:()=>fragments.Zp,FormatTypes:()=>fragments.$o,Fragment:()=>fragments.FK,FunctionFragment:()=>fragments.hc,HDNode:()=>hdnode_lib_esm.HDNode,Indexed:()=>lib_esm_interface.wu,Interface:()=>lib_esm_interface.KA,LogDescription:()=>lib_esm_interface.FW,Logger:()=>node_modules_ethersproject_logger_lib_esm.Logger,ParamType:()=>fragments.aX,RLP:()=>rlp_lib_esm,SigningKey:()=>signing_key_lib_esm.SigningKey,SupportedAlgorithm:()=>types.q,TransactionDescription:()=>lib_esm_interface.dJ,TransactionTypes:()=>_ethersproject_transactions_lib_esm.TransactionTypes,UnicodeNormalizationForm:()=>utf8.dz,Utf8ErrorFuncs:()=>utf8.d5,Utf8ErrorReason:()=>utf8._E,_TypedDataEncoder:()=>typed_data.z,_fetchData:()=>_ethersproject_web_lib_esm._fetchData,_toEscapedUtf8String:()=>utf8.Wj,accessListify:()=>_ethersproject_transactions_lib_esm.accessListify,arrayify:()=>_ethersproject_bytes_lib_esm.arrayify,base58:()=>basex_lib_esm.Base58,base64:()=>base64_lib_esm,checkProperties:()=>_ethersproject_properties_lib_esm.checkProperties,checkResultErrors:()=>abstract_coder.$v,commify:()=>units_lib_esm.commify,computeAddress:()=>_ethersproject_transactions_lib_esm.computeAddress,computeHmac:()=>sha2.L5,computePublicKey:()=>signing_key_lib_esm.computePublicKey,concat:()=>_ethersproject_bytes_lib_esm.concat,deepCopy:()=>_ethersproject_properties_lib_esm.deepCopy,defaultAbiCoder:()=>abi_coder.D,defaultPath:()=>hdnode_lib_esm.defaultPath,defineReadOnly:()=>_ethersproject_properties_lib_esm.defineReadOnly,dnsEncode:()=>namehash.Wh,entropyToMnemonic:()=>hdnode_lib_esm.entropyToMnemonic,fetchJson:()=>_ethersproject_web_lib_esm.fetchJson,formatBytes32String:()=>bytes32.R,formatEther:()=>units_lib_esm.formatEther,formatUnits:()=>units_lib_esm.formatUnits,getAccountPath:()=>hdnode_lib_esm.getAccountPath,getAddress:()=>address_lib_esm.getAddress,getContractAddress:()=>address_lib_esm.getContractAddress,getCreate2Address:()=>address_lib_esm.getCreate2Address,getIcapAddress:()=>address_lib_esm.getIcapAddress,getJsonWalletAddress:()=>inspect.cZ,getStatic:()=>_ethersproject_properties_lib_esm.getStatic,hashMessage:()=>message.A,hexConcat:()=>_ethersproject_bytes_lib_esm.hexConcat,hexDataLength:()=>_ethersproject_bytes_lib_esm.hexDataLength,hexDataSlice:()=>_ethersproject_bytes_lib_esm.hexDataSlice,hexStripZeros:()=>_ethersproject_bytes_lib_esm.hexStripZeros,hexValue:()=>_ethersproject_bytes_lib_esm.hexValue,hexZeroPad:()=>_ethersproject_bytes_lib_esm.hexZeroPad,hexlify:()=>_ethersproject_bytes_lib_esm.hexlify,id:()=>lib_esm_id.id,isAddress:()=>address_lib_esm.isAddress,isBytes:()=>_ethersproject_bytes_lib_esm.isBytes,isBytesLike:()=>_ethersproject_bytes_lib_esm.isBytesLike,isHexString:()=>_ethersproject_bytes_lib_esm.isHexString,isValidMnemonic:()=>hdnode_lib_esm.isValidMnemonic,isValidName:()=>namehash.uV,joinSignature:()=>_ethersproject_bytes_lib_esm.joinSignature,keccak256:()=>keccak256_lib_esm.keccak256,mnemonicToEntropy:()=>hdnode_lib_esm.mnemonicToEntropy,mnemonicToSeed:()=>hdnode_lib_esm.mnemonicToSeed,namehash:()=>namehash.kM,nameprep:()=>idna.j9,parseBytes32String:()=>bytes32.V,parseEther:()=>units_lib_esm.parseEther,parseTransaction:()=>_ethersproject_transactions_lib_esm.parse,parseUnits:()=>units_lib_esm.parseUnits,poll:()=>_ethersproject_web_lib_esm.poll,randomBytes:()=>random.p,recoverAddress:()=>_ethersproject_transactions_lib_esm.recoverAddress,recoverPublicKey:()=>signing_key_lib_esm.recoverPublicKey,resolveProperties:()=>_ethersproject_properties_lib_esm.resolveProperties,ripemd160:()=>sha2.HE,serializeTransaction:()=>_ethersproject_transactions_lib_esm.serialize,sha256:()=>sha2.sc,sha512:()=>sha2.Zf,shallowCopy:()=>_ethersproject_properties_lib_esm.shallowCopy,shuffled:()=>shuffle.A,solidityKeccak256:()=>solidity_lib_esm.keccak256,solidityPack:()=>solidity_lib_esm.pack,soliditySha256:()=>solidity_lib_esm.sha256,splitSignature:()=>_ethersproject_bytes_lib_esm.splitSignature,stripZeros:()=>_ethersproject_bytes_lib_esm.stripZeros,toUtf8Bytes:()=>utf8.YW,toUtf8CodePoints:()=>utf8.dg,toUtf8String:()=>utf8._v,verifyMessage:()=>wallet_lib_esm.verifyMessage,verifyTypedData:()=>wallet_lib_esm.verifyTypedData,zeroPad:()=>_ethersproject_bytes_lib_esm.zeroPad});var ethers_namespaceObject={};__webpack_require__.r(ethers_namespaceObject),__webpack_require__.d(ethers_namespaceObject,{BaseContract:()=>BaseContract,BigNumber:()=>bignumber.gH,Contract:()=>Contract,ContractFactory:()=>ContractFactory,FixedNumber:()=>FixedNumber,Signer:()=>lib_esm_Signer,VoidSigner:()=>lib_esm_VoidSigner,Wallet:()=>wallet_lib_esm.Wallet,Wordlist:()=>Wordlist,constants:()=>constants_lib_esm_namespaceObject,errors:()=>node_modules_ethersproject_logger_lib_esm.ErrorCode,getDefaultProvider:()=>getDefaultProvider,logger:()=>ethers_logger,providers:()=>providers_lib_esm_namespaceObject,utils:()=>utils_namespaceObject,version:()=>ethers_lib_esm_version_version,wordlists:()=>wordlists});var console=__webpack_require__("./node_modules/console-browserify/index.js");let _permanentCensorErrors=!1,_censorErrors=!1;const LogLevels={debug:1,default:2,info:2,warning:3,error:4,off:5};let _logLevel=LogLevels.default,_globalLogger=null;const _normalizeError=function _checkNormalize(){try{const missing=[];if(["NFD","NFC","NFKD","NFKC"].forEach(form=>{try{if("test"!=="test".normalize(form))throw new Error("bad normalize")}catch(error){missing.push(form)}}),missing.length)throw new Error("missing "+missing.join(", "));if(String.fromCharCode(233).normalize("NFD")!==String.fromCharCode(101,769))throw new Error("broken implementation")}catch(error){return error.message}return null}();var LogLevel,ErrorCode;!function(LogLevel){LogLevel.DEBUG="DEBUG",LogLevel.INFO="INFO",LogLevel.WARNING="WARNING",LogLevel.ERROR="ERROR",LogLevel.OFF="OFF"}(LogLevel||(LogLevel={})),function(ErrorCode){ErrorCode.UNKNOWN_ERROR="UNKNOWN_ERROR",ErrorCode.NOT_IMPLEMENTED="NOT_IMPLEMENTED",ErrorCode.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION",ErrorCode.NETWORK_ERROR="NETWORK_ERROR",ErrorCode.SERVER_ERROR="SERVER_ERROR",ErrorCode.TIMEOUT="TIMEOUT",ErrorCode.BUFFER_OVERRUN="BUFFER_OVERRUN",ErrorCode.NUMERIC_FAULT="NUMERIC_FAULT",ErrorCode.MISSING_NEW="MISSING_NEW",ErrorCode.INVALID_ARGUMENT="INVALID_ARGUMENT",ErrorCode.MISSING_ARGUMENT="MISSING_ARGUMENT",ErrorCode.UNEXPECTED_ARGUMENT="UNEXPECTED_ARGUMENT",ErrorCode.CALL_EXCEPTION="CALL_EXCEPTION",ErrorCode.INSUFFICIENT_FUNDS="INSUFFICIENT_FUNDS",ErrorCode.NONCE_EXPIRED="NONCE_EXPIRED",ErrorCode.REPLACEMENT_UNDERPRICED="REPLACEMENT_UNDERPRICED",ErrorCode.UNPREDICTABLE_GAS_LIMIT="UNPREDICTABLE_GAS_LIMIT",ErrorCode.TRANSACTION_REPLACED="TRANSACTION_REPLACED",ErrorCode.ACTION_REJECTED="ACTION_REJECTED"}(ErrorCode||(ErrorCode={}));const HEX="0123456789abcdef";class lib_esm_Logger{constructor(version){Object.defineProperty(this,"version",{enumerable:!0,value:version,writable:!1})}_log(logLevel,args){const level=logLevel.toLowerCase();null==LogLevels[level]&&this.throwArgumentError("invalid log level name","logLevel",logLevel),_logLevel>LogLevels[level]||console.log.apply(console,args)}debug(...args){this._log(lib_esm_Logger.levels.DEBUG,args)}info(...args){this._log(lib_esm_Logger.levels.INFO,args)}warn(...args){this._log(lib_esm_Logger.levels.WARNING,args)}makeError(message,code,params){if(_censorErrors)return this.makeError("censored error",code,{});code||(code=lib_esm_Logger.errors.UNKNOWN_ERROR),params||(params={});const messageDetails=[];Object.keys(params).forEach(key=>{const value=params[key];try{if(value instanceof Uint8Array){let hex="";for(let i=0;i<value.length;i++)hex+=HEX[value[i]>>4],hex+=HEX[15&value[i]];messageDetails.push(key+"=Uint8Array(0x"+hex+")")}else messageDetails.push(key+"="+JSON.stringify(value))}catch(error){messageDetails.push(key+"="+JSON.stringify(params[key].toString()))}}),messageDetails.push(`code=${code}`),messageDetails.push(`version=${this.version}`);const reason=message;let url="";switch(code){case ErrorCode.NUMERIC_FAULT:{url="NUMERIC_FAULT";const fault=message;switch(fault){case"overflow":case"underflow":case"division-by-zero":url+="-"+fault;break;case"negative-power":case"negative-width":url+="-unsupported";break;case"unbound-bitwise-result":url+="-unbound-result"}break}case ErrorCode.CALL_EXCEPTION:case ErrorCode.INSUFFICIENT_FUNDS:case ErrorCode.MISSING_NEW:case ErrorCode.NONCE_EXPIRED:case ErrorCode.REPLACEMENT_UNDERPRICED:case ErrorCode.TRANSACTION_REPLACED:case ErrorCode.UNPREDICTABLE_GAS_LIMIT:url=code}url&&(message+=" [ See: https://links.ethers.org/v5-errors-"+url+" ]"),messageDetails.length&&(message+=" ("+messageDetails.join(", ")+")");const error=new Error(message);return error.reason=reason,error.code=code,Object.keys(params).forEach(function(key){error[key]=params[key]}),error}throwError(message,code,params){throw this.makeError(message,code,params)}throwArgumentError(message,name,value){return this.throwError(message,lib_esm_Logger.errors.INVALID_ARGUMENT,{argument:name,value})}assert(condition,message,code,params){condition||this.throwError(message,code,params)}assertArgument(condition,message,name,value){condition||this.throwArgumentError(message,name,value)}checkNormalize(message){null==message&&(message="platform missing String.prototype.normalize"),_normalizeError&&this.throwError("platform missing String.prototype.normalize",lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:_normalizeError})}checkSafeUint53(value,message){"number"==typeof value&&(null==message&&(message="value not safe"),(value<0||value>=9007199254740991)&&this.throwError(message,lib_esm_Logger.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value}),value%1&&this.throwError(message,lib_esm_Logger.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value}))}checkArgumentCount(count,expectedCount,message){message=message?": "+message:"",count<expectedCount&&this.throwError("missing argument"+message,lib_esm_Logger.errors.MISSING_ARGUMENT,{count,expectedCount}),count>expectedCount&&this.throwError("too many arguments"+message,lib_esm_Logger.errors.UNEXPECTED_ARGUMENT,{count,expectedCount})}checkNew(target,kind){target!==Object&&null!=target||this.throwError("missing new",lib_esm_Logger.errors.MISSING_NEW,{name:kind.name})}checkAbstract(target,kind){target===kind?this.throwError("cannot instantiate abstract class "+JSON.stringify(kind.name)+" directly; use a sub-class",lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{name:target.name,operation:"new"}):target!==Object&&null!=target||this.throwError("missing new",lib_esm_Logger.errors.MISSING_NEW,{name:kind.name})}static globalLogger(){return _globalLogger||(_globalLogger=new lib_esm_Logger("logger/5.8.0")),_globalLogger}static setCensorship(censorship,permanent){if(!censorship&&permanent&&this.globalLogger().throwError("cannot permanently disable censorship",lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"}),_permanentCensorErrors){if(!censorship)return;this.globalLogger().throwError("error censorship permanent",lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}_censorErrors=!!censorship,_permanentCensorErrors=!!permanent}static setLogLevel(logLevel){const level=LogLevels[logLevel.toLowerCase()];null!=level?_logLevel=level:lib_esm_Logger.globalLogger().warn("invalid log level - "+logLevel)}static from(version){return new lib_esm_Logger(version)}}lib_esm_Logger.errors=ErrorCode,lib_esm_Logger.levels=LogLevel;const logger=new lib_esm_Logger("bytes/5.8.0");function isHexable(value){return!!value.toHexString}function addSlice(array){return array.slice||(array.slice=function(){const args=Array.prototype.slice.call(arguments);return addSlice(new Uint8Array(Array.prototype.slice.apply(array,args)))}),array}function lib_esm_isBytesLike(value){return lib_esm_isHexString(value)&&!(value.length%2)||lib_esm_isBytes(value)}function isInteger(value){return"number"==typeof value&&value==value&&value%1==0}function lib_esm_isBytes(value){if(null==value)return!1;if(value.constructor===Uint8Array)return!0;if("string"==typeof value)return!1;if(!isInteger(value.length)||value.length<0)return!1;for(let i=0;i<value.length;i++){const v=value[i];if(!isInteger(v)||v<0||v>=256)return!1}return!0}function lib_esm_arrayify(value,options){if(options||(options={}),"number"==typeof value){logger.checkSafeUint53(value,"invalid arrayify value");const result=[];for(;value;)result.unshift(255&value),value=parseInt(String(value/256));return 0===result.length&&result.push(0),addSlice(new Uint8Array(result))}if(options.allowMissingPrefix&&"string"==typeof value&&"0x"!==value.substring(0,2)&&(value="0x"+value),isHexable(value)&&(value=value.toHexString()),lib_esm_isHexString(value)){let hex=value.substring(2);hex.length%2&&("left"===options.hexPad?hex="0"+hex:"right"===options.hexPad?hex+="0":logger.throwArgumentError("hex data is odd-length","value",value));const result=[];for(let i=0;i<hex.length;i+=2)result.push(parseInt(hex.substring(i,i+2),16));return addSlice(new Uint8Array(result))}return lib_esm_isBytes(value)?addSlice(new Uint8Array(value)):logger.throwArgumentError("invalid arrayify value","value",value)}function lib_esm_concat(items){const objects=items.map(item=>lib_esm_arrayify(item)),length=objects.reduce((accum,item)=>accum+item.length,0),result=new Uint8Array(length);return objects.reduce((offset,object)=>(result.set(object,offset),offset+object.length),0),addSlice(result)}function lib_esm_isHexString(value,length){return!("string"!=typeof value||!value.match(/^0x[0-9A-Fa-f]*$/))&&(!length||value.length===2+2*length)}function lib_esm_hexlify(value,options){if(options||(options={}),"number"==typeof value){logger.checkSafeUint53(value,"invalid hexlify value");let hex="";for(;value;)hex="0123456789abcdef"[15&value]+hex,value=Math.floor(value/16);return hex.length?(hex.length%2&&(hex="0"+hex),"0x"+hex):"0x00"}if("bigint"==typeof value)return(value=value.toString(16)).length%2?"0x0"+value:"0x"+value;if(options.allowMissingPrefix&&"string"==typeof value&&"0x"!==value.substring(0,2)&&(value="0x"+value),isHexable(value))return value.toHexString();if(lib_esm_isHexString(value))return value.length%2&&("left"===options.hexPad?value="0x0"+value.substring(2):"right"===options.hexPad?value+="0":logger.throwArgumentError("hex data is odd-length","value",value)),value.toLowerCase();if(lib_esm_isBytes(value)){let result="0x";for(let i=0;i<value.length;i++){let v=value[i];result+="0123456789abcdef"[(240&v)>>4]+"0123456789abcdef"[15&v]}return result}return logger.throwArgumentError("invalid hexlify value","value",value)}function lib_esm_hexDataSlice(data,offset,endOffset){return"string"!=typeof data?data=lib_esm_hexlify(data):(!lib_esm_isHexString(data)||data.length%2)&&logger.throwArgumentError("invalid hexData","value",data),offset=2+2*offset,null!=endOffset?"0x"+data.substring(offset,2+2*endOffset):"0x"+data.substring(offset)}function lib_esm_hexZeroPad(value,length){for("string"!=typeof value?value=lib_esm_hexlify(value):lib_esm_isHexString(value)||logger.throwArgumentError("invalid hex string","value",value),value.length>2*length+2&&logger.throwArgumentError("value out of range","value",arguments[1]);value.length<2*length+2;)value="0x0"+value.substring(2);return value}var bn=__webpack_require__("./node_modules/bn.js/lib/bn.js");var BN=__webpack_require__.n(bn)().BN;const bignumber_logger=new lib_esm_Logger("bignumber/5.8.0"),_constructorGuard={};let _warnedToStringRadix=!1;class bignumber_BigNumber{constructor(constructorGuard,hex){constructorGuard!==_constructorGuard&&bignumber_logger.throwError("cannot call constructor directly; use BigNumber.from",lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:"new (BigNumber)"}),this._hex=hex,this._isBigNumber=!0,Object.freeze(this)}fromTwos(value){return toBigNumber(toBN(this).fromTwos(value))}toTwos(value){return toBigNumber(toBN(this).toTwos(value))}abs(){return"-"===this._hex[0]?bignumber_BigNumber.from(this._hex.substring(1)):this}add(other){return toBigNumber(toBN(this).add(toBN(other)))}sub(other){return toBigNumber(toBN(this).sub(toBN(other)))}div(other){return bignumber_BigNumber.from(other).isZero()&&throwFault("division-by-zero","div"),toBigNumber(toBN(this).div(toBN(other)))}mul(other){return toBigNumber(toBN(this).mul(toBN(other)))}mod(other){const value=toBN(other);return value.isNeg()&&throwFault("division-by-zero","mod"),toBigNumber(toBN(this).umod(value))}pow(other){const value=toBN(other);return value.isNeg()&&throwFault("negative-power","pow"),toBigNumber(toBN(this).pow(value))}and(other){const value=toBN(other);return(this.isNegative()||value.isNeg())&&throwFault("unbound-bitwise-result","and"),toBigNumber(toBN(this).and(value))}or(other){const value=toBN(other);return(this.isNegative()||value.isNeg())&&throwFault("unbound-bitwise-result","or"),toBigNumber(toBN(this).or(value))}xor(other){const value=toBN(other);return(this.isNegative()||value.isNeg())&&throwFault("unbound-bitwise-result","xor"),toBigNumber(toBN(this).xor(value))}mask(value){return(this.isNegative()||value<0)&&throwFault("negative-width","mask"),toBigNumber(toBN(this).maskn(value))}shl(value){return(this.isNegative()||value<0)&&throwFault("negative-width","shl"),toBigNumber(toBN(this).shln(value))}shr(value){return(this.isNegative()||value<0)&&throwFault("negative-width","shr"),toBigNumber(toBN(this).shrn(value))}eq(other){return toBN(this).eq(toBN(other))}lt(other){return toBN(this).lt(toBN(other))}lte(other){return toBN(this).lte(toBN(other))}gt(other){return toBN(this).gt(toBN(other))}gte(other){return toBN(this).gte(toBN(other))}isNegative(){return"-"===this._hex[0]}isZero(){return toBN(this).isZero()}toNumber(){try{return toBN(this).toNumber()}catch(error){throwFault("overflow","toNumber",this.toString())}return null}toBigInt(){try{return BigInt(this.toString())}catch(e){}return bignumber_logger.throwError("this platform does not support BigInt",lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{value:this.toString()})}toString(){return arguments.length>0&&(10===arguments[0]?_warnedToStringRadix||(_warnedToStringRadix=!0,bignumber_logger.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")):16===arguments[0]?bignumber_logger.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()",lib_esm_Logger.errors.UNEXPECTED_ARGUMENT,{}):bignumber_logger.throwError("BigNumber.toString does not accept parameters",lib_esm_Logger.errors.UNEXPECTED_ARGUMENT,{})),toBN(this).toString(10)}toHexString(){return this._hex}toJSON(key){return{type:"BigNumber",hex:this.toHexString()}}static from(value){if(value instanceof bignumber_BigNumber)return value;if("string"==typeof value)return value.match(/^-?0x[0-9a-f]+$/i)?new bignumber_BigNumber(_constructorGuard,toHex(value)):value.match(/^-?[0-9]+$/)?new bignumber_BigNumber(_constructorGuard,toHex(new BN(value))):bignumber_logger.throwArgumentError("invalid BigNumber string","value",value);if("number"==typeof value)return value%1&&throwFault("underflow","BigNumber.from",value),(value>=9007199254740991||value<=-9007199254740991)&&throwFault("overflow","BigNumber.from",value),bignumber_BigNumber.from(String(value));const anyValue=value;if("bigint"==typeof anyValue)return bignumber_BigNumber.from(anyValue.toString());if(lib_esm_isBytes(anyValue))return bignumber_BigNumber.from(lib_esm_hexlify(anyValue));if(anyValue)if(anyValue.toHexString){const hex=anyValue.toHexString();if("string"==typeof hex)return bignumber_BigNumber.from(hex)}else{let hex=anyValue._hex;if(null==hex&&"BigNumber"===anyValue.type&&(hex=anyValue.hex),"string"==typeof hex&&(lib_esm_isHexString(hex)||"-"===hex[0]&&lib_esm_isHexString(hex.substring(1))))return bignumber_BigNumber.from(hex)}return bignumber_logger.throwArgumentError("invalid BigNumber value","value",value)}static isBigNumber(value){return!(!value||!value._isBigNumber)}}function toHex(value){if("string"!=typeof value)return toHex(value.toString(16));if("-"===value[0])return"-"===(value=value.substring(1))[0]&&bignumber_logger.throwArgumentError("invalid hex","value",value),"0x00"===(value=toHex(value))?value:"-"+value;if("0x"!==value.substring(0,2)&&(value="0x"+value),"0x"===value)return"0x00";for(value.length%2&&(value="0x0"+value.substring(2));value.length>4&&"0x00"===value.substring(0,4);)value="0x"+value.substring(4);return value}function toBigNumber(value){return bignumber_BigNumber.from(toHex(value))}function toBN(value){const hex=bignumber_BigNumber.from(value).toHexString();return"-"===hex[0]?new BN("-"+hex.substring(3),16):new BN(hex.substring(2),16)}function throwFault(fault,operation,value){const params={fault,operation};return null!=value&&(params.value=value),bignumber_logger.throwError(fault,lib_esm_Logger.errors.NUMERIC_FAULT,params)}var __awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const lib_esm_logger=new lib_esm_Logger("properties/5.8.0");function defineReadOnly(object,name,value){Object.defineProperty(object,name,{enumerable:!0,value,writable:!1})}function getStatic(ctor,key){for(let i=0;i<32;i++){if(ctor[key])return ctor[key];if(!ctor.prototype||"object"!=typeof ctor.prototype)break;ctor=Object.getPrototypeOf(ctor.prototype).constructor}return null}function resolveProperties(object){return __awaiter(this,void 0,void 0,function*(){const promises=Object.keys(object).map(key=>{const value=object[key];return Promise.resolve(value).then(v=>({key,value:v}))});return(yield Promise.all(promises)).reduce((accum,result)=>(accum[result.key]=result.value,accum),{})})}function shallowCopy(object){const result={};for(const key in object)result[key]=object[key];return result}const opaque={bigint:!0,boolean:!0,function:!0,number:!0,string:!0};function _isFrozen(object){if(null==object||opaque[typeof object])return!0;if(Array.isArray(object)||"object"==typeof object){if(!Object.isFrozen(object))return!1;const keys=Object.keys(object);for(let i=0;i<keys.length;i++){let value=null;try{value=object[keys[i]]}catch(error){continue}if(!_isFrozen(value))return!1}return!0}return lib_esm_logger.throwArgumentError("Cannot deepCopy "+typeof object,"object",object)}function _deepCopy(object){if(_isFrozen(object))return object;if(Array.isArray(object))return Object.freeze(object.map(item=>deepCopy(item)));if("object"==typeof object){const result={};for(const key in object){const value=object[key];void 0!==value&&defineReadOnly(result,key,deepCopy(value))}return result}return lib_esm_logger.throwArgumentError("Cannot deepCopy "+typeof object,"object",object)}function deepCopy(object){return _deepCopy(object)}class Description{constructor(info){for(const key in info)this[key]=deepCopy(info[key])}}const abstract_coder_logger=new lib_esm_Logger("abi/5.8.0");class Coder{constructor(name,type,localName,dynamic){this.name=name,this.type=type,this.localName=localName,this.dynamic=dynamic}_throwError(message,value){abstract_coder_logger.throwArgumentError(message,this.localName,value)}}class Writer{constructor(wordSize){defineReadOnly(this,"wordSize",wordSize||32),this._data=[],this._dataLength=0,this._padding=new Uint8Array(wordSize)}get data(){return function lib_esm_hexConcat(items){let result="0x";return items.forEach(item=>{result+=lib_esm_hexlify(item).substring(2)}),result}(this._data)}get length(){return this._dataLength}_writeData(data){return this._data.push(data),this._dataLength+=data.length,data.length}appendWriter(writer){return this._writeData(lib_esm_concat(writer._data))}writeBytes(value){let bytes=lib_esm_arrayify(value);const paddingOffset=bytes.length%this.wordSize;return paddingOffset&&(bytes=lib_esm_concat([bytes,this._padding.slice(paddingOffset)])),this._writeData(bytes)}_getValue(value){let bytes=lib_esm_arrayify(bignumber_BigNumber.from(value));return bytes.length>this.wordSize&&abstract_coder_logger.throwError("value out-of-bounds",lib_esm_Logger.errors.BUFFER_OVERRUN,{length:this.wordSize,offset:bytes.length}),bytes.length%this.wordSize&&(bytes=lib_esm_concat([this._padding.slice(bytes.length%this.wordSize),bytes])),bytes}writeValue(value){return this._writeData(this._getValue(value))}writeUpdatableValue(){const offset=this._data.length;return this._data.push(this._padding),this._dataLength+=this.wordSize,value=>{this._data[offset]=this._getValue(value)}}}class Reader{constructor(data,wordSize,coerceFunc,allowLoose){defineReadOnly(this,"_data",lib_esm_arrayify(data)),defineReadOnly(this,"wordSize",wordSize||32),defineReadOnly(this,"_coerceFunc",coerceFunc),defineReadOnly(this,"allowLoose",allowLoose),this._offset=0}get data(){return lib_esm_hexlify(this._data)}get consumed(){return this._offset}static coerce(name,value){let match=name.match("^u?int([0-9]+)$");return match&&parseInt(match[1])<=48&&(value=value.toNumber()),value}coerce(name,value){return this._coerceFunc?this._coerceFunc(name,value):Reader.coerce(name,value)}_peekBytes(offset,length,loose){let alignedLength=Math.ceil(length/this.wordSize)*this.wordSize;return this._offset+alignedLength>this._data.length&&(this.allowLoose&&loose&&this._offset+length<=this._data.length?alignedLength=length:abstract_coder_logger.throwError("data out-of-bounds",lib_esm_Logger.errors.BUFFER_OVERRUN,{length:this._data.length,offset:this._offset+alignedLength})),this._data.slice(this._offset,this._offset+alignedLength)}subReader(offset){return new Reader(this._data.slice(this._offset+offset),this.wordSize,this._coerceFunc,this.allowLoose)}readBytes(length,loose){let bytes=this._peekBytes(0,length,!!loose);return this._offset+=bytes.length,bytes.slice(0,length)}readValue(){return bignumber_BigNumber.from(this.readBytes(this.wordSize))}}var sha3=__webpack_require__("./node_modules/js-sha3/src/sha3.js"),sha3_default=__webpack_require__.n(sha3);function lib_esm_keccak256(data){return"0x"+sha3_default().keccak_256(lib_esm_arrayify(data))}const rlp_lib_esm_logger=new lib_esm_Logger("rlp/5.8.0");function arrayifyInteger(value){const result=[];for(;value;)result.unshift(255&value),value>>=8;return result}function _encode(object){if(Array.isArray(object)){let payload=[];if(object.forEach(function(child){payload=payload.concat(_encode(child))}),payload.length<=55)return payload.unshift(192+payload.length),payload;const length=arrayifyInteger(payload.length);return length.unshift(247+length.length),length.concat(payload)}lib_esm_isBytesLike(object)||rlp_lib_esm_logger.throwArgumentError("RLP object must be BytesLike","object",object);const data=Array.prototype.slice.call(lib_esm_arrayify(object));if(1===data.length&&data[0]<=127)return data;if(data.length<=55)return data.unshift(128+data.length),data;const length=arrayifyInteger(data.length);return length.unshift(183+length.length),length.concat(data)}function encode(object){return lib_esm_hexlify(_encode(object))}const address_lib_esm_logger=new lib_esm_Logger("address/5.8.0");function getChecksumAddress(address){lib_esm_isHexString(address,20)||address_lib_esm_logger.throwArgumentError("invalid address","address",address);const chars=(address=address.toLowerCase()).substring(2).split(""),expanded=new Uint8Array(40);for(let i=0;i<40;i++)expanded[i]=chars[i].charCodeAt(0);const hashed=lib_esm_arrayify(lib_esm_keccak256(expanded));for(let i=0;i<40;i+=2)hashed[i>>1]>>4>=8&&(chars[i]=chars[i].toUpperCase()),(15&hashed[i>>1])>=8&&(chars[i+1]=chars[i+1].toUpperCase());return"0x"+chars.join("")}const ibanLookup={};for(let i=0;i<10;i++)ibanLookup[String(i)]=String(i);for(let i=0;i<26;i++)ibanLookup[String.fromCharCode(65+i)]=String(10+i);const safeDigits=Math.floor(function log10(x){return Math.log10?Math.log10(x):Math.log(x)/Math.LN10}(9007199254740991));function ibanChecksum(address){let expanded=(address=(address=address.toUpperCase()).substring(4)+address.substring(0,2)+"00").split("").map(c=>ibanLookup[c]).join("");for(;expanded.length>=safeDigits;){let block=expanded.substring(0,safeDigits);expanded=parseInt(block,10)%97+expanded.substring(block.length)}let checksum=String(98-parseInt(expanded,10)%97);for(;checksum.length<2;)checksum="0"+checksum;return checksum}function lib_esm_getAddress(address){let result=null;if("string"!=typeof address&&address_lib_esm_logger.throwArgumentError("invalid address","address",address),address.match(/^(0x)?[0-9a-fA-F]{40}$/))"0x"!==address.substring(0,2)&&(address="0x"+address),result=getChecksumAddress(address),address.match(/([A-F].*[a-f])|([a-f].*[A-F])/)&&result!==address&&address_lib_esm_logger.throwArgumentError("bad address checksum","address",address);else if(address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)){for(address.substring(2,4)!==ibanChecksum(address)&&address_lib_esm_logger.throwArgumentError("bad icap checksum","address",address),result=function _base36To16(value){return new BN(value,36).toString(16)}(address.substring(4));result.length<40;)result="0"+result;result=getChecksumAddress("0x"+result)}else address_lib_esm_logger.throwArgumentError("invalid address","address",address);return result}function getContractAddress(transaction){let from=null;try{from=lib_esm_getAddress(transaction.from)}catch(error){address_lib_esm_logger.throwArgumentError("missing from address","transaction",transaction)}return lib_esm_getAddress(lib_esm_hexDataSlice(lib_esm_keccak256(encode([from,function lib_esm_stripZeros(value){let result=lib_esm_arrayify(value);if(0===result.length)return result;let start=0;for(;start<result.length&&0===result[start];)start++;return start&&(result=result.slice(start)),result}(lib_esm_arrayify(bignumber_BigNumber.from(transaction.nonce).toHexString()))])),12))}const utf8_logger=new lib_esm_Logger("strings/5.8.0");var UnicodeNormalizationForm,Utf8ErrorReason;function ignoreFunc(reason,offset,bytes,output,badCodepoint){if(reason===Utf8ErrorReason.BAD_PREFIX||reason===Utf8ErrorReason.UNEXPECTED_CONTINUE){let i=0;for(let o=offset+1;o<bytes.length&&bytes[o]>>6==2;o++)i++;return i}return reason===Utf8ErrorReason.OVERRUN?bytes.length-offset-1:0}!function(UnicodeNormalizationForm){UnicodeNormalizationForm.current="",UnicodeNormalizationForm.NFC="NFC",UnicodeNormalizationForm.NFD="NFD",UnicodeNormalizationForm.NFKC="NFKC",UnicodeNormalizationForm.NFKD="NFKD"}(UnicodeNormalizationForm||(UnicodeNormalizationForm={})),function(Utf8ErrorReason){Utf8ErrorReason.UNEXPECTED_CONTINUE="unexpected continuation byte",Utf8ErrorReason.BAD_PREFIX="bad codepoint prefix",Utf8ErrorReason.OVERRUN="string overrun",Utf8ErrorReason.MISSING_CONTINUE="missing continuation byte",Utf8ErrorReason.OUT_OF_RANGE="out of UTF-8 range",Utf8ErrorReason.UTF16_SURROGATE="UTF-16 surrogate",Utf8ErrorReason.OVERLONG="overlong representation"}(Utf8ErrorReason||(Utf8ErrorReason={}));const Utf8ErrorFuncs=Object.freeze({error:function errorFunc(reason,offset,bytes,output,badCodepoint){return utf8_logger.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`,"bytes",bytes)},ignore:ignoreFunc,replace:function replaceFunc(reason,offset,bytes,output,badCodepoint){return reason===Utf8ErrorReason.OVERLONG?(output.push(badCodepoint),0):(output.push(65533),ignoreFunc(reason,offset,bytes))}});function getUtf8CodePoints(bytes,onError){null==onError&&(onError=Utf8ErrorFuncs.error),bytes=lib_esm_arrayify(bytes);const result=[];let i=0;for(;i<bytes.length;){const c=bytes[i++];if(!(c>>7)){result.push(c);continue}let extraLength=null,overlongMask=null;if(192==(224&c))extraLength=1,overlongMask=127;else if(224==(240&c))extraLength=2,overlongMask=2047;else{if(240!=(248&c)){i+=onError(128==(192&c)?Utf8ErrorReason.UNEXPECTED_CONTINUE:Utf8ErrorReason.BAD_PREFIX,i-1,bytes,result);continue}extraLength=3,overlongMask=65535}if(i-1+extraLength>=bytes.length){i+=onError(Utf8ErrorReason.OVERRUN,i-1,bytes,result);continue}let res=c&(1<<8-extraLength-1)-1;for(let j=0;j<extraLength;j++){let nextChar=bytes[i];if(128!=(192&nextChar)){i+=onError(Utf8ErrorReason.MISSING_CONTINUE,i,bytes,result),res=null;break}res=res<<6|63&nextChar,i++}null!==res&&(res>1114111?i+=onError(Utf8ErrorReason.OUT_OF_RANGE,i-1-extraLength,bytes,result,res):res>=55296&&res<=57343?i+=onError(Utf8ErrorReason.UTF16_SURROGATE,i-1-extraLength,bytes,result,res):res<=overlongMask?i+=onError(Utf8ErrorReason.OVERLONG,i-1-extraLength,bytes,result,res):result.push(res))}return result}function toUtf8Bytes(str,form=UnicodeNormalizationForm.current){form!=UnicodeNormalizationForm.current&&(utf8_logger.checkNormalize(),str=str.normalize(form));let result=[];for(let i=0;i<str.length;i++){const c=str.charCodeAt(i);if(c<128)result.push(c);else if(c<2048)result.push(c>>6|192),result.push(63&c|128);else if(55296==(64512&c)){i++;const c2=str.charCodeAt(i);if(i>=str.length||56320!=(64512&c2))throw new Error("invalid utf-8 string");const pair=65536+((1023&c)<<10)+(1023&c2);result.push(pair>>18|240),result.push(pair>>12&63|128),result.push(pair>>6&63|128),result.push(63&pair|128)}else result.push(c>>12|224),result.push(c>>6&63|128),result.push(63&c|128)}return lib_esm_arrayify(result)}function toUtf8String(bytes,onError){return function _toUtf8String(codePoints){return codePoints.map(codePoint=>codePoint<=65535?String.fromCharCode(codePoint):(codePoint-=65536,String.fromCharCode(55296+(codePoint>>10&1023),56320+(1023&codePoint)))).join("")}(getUtf8CodePoints(bytes,onError))}function id(text){return lib_esm_keccak256(toUtf8Bytes(text))}class AddressCoder extends Coder{constructor(localName){super("address","address",localName,!1)}defaultValue(){return"0x0000000000000000000000000000000000000000"}encode(writer,value){try{value=lib_esm_getAddress(value)}catch(error){this._throwError(error.message,value)}return writer.writeValue(value)}decode(reader){return lib_esm_getAddress(lib_esm_hexZeroPad(reader.readValue().toHexString(),20))}}class AnonymousCoder extends Coder{constructor(coder){super(coder.name,coder.type,void 0,coder.dynamic),this.coder=coder}defaultValue(){return this.coder.defaultValue()}encode(writer,value){return this.coder.encode(writer,value)}decode(reader){return this.coder.decode(reader)}}const array_logger=new lib_esm_Logger("abi/5.8.0");function pack(writer,coders,values){let arrayValues=null;if(Array.isArray(values))arrayValues=values;else if(values&&"object"==typeof values){let unique={};arrayValues=coders.map(coder=>{const name=coder.localName;return name||array_logger.throwError("cannot encode object for signature with missing names",lib_esm_Logger.errors.INVALID_ARGUMENT,{argument:"values",coder,value:values}),unique[name]&&array_logger.throwError("cannot encode object for signature with duplicate names",lib_esm_Logger.errors.INVALID_ARGUMENT,{argument:"values",coder,value:values}),unique[name]=!0,values[name]})}else array_logger.throwArgumentError("invalid tuple value","tuple",values);coders.length!==arrayValues.length&&array_logger.throwArgumentError("types/value length mismatch","tuple",values);let staticWriter=new Writer(writer.wordSize),dynamicWriter=new Writer(writer.wordSize),updateFuncs=[];coders.forEach((coder,index)=>{let value=arrayValues[index];if(coder.dynamic){let dynamicOffset=dynamicWriter.length;coder.encode(dynamicWriter,value);let updateFunc=staticWriter.writeUpdatableValue();updateFuncs.push(baseOffset=>{updateFunc(baseOffset+dynamicOffset)})}else coder.encode(staticWriter,value)}),updateFuncs.forEach(func=>{func(staticWriter.length)});let length=writer.appendWriter(staticWriter);return length+=writer.appendWriter(dynamicWriter),length}function unpack(reader,coders){let values=[],baseReader=reader.subReader(0);coders.forEach(coder=>{let value=null;if(coder.dynamic){let offset=reader.readValue(),offsetReader=baseReader.subReader(offset.toNumber());try{value=coder.decode(offsetReader)}catch(error){if(error.code===lib_esm_Logger.errors.BUFFER_OVERRUN)throw error;value=error,value.baseType=coder.name,value.name=coder.localName,value.type=coder.type}}else try{value=coder.decode(reader)}catch(error){if(error.code===lib_esm_Logger.errors.BUFFER_OVERRUN)throw error;value=error,value.baseType=coder.name,value.name=coder.localName,value.type=coder.type}null!=value&&values.push(value)});const uniqueNames=coders.reduce((accum,coder)=>{const name=coder.localName;return name&&(accum[name]||(accum[name]=0),accum[name]++),accum},{});coders.forEach((coder,index)=>{let name=coder.localName;if(!name||1!==uniqueNames[name])return;if("length"===name&&(name="_length"),null!=values[name])return;const value=values[index];value instanceof Error?Object.defineProperty(values,name,{enumerable:!0,get:()=>{throw value}}):values[name]=value});for(let i=0;i<values.length;i++){const value=values[i];value instanceof Error&&Object.defineProperty(values,i,{enumerable:!0,get:()=>{throw value}})}return Object.freeze(values)}class ArrayCoder extends Coder{constructor(coder,length,localName){super("array",coder.type+"["+(length>=0?length:"")+"]",localName,-1===length||coder.dynamic),this.coder=coder,this.length=length}defaultValue(){const defaultChild=this.coder.defaultValue(),result=[];for(let i=0;i<this.length;i++)result.push(defaultChild);return result}encode(writer,value){Array.isArray(value)||this._throwError("expected array value",value);let count=this.length;-1===count&&(count=value.length,writer.writeValue(value.length)),array_logger.checkArgumentCount(value.length,count,"coder array"+(this.localName?" "+this.localName:""));let coders=[];for(let i=0;i<value.length;i++)coders.push(this.coder);return pack(writer,coders,value)}decode(reader){let count=this.length;-1===count&&(count=reader.readValue().toNumber(),32*count>reader._data.length&&array_logger.throwError("insufficient data length",lib_esm_Logger.errors.BUFFER_OVERRUN,{length:reader._data.length,count}));let coders=[];for(let i=0;i<count;i++)coders.push(new AnonymousCoder(this.coder));return reader.coerce(this.name,unpack(reader,coders))}}class BooleanCoder extends Coder{constructor(localName){super("bool","bool",localName,!1)}defaultValue(){return!1}encode(writer,value){return writer.writeValue(value?1:0)}decode(reader){return reader.coerce(this.type,!reader.readValue().isZero())}}class DynamicBytesCoder extends Coder{constructor(type,localName){super(type,type,localName,!0)}defaultValue(){return"0x"}encode(writer,value){value=lib_esm_arrayify(value);let length=writer.writeValue(value.length);return length+=writer.writeBytes(value),length}decode(reader){return reader.readBytes(reader.readValue().toNumber(),!0)}}class BytesCoder extends DynamicBytesCoder{constructor(localName){super("bytes",localName)}decode(reader){return reader.coerce(this.name,lib_esm_hexlify(super.decode(reader)))}}class FixedBytesCoder extends Coder{constructor(size,localName){let name="bytes"+String(size);super(name,name,localName,!1),this.size=size}defaultValue(){return"0x0000000000000000000000000000000000000000000000000000000000000000".substring(0,2+2*this.size)}encode(writer,value){let data=lib_esm_arrayify(value);return data.length!==this.size&&this._throwError("incorrect data length",value),writer.writeBytes(data)}decode(reader){return reader.coerce(this.name,lib_esm_hexlify(reader.readBytes(this.size)))}}class NullCoder extends Coder{constructor(localName){super("null","",localName,!1)}defaultValue(){return null}encode(writer,value){return null!=value&&this._throwError("not null",value),writer.writeBytes([])}decode(reader){return reader.readBytes(0),reader.coerce(this.name,null)}}const NegativeOne=bignumber_BigNumber.from(-1),bignumbers_Zero=bignumber_BigNumber.from(0),One=bignumber_BigNumber.from(1),MaxUint256=bignumber_BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");class NumberCoder extends Coder{constructor(size,signed,localName){const name=(signed?"int":"uint")+8*size;super(name,name,localName,!1),this.size=size,this.signed=signed}defaultValue(){return 0}encode(writer,value){let v=bignumber_BigNumber.from(value),maxUintValue=MaxUint256.mask(8*writer.wordSize);if(this.signed){let bounds=maxUintValue.mask(8*this.size-1);(v.gt(bounds)||v.lt(bounds.add(One).mul(NegativeOne)))&&this._throwError("value out-of-bounds",value)}else(v.lt(bignumbers_Zero)||v.gt(maxUintValue.mask(8*this.size)))&&this._throwError("value out-of-bounds",value);return v=v.toTwos(8*this.size).mask(8*this.size),this.signed&&(v=v.fromTwos(8*this.size).toTwos(8*writer.wordSize)),writer.writeValue(v)}decode(reader){let value=reader.readValue().mask(8*this.size);return this.signed&&(value=value.fromTwos(8*this.size)),reader.coerce(this.name,value)}}class StringCoder extends DynamicBytesCoder{constructor(localName){super("string",localName)}defaultValue(){return""}encode(writer,value){return super.encode(writer,toUtf8Bytes(value))}decode(reader){return toUtf8String(super.decode(reader))}}class TupleCoder extends Coder{constructor(coders,localName){let dynamic=!1;const types=[];coders.forEach(coder=>{coder.dynamic&&(dynamic=!0),types.push(coder.type)});super("tuple","tuple("+types.join(",")+")",localName,dynamic),this.coders=coders}defaultValue(){const values=[];this.coders.forEach(coder=>{values.push(coder.defaultValue())});const uniqueNames=this.coders.reduce((accum,coder)=>{const name=coder.localName;return name&&(accum[name]||(accum[name]=0),accum[name]++),accum},{});return this.coders.forEach((coder,index)=>{let name=coder.localName;name&&1===uniqueNames[name]&&("length"===name&&(name="_length"),null==values[name]&&(values[name]=values[index]))}),Object.freeze(values)}encode(writer,value){return pack(writer,this.coders,value)}decode(reader){return reader.coerce(this.name,unpack(reader,this.coders))}}var fragments_console=__webpack_require__("./node_modules/console-browserify/index.js");const fragments_logger=new lib_esm_Logger("abi/5.8.0"),fragments_constructorGuard={};let ModifiersBytes={calldata:!0,memory:!0,storage:!0},ModifiersNest={calldata:!0,memory:!0};function checkModifier(type,name){if("bytes"===type||"string"===type){if(ModifiersBytes[name])return!0}else if("address"===type){if("payable"===name)return!0}else if((type.indexOf("[")>=0||"tuple"===type)&&ModifiersNest[name])return!0;return(ModifiersBytes[name]||"payable"===name)&&fragments_logger.throwArgumentError("invalid modifier","name",name),!1}function populate(object,params){for(let key in params)defineReadOnly(object,key,params[key])}const FormatTypes=Object.freeze({sighash:"sighash",minimal:"minimal",full:"full",json:"json"}),paramTypeArray=new RegExp(/^(.*)\[([0-9]*)\]$/);class ParamType{constructor(constructorGuard,params){constructorGuard!==fragments_constructorGuard&&fragments_logger.throwError("use fromString",lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:"new ParamType()"}),populate(this,params);let match=this.type.match(paramTypeArray);populate(this,match?{arrayLength:parseInt(match[2]||"-1"),arrayChildren:ParamType.fromObject({type:match[1],components:this.components}),baseType:"array"}:{arrayLength:null,arrayChildren:null,baseType:null!=this.components?"tuple":this.type}),this._isParamType=!0,Object.freeze(this)}format(format){if(format||(format=FormatTypes.sighash),FormatTypes[format]||fragments_logger.throwArgumentError("invalid format type","format",format),format===FormatTypes.json){let result={type:"tuple"===this.baseType?"tuple":this.type,name:this.name||void 0};return"boolean"==typeof this.indexed&&(result.indexed=this.indexed),this.components&&(result.components=this.components.map(comp=>JSON.parse(comp.format(format)))),JSON.stringify(result)}let result="";return"array"===this.baseType?(result+=this.arrayChildren.format(format),result+="["+(this.arrayLength<0?"":String(this.arrayLength))+"]"):"tuple"===this.baseType?(format!==FormatTypes.sighash&&(result+=this.type),result+="("+this.components.map(comp=>comp.format(format)).join(format===FormatTypes.full?", ":",")+")"):result+=this.type,format!==FormatTypes.sighash&&(!0===this.indexed&&(result+=" indexed"),format===FormatTypes.full&&this.name&&(result+=" "+this.name)),result}static from(value,allowIndexed){return"string"==typeof value?ParamType.fromString(value,allowIndexed):ParamType.fromObject(value)}static fromObject(value){return ParamType.isParamType(value)?value:new ParamType(fragments_constructorGuard,{name:value.name||null,type:verifyType(value.type),indexed:null==value.indexed?null:!!value.indexed,components:value.components?value.components.map(ParamType.fromObject):null})}static fromString(value,allowIndexed){return function ParamTypify(node){return ParamType.fromObject({name:node.name,type:node.type,indexed:node.indexed,components:node.components})}(function parseParamType(param,allowIndexed){let originalParam=param;function throwError(i){fragments_logger.throwArgumentError(`unexpected character at position ${i}`,"param",param)}function newNode(parent){let node={type:"",name:"",parent,state:{allowType:!0}};return allowIndexed&&(node.indexed=!1),node}param=param.replace(/\s/g," ");let parent={type:"",name:"",state:{allowType:!0}},node=parent;for(let i=0;i<param.length;i++){let c=param[i];switch(c){case"(":node.state.allowType&&""===node.type?node.type="tuple":node.state.allowParams||throwError(i),node.state.allowType=!1,node.type=verifyType(node.type),node.components=[newNode(node)],node=node.components[0];break;case")":delete node.state,"indexed"===node.name&&(allowIndexed||throwError(i),node.indexed=!0,node.name=""),checkModifier(node.type,node.name)&&(node.name=""),node.type=verifyType(node.type);let child=node;node=node.parent,node||throwError(i),delete child.parent,node.state.allowParams=!1,node.state.allowName=!0,node.state.allowArray=!0;break;case",":delete node.state,"indexed"===node.name&&(allowIndexed||throwError(i),node.indexed=!0,node.name=""),checkModifier(node.type,node.name)&&(node.name=""),node.type=verifyType(node.type);let sibling=newNode(node.parent);node.parent.components.push(sibling),delete node.parent,node=sibling;break;case" ":node.state.allowType&&""!==node.type&&(node.type=verifyType(node.type),delete node.state.allowType,node.state.allowName=!0,node.state.allowParams=!0),node.state.allowName&&""!==node.name&&("indexed"===node.name?(allowIndexed||throwError(i),node.indexed&&throwError(i),node.indexed=!0,node.name=""):checkModifier(node.type,node.name)?node.name="":node.state.allowName=!1);break;case"[":node.state.allowArray||throwError(i),node.type+=c,node.state.allowArray=!1,node.state.allowName=!1,node.state.readArray=!0;break;case"]":node.state.readArray||throwError(i),node.type+=c,node.state.readArray=!1,node.state.allowArray=!0,node.state.allowName=!0;break;default:node.state.allowType?(node.type+=c,node.state.allowParams=!0,node.state.allowArray=!0):node.state.allowName?(node.name+=c,delete node.state.allowArray):node.state.readArray?node.type+=c:throwError(i)}}return node.parent&&fragments_logger.throwArgumentError("unexpected eof","param",param),delete parent.state,"indexed"===node.name?(allowIndexed||throwError(originalParam.length-7),node.indexed&&throwError(originalParam.length-7),node.indexed=!0,node.name=""):checkModifier(node.type,node.name)&&(node.name=""),parent.type=verifyType(parent.type),parent}(value,!!allowIndexed))}static isParamType(value){return!(null==value||!value._isParamType)}}function parseParams(value,allowIndex){return function splitNesting(value){value=value.trim();let result=[],accum="",depth=0;for(let offset=0;offset<value.length;offset++){let c=value[offset];","===c&&0===depth?(result.push(accum),accum=""):(accum+=c,"("===c?depth++:")"===c&&(depth--,-1===depth&&fragments_logger.throwArgumentError("unbalanced parenthesis","value",value)))}accum&&result.push(accum);return result}(value).map(param=>ParamType.fromString(param,allowIndex))}class Fragment{constructor(constructorGuard,params){constructorGuard!==fragments_constructorGuard&&fragments_logger.throwError("use a static from method",lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:"new Fragment()"}),populate(this,params),this._isFragment=!0,Object.freeze(this)}static from(value){return Fragment.isFragment(value)?value:"string"==typeof value?Fragment.fromString(value):Fragment.fromObject(value)}static fromObject(value){if(Fragment.isFragment(value))return value;switch(value.type){case"function":return FunctionFragment.fromObject(value);case"event":return EventFragment.fromObject(value);case"constructor":return ConstructorFragment.fromObject(value);case"error":return ErrorFragment.fromObject(value);case"fallback":case"receive":return null}return fragments_logger.throwArgumentError("invalid fragment object","value",value)}static fromString(value){return"event"===(value=(value=(value=value.replace(/\s/g," ")).replace(/\(/g," (").replace(/\)/g,") ").replace(/\s+/g," ")).trim()).split(" ")[0]?EventFragment.fromString(value.substring(5).trim()):"function"===value.split(" ")[0]?FunctionFragment.fromString(value.substring(8).trim()):"constructor"===value.split("(")[0].trim()?ConstructorFragment.fromString(value.trim()):"error"===value.split(" ")[0]?ErrorFragment.fromString(value.substring(5).trim()):fragments_logger.throwArgumentError("unsupported fragment","value",value)}static isFragment(value){return!(!value||!value._isFragment)}}class EventFragment extends Fragment{format(format){if(format||(format=FormatTypes.sighash),FormatTypes[format]||fragments_logger.throwArgumentError("invalid format type","format",format),format===FormatTypes.json)return JSON.stringify({type:"event",anonymous:this.anonymous,name:this.name,inputs:this.inputs.map(input=>JSON.parse(input.format(format)))});let result="";return format!==FormatTypes.sighash&&(result+="event "),result+=this.name+"("+this.inputs.map(input=>input.format(format)).join(format===FormatTypes.full?", ":",")+") ",format!==FormatTypes.sighash&&this.anonymous&&(result+="anonymous "),result.trim()}static from(value){return"string"==typeof value?EventFragment.fromString(value):EventFragment.fromObject(value)}static fromObject(value){if(EventFragment.isEventFragment(value))return value;"event"!==value.type&&fragments_logger.throwArgumentError("invalid event object","value",value);const params={name:verifyIdentifier(value.name),anonymous:value.anonymous,inputs:value.inputs?value.inputs.map(ParamType.fromObject):[],type:"event"};return new EventFragment(fragments_constructorGuard,params)}static fromString(value){let match=value.match(regexParen);match||fragments_logger.throwArgumentError("invalid event string","value",value);let anonymous=!1;return match[3].split(" ").forEach(modifier=>{switch(modifier.trim()){case"anonymous":anonymous=!0;break;case"":break;default:fragments_logger.warn("unknown modifier: "+modifier)}}),EventFragment.fromObject({name:match[1].trim(),anonymous,inputs:parseParams(match[2],!0),type:"event"})}static isEventFragment(value){return value&&value._isFragment&&"event"===value.type}}function parseGas(value,params){params.gas=null;let comps=value.split("@");return 1!==comps.length?(comps.length>2&&fragments_logger.throwArgumentError("invalid human-readable ABI signature","value",value),comps[1].match(/^[0-9]+$/)||fragments_logger.throwArgumentError("invalid human-readable ABI signature gas","value",value),params.gas=bignumber_BigNumber.from(comps[1]),comps[0]):value}function parseModifiers(value,params){params.constant=!1,params.payable=!1,params.stateMutability="nonpayable",value.split(" ").forEach(modifier=>{switch(modifier.trim()){case"constant":params.constant=!0;break;case"payable":params.payable=!0,params.stateMutability="payable";break;case"nonpayable":params.payable=!1,params.stateMutability="nonpayable";break;case"pure":params.constant=!0,params.stateMutability="pure";break;case"view":params.constant=!0,params.stateMutability="view";break;case"external":case"public":case"":break;default:fragments_console.log("unknown modifier: "+modifier)}})}function verifyState(value){let result={constant:!1,payable:!0,stateMutability:"payable"};return null!=value.stateMutability?(result.stateMutability=value.stateMutability,result.constant="view"===result.stateMutability||"pure"===result.stateMutability,null!=value.constant&&!!value.constant!==result.constant&&fragments_logger.throwArgumentError("cannot have constant function with mutability "+result.stateMutability,"value",value),result.payable="payable"===result.stateMutability,null!=value.payable&&!!value.payable!==result.payable&&fragments_logger.throwArgumentError("cannot have payable function with mutability "+result.stateMutability,"value",value)):null!=value.payable?(result.payable=!!value.payable,null!=value.constant||result.payable||"constructor"===value.type||fragments_logger.throwArgumentError("unable to determine stateMutability","value",value),result.constant=!!value.constant,result.constant?result.stateMutability="view":result.stateMutability=result.payable?"payable":"nonpayable",result.payable&&result.constant&&fragments_logger.throwArgumentError("cannot have constant payable function","value",value)):null!=value.constant?(result.constant=!!value.constant,result.payable=!result.constant,result.stateMutability=result.constant?"view":"payable"):"constructor"!==value.type&&fragments_logger.throwArgumentError("unable to determine stateMutability","value",value),result}class ConstructorFragment extends Fragment{format(format){if(format||(format=FormatTypes.sighash),FormatTypes[format]||fragments_logger.throwArgumentError("invalid format type","format",format),format===FormatTypes.json)return JSON.stringify({type:"constructor",stateMutability:"nonpayable"!==this.stateMutability?this.stateMutability:void 0,payable:this.payable,gas:this.gas?this.gas.toNumber():void 0,inputs:this.inputs.map(input=>JSON.parse(input.format(format)))});format===FormatTypes.sighash&&fragments_logger.throwError("cannot format a constructor for sighash",lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:"format(sighash)"});let result="constructor("+this.inputs.map(input=>input.format(format)).join(format===FormatTypes.full?", ":",")+") ";return this.stateMutability&&"nonpayable"!==this.stateMutability&&(result+=this.stateMutability+" "),result.trim()}static from(value){return"string"==typeof value?ConstructorFragment.fromString(value):ConstructorFragment.fromObject(value)}static fromObject(value){if(ConstructorFragment.isConstructorFragment(value))return value;"constructor"!==value.type&&fragments_logger.throwArgumentError("invalid constructor object","value",value);let state=verifyState(value);state.constant&&fragments_logger.throwArgumentError("constructor cannot be constant","value",value);const params={name:null,type:value.type,inputs:value.inputs?value.inputs.map(ParamType.fromObject):[],payable:state.payable,stateMutability:state.stateMutability,gas:value.gas?bignumber_BigNumber.from(value.gas):null};return new ConstructorFragment(fragments_constructorGuard,params)}static fromString(value){let params={type:"constructor"},parens=(value=parseGas(value,params)).match(regexParen);return parens&&"constructor"===parens[1].trim()||fragments_logger.throwArgumentError("invalid constructor string","value",value),params.inputs=parseParams(parens[2].trim(),!1),parseModifiers(parens[3].trim(),params),ConstructorFragment.fromObject(params)}static isConstructorFragment(value){return value&&value._isFragment&&"constructor"===value.type}}class FunctionFragment extends ConstructorFragment{format(format){if(format||(format=FormatTypes.sighash),FormatTypes[format]||fragments_logger.throwArgumentError("invalid format type","format",format),format===FormatTypes.json)return JSON.stringify({type:"function",name:this.name,constant:this.constant,stateMutability:"nonpayable"!==this.stateMutability?this.stateMutability:void 0,payable:this.payable,gas:this.gas?this.gas.toNumber():void 0,inputs:this.inputs.map(input=>JSON.parse(input.format(format))),outputs:this.outputs.map(output=>JSON.parse(output.format(format)))});let result="";return format!==FormatTypes.sighash&&(result+="function "),result+=this.name+"("+this.inputs.map(input=>input.format(format)).join(format===FormatTypes.full?", ":",")+") ",format!==FormatTypes.sighash&&(this.stateMutability?"nonpayable"!==this.stateMutability&&(result+=this.stateMutability+" "):this.constant&&(result+="view "),this.outputs&&this.outputs.length&&(result+="returns ("+this.outputs.map(output=>output.format(format)).join(", ")+") "),null!=this.gas&&(result+="@"+this.gas.toString()+" ")),result.trim()}static from(value){return"string"==typeof value?FunctionFragment.fromString(value):FunctionFragment.fromObject(value)}static fromObject(value){if(FunctionFragment.isFunctionFragment(value))return value;"function"!==value.type&&fragments_logger.throwArgumentError("invalid function object","value",value);let state=verifyState(value);const params={type:value.type,name:verifyIdentifier(value.name),constant:state.constant,inputs:value.inputs?value.inputs.map(ParamType.fromObject):[],outputs:value.outputs?value.outputs.map(ParamType.fromObject):[],payable:state.payable,stateMutability:state.stateMutability,gas:value.gas?bignumber_BigNumber.from(value.gas):null};return new FunctionFragment(fragments_constructorGuard,params)}static fromString(value){let params={type:"function"},comps=(value=parseGas(value,params)).split(" returns ");comps.length>2&&fragments_logger.throwArgumentError("invalid function string","value",value);let parens=comps[0].match(regexParen);if(parens||fragments_logger.throwArgumentError("invalid function signature","value",value),params.name=parens[1].trim(),params.name&&verifyIdentifier(params.name),params.inputs=parseParams(parens[2],!1),parseModifiers(parens[3].trim(),params),comps.length>1){let returns=comps[1].match(regexParen);""==returns[1].trim()&&""==returns[3].trim()||fragments_logger.throwArgumentError("unexpected tokens","value",value),params.outputs=parseParams(returns[2],!1)}else params.outputs=[];return FunctionFragment.fromObject(params)}static isFunctionFragment(value){return value&&value._isFragment&&"function"===value.type}}function checkForbidden(fragment){const sig=fragment.format();return"Error(string)"!==sig&&"Panic(uint256)"!==sig||fragments_logger.throwArgumentError(`cannot specify user defined ${sig} error`,"fragment",fragment),fragment}class ErrorFragment extends Fragment{format(format){if(format||(format=FormatTypes.sighash),FormatTypes[format]||fragments_logger.throwArgumentError("invalid format type","format",format),format===FormatTypes.json)return JSON.stringify({type:"error",name:this.name,inputs:this.inputs.map(input=>JSON.parse(input.format(format)))});let result="";return format!==FormatTypes.sighash&&(result+="error "),result+=this.name+"("+this.inputs.map(input=>input.format(format)).join(format===FormatTypes.full?", ":",")+") ",result.trim()}static from(value){return"string"==typeof value?ErrorFragment.fromString(value):ErrorFragment.fromObject(value)}static fromObject(value){if(ErrorFragment.isErrorFragment(value))return value;"error"!==value.type&&fragments_logger.throwArgumentError("invalid error object","value",value);const params={type:value.type,name:verifyIdentifier(value.name),inputs:value.inputs?value.inputs.map(ParamType.fromObject):[]};return checkForbidden(new ErrorFragment(fragments_constructorGuard,params))}static fromString(value){let params={type:"error"},parens=value.match(regexParen);return parens||fragments_logger.throwArgumentError("invalid error signature","value",value),params.name=parens[1].trim(),params.name&&verifyIdentifier(params.name),params.inputs=parseParams(parens[2],!1),checkForbidden(ErrorFragment.fromObject(params))}static isErrorFragment(value){return value&&value._isFragment&&"error"===value.type}}function verifyType(type){return type.match(/^uint($|[^1-9])/)?type="uint256"+type.substring(4):type.match(/^int($|[^1-9])/)&&(type="int256"+type.substring(3)),type}const regexIdentifier=new RegExp("^[a-zA-Z$_][a-zA-Z0-9$_]*$");function verifyIdentifier(value){return value&&value.match(regexIdentifier)||fragments_logger.throwArgumentError(`invalid identifier "${value}"`,"value",value),value}const regexParen=new RegExp("^([^)(]*)\\((.*)\\)([^)(]*)$");const abi_coder_logger=new lib_esm_Logger("abi/5.8.0"),paramTypeBytes=new RegExp(/^bytes([0-9]*)$/),paramTypeNumber=new RegExp(/^(u?int)([0-9]*)$/);const defaultAbiCoder=new class AbiCoder{constructor(coerceFunc){defineReadOnly(this,"coerceFunc",coerceFunc||null)}_getCoder(param){switch(param.baseType){case"address":return new AddressCoder(param.name);case"bool":return new BooleanCoder(param.name);case"string":return new StringCoder(param.name);case"bytes":return new BytesCoder(param.name);case"array":return new ArrayCoder(this._getCoder(param.arrayChildren),param.arrayLength,param.name);case"tuple":return new TupleCoder((param.components||[]).map(component=>this._getCoder(component)),param.name);case"":return new NullCoder(param.name)}let match=param.type.match(paramTypeNumber);if(match){let size=parseInt(match[2]||"256");return(0===size||size>256||size%8!=0)&&abi_coder_logger.throwArgumentError("invalid "+match[1]+" bit length","param",param),new NumberCoder(size/8,"int"===match[1],param.name)}if(match=param.type.match(paramTypeBytes),match){let size=parseInt(match[1]);return(0===size||size>32)&&abi_coder_logger.throwArgumentError("invalid bytes length","param",param),new FixedBytesCoder(size,param.name)}return abi_coder_logger.throwArgumentError("invalid type","type",param.type)}_getWordSize(){return 32}_getReader(data,allowLoose){return new Reader(data,this._getWordSize(),this.coerceFunc,allowLoose)}_getWriter(){return new Writer(this._getWordSize())}getDefaultValue(types){const coders=types.map(type=>this._getCoder(ParamType.from(type)));return new TupleCoder(coders,"_").defaultValue()}encode(types,values){types.length!==values.length&&abi_coder_logger.throwError("types/values length mismatch",lib_esm_Logger.errors.INVALID_ARGUMENT,{count:{types:types.length,values:values.length},value:{types,values}});const coders=types.map(type=>this._getCoder(ParamType.from(type))),coder=new TupleCoder(coders,"_"),writer=this._getWriter();return coder.encode(writer,values),writer.data}decode(types,data,loose){const coders=types.map(type=>this._getCoder(ParamType.from(type)));return new TupleCoder(coders,"_").decode(this._getReader(lib_esm_arrayify(data),loose))}},interface_logger=new lib_esm_Logger("abi/5.8.0");class LogDescription extends Description{}class TransactionDescription extends Description{}class ErrorDescription extends Description{}class Indexed extends Description{static isIndexed(value){return!(!value||!value._isIndexed)}}const BuiltinErrors={"0x08c379a0":{signature:"Error(string)",name:"Error",inputs:["string"],reason:!0},"0x4e487b71":{signature:"Panic(uint256)",name:"Panic",inputs:["uint256"]}};function wrapAccessError(property,error){const wrap=new Error(`deferred error during ABI decoding triggered accessing ${property}`);return wrap.error=error,wrap}class Interface{constructor(fragments){let abi=[];abi="string"==typeof fragments?JSON.parse(fragments):fragments,defineReadOnly(this,"fragments",abi.map(fragment=>Fragment.from(fragment)).filter(fragment=>null!=fragment)),defineReadOnly(this,"_abiCoder",getStatic(new.target,"getAbiCoder")()),defineReadOnly(this,"functions",{}),defineReadOnly(this,"errors",{}),defineReadOnly(this,"events",{}),defineReadOnly(this,"structs",{}),this.fragments.forEach(fragment=>{let bucket=null;switch(fragment.type){case"constructor":return this.deploy?void interface_logger.warn("duplicate definition - constructor"):void defineReadOnly(this,"deploy",fragment);case"function":bucket=this.functions;break;case"event":bucket=this.events;break;case"error":bucket=this.errors;break;default:return}let signature=fragment.format();bucket[signature]?interface_logger.warn("duplicate definition - "+signature):bucket[signature]=fragment}),this.deploy||defineReadOnly(this,"deploy",ConstructorFragment.from({payable:!1,type:"constructor"})),defineReadOnly(this,"_isInterface",!0)}format(format){format||(format=FormatTypes.full),format===FormatTypes.sighash&&interface_logger.throwArgumentError("interface does not support formatting sighash","format",format);const abi=this.fragments.map(fragment=>fragment.format(format));return format===FormatTypes.json?JSON.stringify(abi.map(j=>JSON.parse(j))):abi}static getAbiCoder(){return defaultAbiCoder}static getAddress(address){return lib_esm_getAddress(address)}static getSighash(fragment){return lib_esm_hexDataSlice(id(fragment.format()),0,4)}static getEventTopic(eventFragment){return id(eventFragment.format())}getFunction(nameOrSignatureOrSighash){if(lib_esm_isHexString(nameOrSignatureOrSighash)){for(const name in this.functions)if(nameOrSignatureOrSighash===this.getSighash(name))return this.functions[name];interface_logger.throwArgumentError("no matching function","sighash",nameOrSignatureOrSighash)}if(-1===nameOrSignatureOrSighash.indexOf("(")){const name=nameOrSignatureOrSighash.trim(),matching=Object.keys(this.functions).filter(f=>f.split("(")[0]===name);return 0===matching.length?interface_logger.throwArgumentError("no matching function","name",name):matching.length>1&&interface_logger.throwArgumentError("multiple matching functions","name",name),this.functions[matching[0]]}const result=this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];return result||interface_logger.throwArgumentError("no matching function","signature",nameOrSignatureOrSighash),result}getEvent(nameOrSignatureOrTopic){if(lib_esm_isHexString(nameOrSignatureOrTopic)){const topichash=nameOrSignatureOrTopic.toLowerCase();for(const name in this.events)if(topichash===this.getEventTopic(name))return this.events[name];interface_logger.throwArgumentError("no matching event","topichash",topichash)}if(-1===nameOrSignatureOrTopic.indexOf("(")){const name=nameOrSignatureOrTopic.trim(),matching=Object.keys(this.events).filter(f=>f.split("(")[0]===name);return 0===matching.length?interface_logger.throwArgumentError("no matching event","name",name):matching.length>1&&interface_logger.throwArgumentError("multiple matching events","name",name),this.events[matching[0]]}const result=this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];return result||interface_logger.throwArgumentError("no matching event","signature",nameOrSignatureOrTopic),result}getError(nameOrSignatureOrSighash){if(lib_esm_isHexString(nameOrSignatureOrSighash)){const getSighash=getStatic(this.constructor,"getSighash");for(const name in this.errors){if(nameOrSignatureOrSighash===getSighash(this.errors[name]))return this.errors[name]}interface_logger.throwArgumentError("no matching error","sighash",nameOrSignatureOrSighash)}if(-1===nameOrSignatureOrSighash.indexOf("(")){const name=nameOrSignatureOrSighash.trim(),matching=Object.keys(this.errors).filter(f=>f.split("(")[0]===name);return 0===matching.length?interface_logger.throwArgumentError("no matching error","name",name):matching.length>1&&interface_logger.throwArgumentError("multiple matching errors","name",name),this.errors[matching[0]]}const result=this.errors[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];return result||interface_logger.throwArgumentError("no matching error","signature",nameOrSignatureOrSighash),result}getSighash(fragment){if("string"==typeof fragment)try{fragment=this.getFunction(fragment)}catch(error){try{fragment=this.getError(fragment)}catch(_){throw error}}return getStatic(this.constructor,"getSighash")(fragment)}getEventTopic(eventFragment){return"string"==typeof eventFragment&&(eventFragment=this.getEvent(eventFragment)),getStatic(this.constructor,"getEventTopic")(eventFragment)}_decodeParams(params,data){return this._abiCoder.decode(params,data)}_encodeParams(params,values){return this._abiCoder.encode(params,values)}encodeDeploy(values){return this._encodeParams(this.deploy.inputs,values||[])}decodeErrorResult(fragment,data){"string"==typeof fragment&&(fragment=this.getError(fragment));const bytes=lib_esm_arrayify(data);return lib_esm_hexlify(bytes.slice(0,4))!==this.getSighash(fragment)&&interface_logger.throwArgumentError(`data signature does not match error ${fragment.name}.`,"data",lib_esm_hexlify(bytes)),this._decodeParams(fragment.inputs,bytes.slice(4))}encodeErrorResult(fragment,values){return"string"==typeof fragment&&(fragment=this.getError(fragment)),lib_esm_hexlify(lib_esm_concat([this.getSighash(fragment),this._encodeParams(fragment.inputs,values||[])]))}decodeFunctionData(functionFragment,data){"string"==typeof functionFragment&&(functionFragment=this.getFunction(functionFragment));const bytes=lib_esm_arrayify(data);return lib_esm_hexlify(bytes.slice(0,4))!==this.getSighash(functionFragment)&&interface_logger.throwArgumentError(`data signature does not match function ${functionFragment.name}.`,"data",lib_esm_hexlify(bytes)),this._decodeParams(functionFragment.inputs,bytes.slice(4))}encodeFunctionData(functionFragment,values){return"string"==typeof functionFragment&&(functionFragment=this.getFunction(functionFragment)),lib_esm_hexlify(lib_esm_concat([this.getSighash(functionFragment),this._encodeParams(functionFragment.inputs,values||[])]))}decodeFunctionResult(functionFragment,data){"string"==typeof functionFragment&&(functionFragment=this.getFunction(functionFragment));let bytes=lib_esm_arrayify(data),reason=null,message="",errorArgs=null,errorName=null,errorSignature=null;switch(bytes.length%this._abiCoder._getWordSize()){case 0:try{return this._abiCoder.decode(functionFragment.outputs,bytes)}catch(error){}break;case 4:{const selector=lib_esm_hexlify(bytes.slice(0,4)),builtin=BuiltinErrors[selector];if(builtin)errorArgs=this._abiCoder.decode(builtin.inputs,bytes.slice(4)),errorName=builtin.name,errorSignature=builtin.signature,builtin.reason&&(reason=errorArgs[0]),"Error"===errorName?message=`; VM Exception while processing transaction: reverted with reason string ${JSON.stringify(errorArgs[0])}`:"Panic"===errorName&&(message=`; VM Exception while processing transaction: reverted with panic code ${errorArgs[0]}`);else try{const error=this.getError(selector);errorArgs=this._abiCoder.decode(error.inputs,bytes.slice(4)),errorName=error.name,errorSignature=error.format()}catch(error){}break}}return interface_logger.throwError("call revert exception"+message,lib_esm_Logger.errors.CALL_EXCEPTION,{method:functionFragment.format(),data:lib_esm_hexlify(data),errorArgs,errorName,errorSignature,reason})}encodeFunctionResult(functionFragment,values){return"string"==typeof functionFragment&&(functionFragment=this.getFunction(functionFragment)),lib_esm_hexlify(this._abiCoder.encode(functionFragment.outputs,values||[]))}encodeFilterTopics(eventFragment,values){"string"==typeof eventFragment&&(eventFragment=this.getEvent(eventFragment)),values.length>eventFragment.inputs.length&&interface_logger.throwError("too many arguments for "+eventFragment.format(),lib_esm_Logger.errors.UNEXPECTED_ARGUMENT,{argument:"values",value:values});let topics=[];eventFragment.anonymous||topics.push(this.getEventTopic(eventFragment));const encodeTopic=(param,value)=>"string"===param.type?id(value):"bytes"===param.type?lib_esm_keccak256(lib_esm_hexlify(value)):("bool"===param.type&&"boolean"==typeof value&&(value=value?"0x01":"0x00"),param.type.match(/^u?int/)&&(value=bignumber_BigNumber.from(value).toHexString()),"address"===param.type&&this._abiCoder.encode(["address"],[value]),lib_esm_hexZeroPad(lib_esm_hexlify(value),32));for(values.forEach((value,index)=>{let param=eventFragment.inputs[index];param.indexed?null==value?topics.push(null):"array"===param.baseType||"tuple"===param.baseType?interface_logger.throwArgumentError("filtering with tuples or arrays not supported","contract."+param.name,value):Array.isArray(value)?topics.push(value.map(value=>encodeTopic(param,value))):topics.push(encodeTopic(param,value)):null!=value&&interface_logger.throwArgumentError("cannot filter non-indexed parameters; must be null","contract."+param.name,value)});topics.length&&null===topics[topics.length-1];)topics.pop();return topics}encodeEventLog(eventFragment,values){"string"==typeof eventFragment&&(eventFragment=this.getEvent(eventFragment));const topics=[],dataTypes=[],dataValues=[];return eventFragment.anonymous||topics.push(this.getEventTopic(eventFragment)),values.length!==eventFragment.inputs.length&&interface_logger.throwArgumentError("event arguments/values mismatch","values",values),eventFragment.inputs.forEach((param,index)=>{const value=values[index];if(param.indexed)if("string"===param.type)topics.push(id(value));else if("bytes"===param.type)topics.push(lib_esm_keccak256(value));else{if("tuple"===param.baseType||"array"===param.baseType)throw new Error("not implemented");topics.push(this._abiCoder.encode([param.type],[value]))}else dataTypes.push(param),dataValues.push(value)}),{data:this._abiCoder.encode(dataTypes,dataValues),topics}}decodeEventLog(eventFragment,data,topics){if("string"==typeof eventFragment&&(eventFragment=this.getEvent(eventFragment)),null!=topics&&!eventFragment.anonymous){let topicHash=this.getEventTopic(eventFragment);lib_esm_isHexString(topics[0],32)&&topics[0].toLowerCase()===topicHash||interface_logger.throwError("fragment/topic mismatch",lib_esm_Logger.errors.INVALID_ARGUMENT,{argument:"topics[0]",expected:topicHash,value:topics[0]}),topics=topics.slice(1)}let indexed=[],nonIndexed=[],dynamic=[];eventFragment.inputs.forEach((param,index)=>{param.indexed?"string"===param.type||"bytes"===param.type||"tuple"===param.baseType||"array"===param.baseType?(indexed.push(ParamType.fromObject({type:"bytes32",name:param.name})),dynamic.push(!0)):(indexed.push(param),dynamic.push(!1)):(nonIndexed.push(param),dynamic.push(!1))});let resultIndexed=null!=topics?this._abiCoder.decode(indexed,lib_esm_concat(topics)):null,resultNonIndexed=this._abiCoder.decode(nonIndexed,data,!0),result=[],nonIndexedIndex=0,indexedIndex=0;eventFragment.inputs.forEach((param,index)=>{if(param.indexed)if(null==resultIndexed)result[index]=new Indexed({_isIndexed:!0,hash:null});else if(dynamic[index])result[index]=new Indexed({_isIndexed:!0,hash:resultIndexed[indexedIndex++]});else try{result[index]=resultIndexed[indexedIndex++]}catch(error){result[index]=error}else try{result[index]=resultNonIndexed[nonIndexedIndex++]}catch(error){result[index]=error}if(param.name&&null==result[param.name]){const value=result[index];value instanceof Error?Object.defineProperty(result,param.name,{enumerable:!0,get:()=>{throw wrapAccessError(`property ${JSON.stringify(param.name)}`,value)}}):result[param.name]=value}});for(let i=0;i<result.length;i++){const value=result[i];value instanceof Error&&Object.defineProperty(result,i,{enumerable:!0,get:()=>{throw wrapAccessError(`index ${i}`,value)}})}return Object.freeze(result)}parseTransaction(tx){let fragment=this.getFunction(tx.data.substring(0,10).toLowerCase());return fragment?new TransactionDescription({args:this._abiCoder.decode(fragment.inputs,"0x"+tx.data.substring(10)),functionFragment:fragment,name:fragment.name,signature:fragment.format(),sighash:this.getSighash(fragment),value:bignumber_BigNumber.from(tx.value||"0")}):null}parseLog(log){let fragment=this.getEvent(log.topics[0]);return!fragment||fragment.anonymous?null:new LogDescription({eventFragment:fragment,name:fragment.name,signature:fragment.format(),topic:this.getEventTopic(fragment),args:this.decodeEventLog(fragment,log.data,log.topics)})}parseError(data){const hexData=lib_esm_hexlify(data);let fragment=this.getError(hexData.substring(0,10).toLowerCase());return fragment?new ErrorDescription({args:this._abiCoder.decode(fragment.inputs,"0x"+hexData.substring(10)),errorFragment:fragment,name:fragment.name,signature:fragment.format(),sighash:this.getSighash(fragment)}):null}static isInterface(value){return!(!value||!value._isInterface)}}var lib_esm_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const abstract_provider_lib_esm_logger=new lib_esm_Logger("abstract-provider/5.8.0");class Provider{constructor(){abstract_provider_lib_esm_logger.checkAbstract(new.target,Provider),defineReadOnly(this,"_isProvider",!0)}getFeeData(){return lib_esm_awaiter(this,void 0,void 0,function*(){const{block,gasPrice}=yield resolveProperties({block:this.getBlock("latest"),gasPrice:this.getGasPrice().catch(error=>null)});let lastBaseFeePerGas=null,maxFeePerGas=null,maxPriorityFeePerGas=null;return block&&block.baseFeePerGas&&(lastBaseFeePerGas=block.baseFeePerGas,maxPriorityFeePerGas=bignumber_BigNumber.from("1500000000"),maxFeePerGas=block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas)),{lastBaseFeePerGas,maxFeePerGas,maxPriorityFeePerGas,gasPrice}})}addListener(eventName,listener){return this.on(eventName,listener)}removeListener(eventName,listener){return this.off(eventName,listener)}static isProvider(value){return!(!value||!value._isProvider)}}var abstract_signer_lib_esm_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const abstract_signer_lib_esm_logger=new lib_esm_Logger("abstract-signer/5.8.0"),allowedTransactionKeys=["accessList","ccipReadEnabled","chainId","customData","data","from","gasLimit","gasPrice","maxFeePerGas","maxPriorityFeePerGas","nonce","to","type","value"],forwardErrors=[lib_esm_Logger.errors.INSUFFICIENT_FUNDS,lib_esm_Logger.errors.NONCE_EXPIRED,lib_esm_Logger.errors.REPLACEMENT_UNDERPRICED];class Signer{constructor(){abstract_signer_lib_esm_logger.checkAbstract(new.target,Signer),defineReadOnly(this,"_isSigner",!0)}getBalance(blockTag){return abstract_signer_lib_esm_awaiter(this,void 0,void 0,function*(){return this._checkProvider("getBalance"),yield this.provider.getBalance(this.getAddress(),blockTag)})}getTransactionCount(blockTag){return abstract_signer_lib_esm_awaiter(this,void 0,void 0,function*(){return this._checkProvider("getTransactionCount"),yield this.provider.getTransactionCount(this.getAddress(),blockTag)})}estimateGas(transaction){return abstract_signer_lib_esm_awaiter(this,void 0,void 0,function*(){this._checkProvider("estimateGas");const tx=yield resolveProperties(this.checkTransaction(transaction));return yield this.provider.estimateGas(tx)})}call(transaction,blockTag){return abstract_signer_lib_esm_awaiter(this,void 0,void 0,function*(){this._checkProvider("call");const tx=yield resolveProperties(this.checkTransaction(transaction));return yield this.provider.call(tx,blockTag)})}sendTransaction(transaction){return abstract_signer_lib_esm_awaiter(this,void 0,void 0,function*(){this._checkProvider("sendTransaction");const tx=yield this.populateTransaction(transaction),signedTx=yield this.signTransaction(tx);return yield this.provider.sendTransaction(signedTx)})}getChainId(){return abstract_signer_lib_esm_awaiter(this,void 0,void 0,function*(){this._checkProvider("getChainId");return(yield this.provider.getNetwork()).chainId})}getGasPrice(){return abstract_signer_lib_esm_awaiter(this,void 0,void 0,function*(){return this._checkProvider("getGasPrice"),yield this.provider.getGasPrice()})}getFeeData(){return abstract_signer_lib_esm_awaiter(this,void 0,void 0,function*(){return this._checkProvider("getFeeData"),yield this.provider.getFeeData()})}resolveName(name){return abstract_signer_lib_esm_awaiter(this,void 0,void 0,function*(){return this._checkProvider("resolveName"),yield this.provider.resolveName(name)})}checkTransaction(transaction){for(const key in transaction)-1===allowedTransactionKeys.indexOf(key)&&abstract_signer_lib_esm_logger.throwArgumentError("invalid transaction key: "+key,"transaction",transaction);const tx=shallowCopy(transaction);return null==tx.from?tx.from=this.getAddress():tx.from=Promise.all([Promise.resolve(tx.from),this.getAddress()]).then(result=>(result[0].toLowerCase()!==result[1].toLowerCase()&&abstract_signer_lib_esm_logger.throwArgumentError("from address mismatch","transaction",transaction),result[0])),tx}populateTransaction(transaction){return abstract_signer_lib_esm_awaiter(this,void 0,void 0,function*(){const tx=yield resolveProperties(this.checkTransaction(transaction));null!=tx.to&&(tx.to=Promise.resolve(tx.to).then(to=>abstract_signer_lib_esm_awaiter(this,void 0,void 0,function*(){if(null==to)return null;const address=yield this.resolveName(to);return null==address&&abstract_signer_lib_esm_logger.throwArgumentError("provided ENS name resolves to null","tx.to",to),address})),tx.to.catch(error=>{}));const hasEip1559=null!=tx.maxFeePerGas||null!=tx.maxPriorityFeePerGas;if(null==tx.gasPrice||2!==tx.type&&!hasEip1559?0!==tx.type&&1!==tx.type||!hasEip1559||abstract_signer_lib_esm_logger.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas","transaction",transaction):abstract_signer_lib_esm_logger.throwArgumentError("eip-1559 transaction do not support gasPrice","transaction",transaction),2!==tx.type&&null!=tx.type||null==tx.maxFeePerGas||null==tx.maxPriorityFeePerGas)if(0===tx.type||1===tx.type)null==tx.gasPrice&&(tx.gasPrice=this.getGasPrice());else{const feeData=yield this.getFeeData();if(null==tx.type)if(null!=feeData.maxFeePerGas&&null!=feeData.maxPriorityFeePerGas)if(tx.type=2,null!=tx.gasPrice){const gasPrice=tx.gasPrice;delete tx.gasPrice,tx.maxFeePerGas=gasPrice,tx.maxPriorityFeePerGas=gasPrice}else null==tx.maxFeePerGas&&(tx.maxFeePerGas=feeData.maxFeePerGas),null==tx.maxPriorityFeePerGas&&(tx.maxPriorityFeePerGas=feeData.maxPriorityFeePerGas);else null!=feeData.gasPrice?(hasEip1559&&abstract_signer_lib_esm_logger.throwError("network does not support EIP-1559",lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:"populateTransaction"}),null==tx.gasPrice&&(tx.gasPrice=feeData.gasPrice),tx.type=0):abstract_signer_lib_esm_logger.throwError("failed to get consistent fee data",lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:"signer.getFeeData"});else 2===tx.type&&(null==tx.maxFeePerGas&&(tx.maxFeePerGas=feeData.maxFeePerGas),null==tx.maxPriorityFeePerGas&&(tx.maxPriorityFeePerGas=feeData.maxPriorityFeePerGas))}else tx.type=2;return null==tx.nonce&&(tx.nonce=this.getTransactionCount("pending")),null==tx.gasLimit&&(tx.gasLimit=this.estimateGas(tx).catch(error=>{if(forwardErrors.indexOf(error.code)>=0)throw error;return abstract_signer_lib_esm_logger.throwError("cannot estimate gas; transaction may fail or may require manual gas limit",lib_esm_Logger.errors.UNPREDICTABLE_GAS_LIMIT,{error,tx})})),null==tx.chainId?tx.chainId=this.getChainId():tx.chainId=Promise.all([Promise.resolve(tx.chainId),this.getChainId()]).then(results=>(0!==results[1]&&results[0]!==results[1]&&abstract_signer_lib_esm_logger.throwArgumentError("chainId address mismatch","transaction",transaction),results[0])),yield resolveProperties(tx)})}_checkProvider(operation){this.provider||abstract_signer_lib_esm_logger.throwError("missing provider",lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:operation||"_checkProvider"})}static isSigner(value){return!(!value||!value._isSigner)}}class VoidSigner extends Signer{constructor(address,provider){super(),defineReadOnly(this,"address",address),defineReadOnly(this,"provider",provider||null)}getAddress(){return Promise.resolve(this.address)}_fail(message,operation){return Promise.resolve().then(()=>{abstract_signer_lib_esm_logger.throwError(message,lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation})})}signMessage(message){return this._fail("VoidSigner cannot sign messages","signMessage")}signTransaction(transaction){return this._fail("VoidSigner cannot sign transactions","signTransaction")}_signTypedData(domain,types,value){return this._fail("VoidSigner cannot sign typed data","signTypedData")}connect(provider){return new VoidSigner(this.address,provider)}}const transactions_lib_esm_logger=new lib_esm_Logger("transactions/5.8.0");var TransactionTypes;!function(TransactionTypes){TransactionTypes[TransactionTypes.legacy=0]="legacy",TransactionTypes[TransactionTypes.eip2930=1]="eip2930",TransactionTypes[TransactionTypes.eip1559=2]="eip1559"}(TransactionTypes||(TransactionTypes={}));function accessSetify(addr,storageKeys){return{address:lib_esm_getAddress(addr),storageKeys:(storageKeys||[]).map((storageKey,index)=>(32!==function lib_esm_hexDataLength(data){if("string"!=typeof data)data=lib_esm_hexlify(data);else if(!lib_esm_isHexString(data)||data.length%2)return null;return(data.length-2)/2}(storageKey)&&transactions_lib_esm_logger.throwArgumentError("invalid access list storageKey",`accessList[${addr}:${index}]`,storageKey),storageKey.toLowerCase()))}}function accessListify(value){if(Array.isArray(value))return value.map((set,index)=>Array.isArray(set)?(set.length>2&&transactions_lib_esm_logger.throwArgumentError("access list expected to be [ address, storageKeys[] ]",`value[${index}]`,set),accessSetify(set[0],set[1])):accessSetify(set.address,set.storageKeys));const result=Object.keys(value).map(addr=>{const storageKeys=value[addr].reduce((accum,storageKey)=>(accum[storageKey]=!0,accum),{});return accessSetify(addr,Object.keys(storageKeys).sort())});return result.sort((a,b)=>a.address.localeCompare(b.address)),result}var contracts_lib_esm_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const contracts_lib_esm_logger=new lib_esm_Logger("contracts/5.7.0"),contracts_lib_esm_allowedTransactionKeys={chainId:!0,data:!0,from:!0,gasLimit:!0,gasPrice:!0,nonce:!0,to:!0,value:!0,type:!0,accessList:!0,maxFeePerGas:!0,maxPriorityFeePerGas:!0,customData:!0,ccipReadEnabled:!0};function resolveName(resolver,nameOrPromise){return contracts_lib_esm_awaiter(this,void 0,void 0,function*(){const name=yield nameOrPromise;"string"!=typeof name&&contracts_lib_esm_logger.throwArgumentError("invalid address or ENS name","name",name);try{return lib_esm_getAddress(name)}catch(error){}resolver||contracts_lib_esm_logger.throwError("a provider or signer is needed to resolve ENS names",lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:"resolveName"});const address=yield resolver.resolveName(name);return null==address&&contracts_lib_esm_logger.throwArgumentError("resolver or addr is not configured for ENS name","name",name),address})}function resolveAddresses(resolver,value,paramType){return contracts_lib_esm_awaiter(this,void 0,void 0,function*(){return Array.isArray(paramType)?yield Promise.all(paramType.map((paramType,index)=>resolveAddresses(resolver,Array.isArray(value)?value[index]:value[paramType.name],paramType))):"address"===paramType.type?yield resolveName(resolver,value):"tuple"===paramType.type?yield resolveAddresses(resolver,value,paramType.components):"array"===paramType.baseType?Array.isArray(value)?yield Promise.all(value.map(v=>resolveAddresses(resolver,v,paramType.arrayChildren))):Promise.reject(contracts_lib_esm_logger.makeError("invalid value for array",lib_esm_Logger.errors.INVALID_ARGUMENT,{argument:"value",value})):value})}function populateTransaction(contract,fragment,args){return contracts_lib_esm_awaiter(this,void 0,void 0,function*(){let overrides={};args.length===fragment.inputs.length+1&&"object"==typeof args[args.length-1]&&(overrides=shallowCopy(args.pop())),contracts_lib_esm_logger.checkArgumentCount(args.length,fragment.inputs.length,"passed to contract"),contract.signer?overrides.from?overrides.from=resolveProperties({override:resolveName(contract.signer,overrides.from),signer:contract.signer.getAddress()}).then(check=>contracts_lib_esm_awaiter(this,void 0,void 0,function*(){return lib_esm_getAddress(check.signer)!==check.override&&contracts_lib_esm_logger.throwError("Contract with a Signer cannot override from",lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:"overrides.from"}),check.override})):overrides.from=contract.signer.getAddress():overrides.from&&(overrides.from=resolveName(contract.provider,overrides.from));const resolved=yield resolveProperties({args:resolveAddresses(contract.signer||contract.provider,args,fragment.inputs),address:contract.resolvedAddress,overrides:resolveProperties(overrides)||{}}),data=contract.interface.encodeFunctionData(fragment,resolved.args),tx={data,to:resolved.address},ro=resolved.overrides;if(null!=ro.nonce&&(tx.nonce=bignumber_BigNumber.from(ro.nonce).toNumber()),null!=ro.gasLimit&&(tx.gasLimit=bignumber_BigNumber.from(ro.gasLimit)),null!=ro.gasPrice&&(tx.gasPrice=bignumber_BigNumber.from(ro.gasPrice)),null!=ro.maxFeePerGas&&(tx.maxFeePerGas=bignumber_BigNumber.from(ro.maxFeePerGas)),null!=ro.maxPriorityFeePerGas&&(tx.maxPriorityFeePerGas=bignumber_BigNumber.from(ro.maxPriorityFeePerGas)),null!=ro.from&&(tx.from=ro.from),null!=ro.type&&(tx.type=ro.type),null!=ro.accessList&&(tx.accessList=accessListify(ro.accessList)),null==tx.gasLimit&&null!=fragment.gas){let intrinsic=21e3;const bytes=lib_esm_arrayify(data);for(let i=0;i<bytes.length;i++)intrinsic+=4,bytes[i]&&(intrinsic+=64);tx.gasLimit=bignumber_BigNumber.from(fragment.gas).add(intrinsic)}if(ro.value){const roValue=bignumber_BigNumber.from(ro.value);roValue.isZero()||fragment.payable||contracts_lib_esm_logger.throwError("non-payable method cannot override value",lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:"overrides.value",value:overrides.value}),tx.value=roValue}ro.customData&&(tx.customData=shallowCopy(ro.customData)),ro.ccipReadEnabled&&(tx.ccipReadEnabled=!!ro.ccipReadEnabled),delete overrides.nonce,delete overrides.gasLimit,delete overrides.gasPrice,delete overrides.from,delete overrides.value,delete overrides.type,delete overrides.accessList,delete overrides.maxFeePerGas,delete overrides.maxPriorityFeePerGas,delete overrides.customData,delete overrides.ccipReadEnabled;const leftovers=Object.keys(overrides).filter(key=>null!=overrides[key]);return leftovers.length&&contracts_lib_esm_logger.throwError(`cannot override ${leftovers.map(l=>JSON.stringify(l)).join(",")}`,lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:"overrides",overrides:leftovers}),tx})}function addContractWait(contract,tx){const wait=tx.wait.bind(tx);tx.wait=confirmations=>wait(confirmations).then(receipt=>(receipt.events=receipt.logs.map(log=>{let event=deepCopy(log),parsed=null;try{parsed=contract.interface.parseLog(log)}catch(e){}return parsed&&(event.args=parsed.args,event.decode=(data,topics)=>contract.interface.decodeEventLog(parsed.eventFragment,data,topics),event.event=parsed.name,event.eventSignature=parsed.signature),event.removeListener=()=>contract.provider,event.getBlock=()=>contract.provider.getBlock(receipt.blockHash),event.getTransaction=()=>contract.provider.getTransaction(receipt.transactionHash),event.getTransactionReceipt=()=>Promise.resolve(receipt),event}),receipt))}function buildCall(contract,fragment,collapseSimple){const signerOrProvider=contract.signer||contract.provider;return function(...args){return contracts_lib_esm_awaiter(this,void 0,void 0,function*(){let blockTag;if(args.length===fragment.inputs.length+1&&"object"==typeof args[args.length-1]){const overrides=shallowCopy(args.pop());null!=overrides.blockTag&&(blockTag=yield overrides.blockTag),delete overrides.blockTag,args.push(overrides)}null!=contract.deployTransaction&&(yield contract._deployed(blockTag));const tx=yield populateTransaction(contract,fragment,args),result=yield signerOrProvider.call(tx,blockTag);try{let value=contract.interface.decodeFunctionResult(fragment,result);return collapseSimple&&1===fragment.outputs.length&&(value=value[0]),value}catch(error){throw error.code===lib_esm_Logger.errors.CALL_EXCEPTION&&(error.address=contract.address,error.args=args,error.transaction=tx),error}})}}function buildDefault(contract,fragment,collapseSimple){return fragment.constant?buildCall(contract,fragment,collapseSimple):function buildSend(contract,fragment){return function(...args){return contracts_lib_esm_awaiter(this,void 0,void 0,function*(){contract.signer||contracts_lib_esm_logger.throwError("sending a transaction requires a signer",lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:"sendTransaction"}),null!=contract.deployTransaction&&(yield contract._deployed());const txRequest=yield populateTransaction(contract,fragment,args),tx=yield contract.signer.sendTransaction(txRequest);return addContractWait(contract,tx),tx})}}(contract,fragment)}function getEventTag(filter){return!filter.address||null!=filter.topics&&0!==filter.topics.length?(filter.address||"*")+"@"+(filter.topics?filter.topics.map(topic=>Array.isArray(topic)?topic.join("|"):topic).join(":"):""):"*"}class RunningEvent{constructor(tag,filter){defineReadOnly(this,"tag",tag),defineReadOnly(this,"filter",filter),this._listeners=[]}addListener(listener,once){this._listeners.push({listener,once})}removeListener(listener){let done=!1;this._listeners=this._listeners.filter(item=>!(!done&&item.listener===listener)||(done=!0,!1))}removeAllListeners(){this._listeners=[]}listeners(){return this._listeners.map(i=>i.listener)}listenerCount(){return this._listeners.length}run(args){const listenerCount=this.listenerCount();return this._listeners=this._listeners.filter(item=>{const argsCopy=args.slice();return setTimeout(()=>{item.listener.apply(this,argsCopy)},0),!item.once}),listenerCount}prepareEvent(event){}getEmit(event){return[event]}}class ErrorRunningEvent extends RunningEvent{constructor(){super("error",null)}}class FragmentRunningEvent extends RunningEvent{constructor(address,contractInterface,fragment,topics){const filter={address};let topic=contractInterface.getEventTopic(fragment);topics?(topic!==topics[0]&&contracts_lib_esm_logger.throwArgumentError("topic mismatch","topics",topics),filter.topics=topics.slice()):filter.topics=[topic],super(getEventTag(filter),filter),defineReadOnly(this,"address",address),defineReadOnly(this,"interface",contractInterface),defineReadOnly(this,"fragment",fragment)}prepareEvent(event){super.prepareEvent(event),event.event=this.fragment.name,event.eventSignature=this.fragment.format(),event.decode=(data,topics)=>this.interface.decodeEventLog(this.fragment,data,topics);try{event.args=this.interface.decodeEventLog(this.fragment,event.data,event.topics)}catch(error){event.args=null,event.decodeError=error}}getEmit(event){const errors=function checkResultErrors(result){const errors=[],checkErrors=function(path,object){if(Array.isArray(object))for(let key in object){const childPath=path.slice();childPath.push(key);try{checkErrors(childPath,object[key])}catch(error){errors.push({path:childPath,error})}}};return checkErrors([],result),errors}(event.args);if(errors.length)throw errors[0].error;const args=(event.args||[]).slice();return args.push(event),args}}class WildcardRunningEvent extends RunningEvent{constructor(address,contractInterface){super("*",{address}),defineReadOnly(this,"address",address),defineReadOnly(this,"interface",contractInterface)}prepareEvent(event){super.prepareEvent(event);try{const parsed=this.interface.parseLog(event);event.event=parsed.name,event.eventSignature=parsed.signature,event.decode=(data,topics)=>this.interface.decodeEventLog(parsed.eventFragment,data,topics),event.args=parsed.args}catch(error){}}}class BaseContract{constructor(addressOrName,contractInterface,signerOrProvider){defineReadOnly(this,"interface",getStatic(new.target,"getInterface")(contractInterface)),null==signerOrProvider?(defineReadOnly(this,"provider",null),defineReadOnly(this,"signer",null)):Signer.isSigner(signerOrProvider)?(defineReadOnly(this,"provider",signerOrProvider.provider||null),defineReadOnly(this,"signer",signerOrProvider)):Provider.isProvider(signerOrProvider)?(defineReadOnly(this,"provider",signerOrProvider),defineReadOnly(this,"signer",null)):contracts_lib_esm_logger.throwArgumentError("invalid signer or provider","signerOrProvider",signerOrProvider),defineReadOnly(this,"callStatic",{}),defineReadOnly(this,"estimateGas",{}),defineReadOnly(this,"functions",{}),defineReadOnly(this,"populateTransaction",{}),defineReadOnly(this,"filters",{});{const uniqueFilters={};Object.keys(this.interface.events).forEach(eventSignature=>{const event=this.interface.events[eventSignature];defineReadOnly(this.filters,eventSignature,(...args)=>({address:this.address,topics:this.interface.encodeFilterTopics(event,args)})),uniqueFilters[event.name]||(uniqueFilters[event.name]=[]),uniqueFilters[event.name].push(eventSignature)}),Object.keys(uniqueFilters).forEach(name=>{const filters=uniqueFilters[name];1===filters.length?defineReadOnly(this.filters,name,this.filters[filters[0]]):contracts_lib_esm_logger.warn(`Duplicate definition of ${name} (${filters.join(", ")})`)})}if(defineReadOnly(this,"_runningEvents",{}),defineReadOnly(this,"_wrappedEmits",{}),null==addressOrName&&contracts_lib_esm_logger.throwArgumentError("invalid contract address or ENS name","addressOrName",addressOrName),defineReadOnly(this,"address",addressOrName),this.provider)defineReadOnly(this,"resolvedAddress",resolveName(this.provider,addressOrName));else try{defineReadOnly(this,"resolvedAddress",Promise.resolve(lib_esm_getAddress(addressOrName)))}catch(error){contracts_lib_esm_logger.throwError("provider is required to use ENS name as contract address",lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:"new Contract"})}this.resolvedAddress.catch(e=>{});const uniqueNames={},uniqueSignatures={};Object.keys(this.interface.functions).forEach(signature=>{const fragment=this.interface.functions[signature];if(uniqueSignatures[signature])contracts_lib_esm_logger.warn(`Duplicate ABI entry for ${JSON.stringify(signature)}`);else{uniqueSignatures[signature]=!0;{const name=fragment.name;uniqueNames[`%${name}`]||(uniqueNames[`%${name}`]=[]),uniqueNames[`%${name}`].push(signature)}null==this[signature]&&defineReadOnly(this,signature,buildDefault(this,fragment,!0)),null==this.functions[signature]&&defineReadOnly(this.functions,signature,buildDefault(this,fragment,!1)),null==this.callStatic[signature]&&defineReadOnly(this.callStatic,signature,buildCall(this,fragment,!0)),null==this.populateTransaction[signature]&&defineReadOnly(this.populateTransaction,signature,function buildPopulate(contract,fragment){return function(...args){return populateTransaction(contract,fragment,args)}}(this,fragment)),null==this.estimateGas[signature]&&defineReadOnly(this.estimateGas,signature,function buildEstimate(contract,fragment){const signerOrProvider=contract.signer||contract.provider;return function(...args){return contracts_lib_esm_awaiter(this,void 0,void 0,function*(){signerOrProvider||contracts_lib_esm_logger.throwError("estimate require a provider or signer",lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:"estimateGas"});const tx=yield populateTransaction(contract,fragment,args);return yield signerOrProvider.estimateGas(tx)})}}(this,fragment))}}),Object.keys(uniqueNames).forEach(name=>{const signatures=uniqueNames[name];if(signatures.length>1)return;name=name.substring(1);const signature=signatures[0];try{null==this[name]&&defineReadOnly(this,name,this[signature])}catch(e){}null==this.functions[name]&&defineReadOnly(this.functions,name,this.functions[signature]),null==this.callStatic[name]&&defineReadOnly(this.callStatic,name,this.callStatic[signature]),null==this.populateTransaction[name]&&defineReadOnly(this.populateTransaction,name,this.populateTransaction[signature]),null==this.estimateGas[name]&&defineReadOnly(this.estimateGas,name,this.estimateGas[signature])})}static getContractAddress(transaction){return getContractAddress(transaction)}static getInterface(contractInterface){return Interface.isInterface(contractInterface)?contractInterface:new Interface(contractInterface)}deployed(){return this._deployed()}_deployed(blockTag){return this._deployedPromise||(this.deployTransaction?this._deployedPromise=this.deployTransaction.wait().then(()=>this):this._deployedPromise=this.provider.getCode(this.address,blockTag).then(code=>("0x"===code&&contracts_lib_esm_logger.throwError("contract not deployed",lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{contractAddress:this.address,operation:"getDeployed"}),this))),this._deployedPromise}fallback(overrides){this.signer||contracts_lib_esm_logger.throwError("sending a transactions require a signer",lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:"sendTransaction(fallback)"});const tx=shallowCopy(overrides||{});return["from","to"].forEach(function(key){null!=tx[key]&&contracts_lib_esm_logger.throwError("cannot override "+key,lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:key})}),tx.to=this.resolvedAddress,this.deployed().then(()=>this.signer.sendTransaction(tx))}connect(signerOrProvider){"string"==typeof signerOrProvider&&(signerOrProvider=new VoidSigner(signerOrProvider,this.provider));const contract=new this.constructor(this.address,this.interface,signerOrProvider);return this.deployTransaction&&defineReadOnly(contract,"deployTransaction",this.deployTransaction),contract}attach(addressOrName){return new this.constructor(addressOrName,this.interface,this.signer||this.provider)}static isIndexed(value){return Indexed.isIndexed(value)}_normalizeRunningEvent(runningEvent){return this._runningEvents[runningEvent.tag]?this._runningEvents[runningEvent.tag]:runningEvent}_getRunningEvent(eventName){if("string"==typeof eventName){if("error"===eventName)return this._normalizeRunningEvent(new ErrorRunningEvent);if("event"===eventName)return this._normalizeRunningEvent(new RunningEvent("event",null));if("*"===eventName)return this._normalizeRunningEvent(new WildcardRunningEvent(this.address,this.interface));const fragment=this.interface.getEvent(eventName);return this._normalizeRunningEvent(new FragmentRunningEvent(this.address,this.interface,fragment))}if(eventName.topics&&eventName.topics.length>0){try{const topic=eventName.topics[0];if("string"!=typeof topic)throw new Error("invalid topic");const fragment=this.interface.getEvent(topic);return this._normalizeRunningEvent(new FragmentRunningEvent(this.address,this.interface,fragment,eventName.topics))}catch(error){}const filter={address:this.address,topics:eventName.topics};return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter),filter))}return this._normalizeRunningEvent(new WildcardRunningEvent(this.address,this.interface))}_checkRunningEvents(runningEvent){if(0===runningEvent.listenerCount()){delete this._runningEvents[runningEvent.tag];const emit=this._wrappedEmits[runningEvent.tag];emit&&runningEvent.filter&&(this.provider.off(runningEvent.filter,emit),delete this._wrappedEmits[runningEvent.tag])}}_wrapEvent(runningEvent,log,listener){const event=deepCopy(log);return event.removeListener=()=>{listener&&(runningEvent.removeListener(listener),this._checkRunningEvents(runningEvent))},event.getBlock=()=>this.provider.getBlock(log.blockHash),event.getTransaction=()=>this.provider.getTransaction(log.transactionHash),event.getTransactionReceipt=()=>this.provider.getTransactionReceipt(log.transactionHash),runningEvent.prepareEvent(event),event}_addEventListener(runningEvent,listener,once){if(this.provider||contracts_lib_esm_logger.throwError("events require a provider or a signer with a provider",lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:"once"}),runningEvent.addListener(listener,once),this._runningEvents[runningEvent.tag]=runningEvent,!this._wrappedEmits[runningEvent.tag]){const wrappedEmit=log=>{let event=this._wrapEvent(runningEvent,log,listener);if(null==event.decodeError)try{const args=runningEvent.getEmit(event);this.emit(runningEvent.filter,...args)}catch(error){event.decodeError=error.error}null!=runningEvent.filter&&this.emit("event",event),null!=event.decodeError&&this.emit("error",event.decodeError,event)};this._wrappedEmits[runningEvent.tag]=wrappedEmit,null!=runningEvent.filter&&this.provider.on(runningEvent.filter,wrappedEmit)}}queryFilter(event,fromBlockOrBlockhash,toBlock){const runningEvent=this._getRunningEvent(event),filter=shallowCopy(runningEvent.filter);return"string"==typeof fromBlockOrBlockhash&&lib_esm_isHexString(fromBlockOrBlockhash,32)?(null!=toBlock&&contracts_lib_esm_logger.throwArgumentError("cannot specify toBlock with blockhash","toBlock",toBlock),filter.blockHash=fromBlockOrBlockhash):(filter.fromBlock=null!=fromBlockOrBlockhash?fromBlockOrBlockhash:0,filter.toBlock=null!=toBlock?toBlock:"latest"),this.provider.getLogs(filter).then(logs=>logs.map(log=>this._wrapEvent(runningEvent,log,null)))}on(event,listener){return this._addEventListener(this._getRunningEvent(event),listener,!1),this}once(event,listener){return this._addEventListener(this._getRunningEvent(event),listener,!0),this}emit(eventName,...args){if(!this.provider)return!1;const runningEvent=this._getRunningEvent(eventName),result=runningEvent.run(args)>0;return this._checkRunningEvents(runningEvent),result}listenerCount(eventName){return this.provider?null==eventName?Object.keys(this._runningEvents).reduce((accum,key)=>accum+this._runningEvents[key].listenerCount(),0):this._getRunningEvent(eventName).listenerCount():0}listeners(eventName){if(!this.provider)return[];if(null==eventName){const result=[];for(let tag in this._runningEvents)this._runningEvents[tag].listeners().forEach(listener=>{result.push(listener)});return result}return this._getRunningEvent(eventName).listeners()}removeAllListeners(eventName){if(!this.provider)return this;if(null==eventName){for(const tag in this._runningEvents){const runningEvent=this._runningEvents[tag];runningEvent.removeAllListeners(),this._checkRunningEvents(runningEvent)}return this}const runningEvent=this._getRunningEvent(eventName);return runningEvent.removeAllListeners(),this._checkRunningEvents(runningEvent),this}off(eventName,listener){if(!this.provider)return this;const runningEvent=this._getRunningEvent(eventName);return runningEvent.removeListener(listener),this._checkRunningEvents(runningEvent),this}removeListener(eventName,listener){return this.off(eventName,listener)}}class Contract extends BaseContract{}class ContractFactory{constructor(contractInterface,bytecode,signer){let bytecodeHex=null;bytecodeHex="string"==typeof bytecode?bytecode:lib_esm_isBytes(bytecode)?lib_esm_hexlify(bytecode):bytecode&&"string"==typeof bytecode.object?bytecode.object:"!","0x"!==bytecodeHex.substring(0,2)&&(bytecodeHex="0x"+bytecodeHex),(!lib_esm_isHexString(bytecodeHex)||bytecodeHex.length%2)&&contracts_lib_esm_logger.throwArgumentError("invalid bytecode","bytecode",bytecode),signer&&!Signer.isSigner(signer)&&contracts_lib_esm_logger.throwArgumentError("invalid signer","signer",signer),defineReadOnly(this,"bytecode",bytecodeHex),defineReadOnly(this,"interface",getStatic(new.target,"getInterface")(contractInterface)),defineReadOnly(this,"signer",signer||null)}getDeployTransaction(...args){let tx={};if(args.length===this.interface.deploy.inputs.length+1&&"object"==typeof args[args.length-1]){tx=shallowCopy(args.pop());for(const key in tx)if(!contracts_lib_esm_allowedTransactionKeys[key])throw new Error("unknown transaction override "+key)}if(["data","from","to"].forEach(key=>{null!=tx[key]&&contracts_lib_esm_logger.throwError("cannot override "+key,lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:key})}),tx.value){bignumber_BigNumber.from(tx.value).isZero()||this.interface.deploy.payable||contracts_lib_esm_logger.throwError("non-payable constructor cannot override value",lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:"overrides.value",value:tx.value})}return contracts_lib_esm_logger.checkArgumentCount(args.length,this.interface.deploy.inputs.length," in Contract constructor"),tx.data=lib_esm_hexlify(lib_esm_concat([this.bytecode,this.interface.encodeDeploy(args)])),tx}deploy(...args){return contracts_lib_esm_awaiter(this,void 0,void 0,function*(){let overrides={};args.length===this.interface.deploy.inputs.length+1&&(overrides=args.pop()),contracts_lib_esm_logger.checkArgumentCount(args.length,this.interface.deploy.inputs.length," in Contract constructor");const params=yield resolveAddresses(this.signer,args,this.interface.deploy.inputs);params.push(overrides);const unsignedTx=this.getDeployTransaction(...params),tx=yield this.signer.sendTransaction(unsignedTx),address=getStatic(this.constructor,"getContractAddress")(tx),contract=getStatic(this.constructor,"getContract")(address,this.interface,this.signer);return addContractWait(contract,tx),defineReadOnly(contract,"deployTransaction",tx),contract})}attach(address){return this.constructor.getContract(address,this.interface,this.signer)}connect(signer){return new this.constructor(this.interface,this.bytecode,signer)}static fromSolidity(compilerOutput,signer){null==compilerOutput&&contracts_lib_esm_logger.throwError("missing compiler output",lib_esm_Logger.errors.MISSING_ARGUMENT,{argument:"compilerOutput"}),"string"==typeof compilerOutput&&(compilerOutput=JSON.parse(compilerOutput));const abi=compilerOutput.abi;let bytecode=null;return compilerOutput.bytecode?bytecode=compilerOutput.bytecode:compilerOutput.evm&&compilerOutput.evm.bytecode&&(bytecode=compilerOutput.evm.bytecode),new this(abi,bytecode,signer)}static getInterface(contractInterface){return Contract.getInterface(contractInterface)}static getContractAddress(tx){return getContractAddress(tx)}static getContract(address,contractInterface,signer){return new Contract(address,contractInterface,signer)}}var bignumber=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/bignumber/lib.esm/bignumber.js"),lib_esm=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/bignumber/node_modules/@ethersproject/bytes/lib.esm/index.js"),logger_lib_esm=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/bignumber/node_modules/@ethersproject/logger/lib.esm/index.js"),_version=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/bignumber/lib.esm/_version.js");const fixednumber_logger=new logger_lib_esm.Vy(_version.r),fixednumber_constructorGuard={},fixednumber_Zero=bignumber.gH.from(0),fixednumber_NegativeOne=bignumber.gH.from(-1);function fixednumber_throwFault(message,fault,operation,value){const params={fault,operation};return void 0!==value&&(params.value=value),fixednumber_logger.throwError(message,logger_lib_esm.Vy.errors.NUMERIC_FAULT,params)}let zeros="0";for(;zeros.length<256;)zeros+=zeros;function getMultiplier(decimals){if("number"!=typeof decimals)try{decimals=bignumber.gH.from(decimals).toNumber()}catch(e){}return"number"==typeof decimals&&decimals>=0&&decimals<=256&&!(decimals%1)?"1"+zeros.substring(0,decimals):fixednumber_logger.throwArgumentError("invalid decimal size","decimals",decimals)}function formatFixed(value,decimals){null==decimals&&(decimals=0);const multiplier=getMultiplier(decimals),negative=(value=bignumber.gH.from(value)).lt(fixednumber_Zero);negative&&(value=value.mul(fixednumber_NegativeOne));let fraction=value.mod(multiplier).toString();for(;fraction.length<multiplier.length-1;)fraction="0"+fraction;fraction=fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];const whole=value.div(multiplier).toString();return value=1===multiplier.length?whole:whole+"."+fraction,negative&&(value="-"+value),value}function parseFixed(value,decimals){null==decimals&&(decimals=0);const multiplier=getMultiplier(decimals);"string"==typeof value&&value.match(/^-?[0-9.]+$/)||fixednumber_logger.throwArgumentError("invalid decimal value","value",value);const negative="-"===value.substring(0,1);negative&&(value=value.substring(1)),"."===value&&fixednumber_logger.throwArgumentError("missing value","value",value);const comps=value.split(".");comps.length>2&&fixednumber_logger.throwArgumentError("too many decimal points","value",value);let whole=comps[0],fraction=comps[1];for(whole||(whole="0"),fraction||(fraction="0");"0"===fraction[fraction.length-1];)fraction=fraction.substring(0,fraction.length-1);for(fraction.length>multiplier.length-1&&fixednumber_throwFault("fractional component exceeds decimals","underflow","parseFixed"),""===fraction&&(fraction="0");fraction.length<multiplier.length-1;)fraction+="0";const wholeValue=bignumber.gH.from(whole),fractionValue=bignumber.gH.from(fraction);let wei=wholeValue.mul(multiplier).add(fractionValue);return negative&&(wei=wei.mul(fixednumber_NegativeOne)),wei}class FixedFormat{constructor(constructorGuard,signed,width,decimals){constructorGuard!==fixednumber_constructorGuard&&fixednumber_logger.throwError("cannot use FixedFormat constructor; use FixedFormat.from",logger_lib_esm.Vy.errors.UNSUPPORTED_OPERATION,{operation:"new FixedFormat"}),this.signed=signed,this.width=width,this.decimals=decimals,this.name=(signed?"":"u")+"fixed"+String(width)+"x"+String(decimals),this._multiplier=getMultiplier(decimals),Object.freeze(this)}static from(value){if(value instanceof FixedFormat)return value;"number"==typeof value&&(value=`fixed128x${value}`);let signed=!0,width=128,decimals=18;if("string"==typeof value)if("fixed"===value);else if("ufixed"===value)signed=!1;else{const match=value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);match||fixednumber_logger.throwArgumentError("invalid fixed format","format",value),signed="u"!==match[1],width=parseInt(match[2]),decimals=parseInt(match[3])}else if(value){const check=(key,type,defaultValue)=>null==value[key]?defaultValue:(typeof value[key]!==type&&fixednumber_logger.throwArgumentError("invalid fixed format ("+key+" not "+type+")","format."+key,value[key]),value[key]);signed=check("signed","boolean",signed),width=check("width","number",width),decimals=check("decimals","number",decimals)}return width%8&&fixednumber_logger.throwArgumentError("invalid fixed format width (not byte aligned)","format.width",width),decimals>80&&fixednumber_logger.throwArgumentError("invalid fixed format (decimals too large)","format.decimals",decimals),new FixedFormat(fixednumber_constructorGuard,signed,width,decimals)}}class FixedNumber{constructor(constructorGuard,hex,value,format){constructorGuard!==fixednumber_constructorGuard&&fixednumber_logger.throwError("cannot use FixedNumber constructor; use FixedNumber.from",logger_lib_esm.Vy.errors.UNSUPPORTED_OPERATION,{operation:"new FixedFormat"}),this.format=format,this._hex=hex,this._value=value,this._isFixedNumber=!0,Object.freeze(this)}_checkFormat(other){this.format.name!==other.format.name&&fixednumber_logger.throwArgumentError("incompatible format; use fixedNumber.toFormat","other",other)}addUnsafe(other){this._checkFormat(other);const a=parseFixed(this._value,this.format.decimals),b=parseFixed(other._value,other.format.decimals);return FixedNumber.fromValue(a.add(b),this.format.decimals,this.format)}subUnsafe(other){this._checkFormat(other);const a=parseFixed(this._value,this.format.decimals),b=parseFixed(other._value,other.format.decimals);return FixedNumber.fromValue(a.sub(b),this.format.decimals,this.format)}mulUnsafe(other){this._checkFormat(other);const a=parseFixed(this._value,this.format.decimals),b=parseFixed(other._value,other.format.decimals);return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier),this.format.decimals,this.format)}divUnsafe(other){this._checkFormat(other);const a=parseFixed(this._value,this.format.decimals),b=parseFixed(other._value,other.format.decimals);return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b),this.format.decimals,this.format)}floor(){const comps=this.toString().split(".");1===comps.length&&comps.push("0");let result=FixedNumber.from(comps[0],this.format);const hasFraction=!comps[1].match(/^(0*)$/);return this.isNegative()&&hasFraction&&(result=result.subUnsafe(ONE.toFormat(result.format))),result}ceiling(){const comps=this.toString().split(".");1===comps.length&&comps.push("0");let result=FixedNumber.from(comps[0],this.format);const hasFraction=!comps[1].match(/^(0*)$/);return!this.isNegative()&&hasFraction&&(result=result.addUnsafe(ONE.toFormat(result.format))),result}round(decimals){null==decimals&&(decimals=0);const comps=this.toString().split(".");if(1===comps.length&&comps.push("0"),(decimals<0||decimals>80||decimals%1)&&fixednumber_logger.throwArgumentError("invalid decimal count","decimals",decimals),comps[1].length<=decimals)return this;const factor=FixedNumber.from("1"+zeros.substring(0,decimals),this.format),bump=BUMP.toFormat(this.format);return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor)}isZero(){return"0.0"===this._value||"0"===this._value}isNegative(){return"-"===this._value[0]}toString(){return this._value}toHexString(width){if(null==width)return this._hex;width%8&&fixednumber_logger.throwArgumentError("invalid byte width","width",width);const hex=bignumber.gH.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();return(0,lib_esm.bj)(hex,width/8)}toUnsafeFloat(){return parseFloat(this.toString())}toFormat(format){return FixedNumber.fromString(this._value,format)}static fromValue(value,decimals,format){return null!=format||null==decimals||(0,bignumber.YR)(decimals)||(format=decimals,decimals=null),null==decimals&&(decimals=0),null==format&&(format="fixed"),FixedNumber.fromString(formatFixed(value,decimals),FixedFormat.from(format))}static fromString(value,format){null==format&&(format="fixed");const fixedFormat=FixedFormat.from(format),numeric=parseFixed(value,fixedFormat.decimals);!fixedFormat.signed&&numeric.lt(fixednumber_Zero)&&fixednumber_throwFault("unsigned value cannot be negative","overflow","value",value);let hex=null;fixedFormat.signed?hex=numeric.toTwos(fixedFormat.width).toHexString():(hex=numeric.toHexString(),hex=(0,lib_esm.bj)(hex,fixedFormat.width/8));const decimal=formatFixed(numeric,fixedFormat.decimals);return new FixedNumber(fixednumber_constructorGuard,hex,decimal,fixedFormat)}static fromBytes(value,format){null==format&&(format="fixed");const fixedFormat=FixedFormat.from(format);if((0,lib_esm.k9)(value).length>fixedFormat.width/8)throw new Error("overflow");let numeric=bignumber.gH.from(value);fixedFormat.signed&&(numeric=numeric.fromTwos(fixedFormat.width));const hex=numeric.toTwos((fixedFormat.signed?0:1)+fixedFormat.width).toHexString(),decimal=formatFixed(numeric,fixedFormat.decimals);return new FixedNumber(fixednumber_constructorGuard,hex,decimal,fixedFormat)}static from(value,format){if("string"==typeof value)return FixedNumber.fromString(value,format);if((0,lib_esm.aY)(value))return FixedNumber.fromBytes(value,format);try{return FixedNumber.fromValue(value,0,format)}catch(error){if(error.code!==logger_lib_esm.Vy.errors.INVALID_ARGUMENT)throw error}return fixednumber_logger.throwArgumentError("invalid FixedNumber value","value",value)}static isFixedNumber(value){return!(!value||!value._isFixedNumber)}}const ONE=FixedNumber.from(1),BUMP=FixedNumber.from("0.5");var lib_esm_console=__webpack_require__("./node_modules/console-browserify/index.js");let lib_esm_permanentCensorErrors=!1,lib_esm_censorErrors=!1;const lib_esm_LogLevels={debug:1,default:2,info:2,warning:3,error:4,off:5};let lib_esm_logLevel=lib_esm_LogLevels.default,lib_esm_globalLogger=null;const lib_esm_normalizeError=function lib_esm_checkNormalize(){try{const missing=[];if(["NFD","NFC","NFKD","NFKC"].forEach(form=>{try{if("test"!=="test".normalize(form))throw new Error("bad normalize")}catch(error){missing.push(form)}}),missing.length)throw new Error("missing "+missing.join(", "));if(String.fromCharCode(233).normalize("NFD")!==String.fromCharCode(101,769))throw new Error("broken implementation")}catch(error){return error.message}return null}();var lib_esm_LogLevel,lib_esm_ErrorCode;!function(LogLevel){LogLevel.DEBUG="DEBUG",LogLevel.INFO="INFO",LogLevel.WARNING="WARNING",LogLevel.ERROR="ERROR",LogLevel.OFF="OFF"}(lib_esm_LogLevel||(lib_esm_LogLevel={})),function(ErrorCode){ErrorCode.UNKNOWN_ERROR="UNKNOWN_ERROR",ErrorCode.NOT_IMPLEMENTED="NOT_IMPLEMENTED",ErrorCode.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION",ErrorCode.NETWORK_ERROR="NETWORK_ERROR",ErrorCode.SERVER_ERROR="SERVER_ERROR",ErrorCode.TIMEOUT="TIMEOUT",ErrorCode.BUFFER_OVERRUN="BUFFER_OVERRUN",ErrorCode.NUMERIC_FAULT="NUMERIC_FAULT",ErrorCode.MISSING_NEW="MISSING_NEW",ErrorCode.INVALID_ARGUMENT="INVALID_ARGUMENT",ErrorCode.MISSING_ARGUMENT="MISSING_ARGUMENT",ErrorCode.UNEXPECTED_ARGUMENT="UNEXPECTED_ARGUMENT",ErrorCode.CALL_EXCEPTION="CALL_EXCEPTION",ErrorCode.INSUFFICIENT_FUNDS="INSUFFICIENT_FUNDS",ErrorCode.NONCE_EXPIRED="NONCE_EXPIRED",ErrorCode.REPLACEMENT_UNDERPRICED="REPLACEMENT_UNDERPRICED",ErrorCode.UNPREDICTABLE_GAS_LIMIT="UNPREDICTABLE_GAS_LIMIT",ErrorCode.TRANSACTION_REPLACED="TRANSACTION_REPLACED",ErrorCode.ACTION_REJECTED="ACTION_REJECTED"}(lib_esm_ErrorCode||(lib_esm_ErrorCode={}));class logger_lib_esm_Logger{constructor(version){Object.defineProperty(this,"version",{enumerable:!0,value:version,writable:!1})}_log(logLevel,args){const level=logLevel.toLowerCase();null==lib_esm_LogLevels[level]&&this.throwArgumentError("invalid log level name","logLevel",logLevel),lib_esm_logLevel>lib_esm_LogLevels[level]||lib_esm_console.log.apply(lib_esm_console,args)}debug(...args){this._log(logger_lib_esm_Logger.levels.DEBUG,args)}info(...args){this._log(logger_lib_esm_Logger.levels.INFO,args)}warn(...args){this._log(logger_lib_esm_Logger.levels.WARNING,args)}makeError(message,code,params){if(lib_esm_censorErrors)return this.makeError("censored error",code,{});code||(code=logger_lib_esm_Logger.errors.UNKNOWN_ERROR),params||(params={});const messageDetails=[];Object.keys(params).forEach(key=>{const value=params[key];try{if(value instanceof Uint8Array){let hex="";for(let i=0;i<value.length;i++)hex+="0123456789abcdef"[value[i]>>4],hex+="0123456789abcdef"[15&value[i]];messageDetails.push(key+"=Uint8Array(0x"+hex+")")}else messageDetails.push(key+"="+JSON.stringify(value))}catch(error){messageDetails.push(key+"="+JSON.stringify(params[key].toString()))}}),messageDetails.push(`code=${code}`),messageDetails.push(`version=${this.version}`);const reason=message;let url="";switch(code){case lib_esm_ErrorCode.NUMERIC_FAULT:{url="NUMERIC_FAULT";const fault=message;switch(fault){case"overflow":case"underflow":case"division-by-zero":url+="-"+fault;break;case"negative-power":case"negative-width":url+="-unsupported";break;case"unbound-bitwise-result":url+="-unbound-result"}break}case lib_esm_ErrorCode.CALL_EXCEPTION:case lib_esm_ErrorCode.INSUFFICIENT_FUNDS:case lib_esm_ErrorCode.MISSING_NEW:case lib_esm_ErrorCode.NONCE_EXPIRED:case lib_esm_ErrorCode.REPLACEMENT_UNDERPRICED:case lib_esm_ErrorCode.TRANSACTION_REPLACED:case lib_esm_ErrorCode.UNPREDICTABLE_GAS_LIMIT:url=code}url&&(message+=" [ See: https://links.ethers.org/v5-errors-"+url+" ]"),messageDetails.length&&(message+=" ("+messageDetails.join(", ")+")");const error=new Error(message);return error.reason=reason,error.code=code,Object.keys(params).forEach(function(key){error[key]=params[key]}),error}throwError(message,code,params){throw this.makeError(message,code,params)}throwArgumentError(message,name,value){return this.throwError(message,logger_lib_esm_Logger.errors.INVALID_ARGUMENT,{argument:name,value})}assert(condition,message,code,params){condition||this.throwError(message,code,params)}assertArgument(condition,message,name,value){condition||this.throwArgumentError(message,name,value)}checkNormalize(message){null==message&&(message="platform missing String.prototype.normalize"),lib_esm_normalizeError&&this.throwError("platform missing String.prototype.normalize",logger_lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:lib_esm_normalizeError})}checkSafeUint53(value,message){"number"==typeof value&&(null==message&&(message="value not safe"),(value<0||value>=9007199254740991)&&this.throwError(message,logger_lib_esm_Logger.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value}),value%1&&this.throwError(message,logger_lib_esm_Logger.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value}))}checkArgumentCount(count,expectedCount,message){message=message?": "+message:"",count<expectedCount&&this.throwError("missing argument"+message,logger_lib_esm_Logger.errors.MISSING_ARGUMENT,{count,expectedCount}),count>expectedCount&&this.throwError("too many arguments"+message,logger_lib_esm_Logger.errors.UNEXPECTED_ARGUMENT,{count,expectedCount})}checkNew(target,kind){target!==Object&&null!=target||this.throwError("missing new",logger_lib_esm_Logger.errors.MISSING_NEW,{name:kind.name})}checkAbstract(target,kind){target===kind?this.throwError("cannot instantiate abstract class "+JSON.stringify(kind.name)+" directly; use a sub-class",logger_lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{name:target.name,operation:"new"}):target!==Object&&null!=target||this.throwError("missing new",logger_lib_esm_Logger.errors.MISSING_NEW,{name:kind.name})}static globalLogger(){return lib_esm_globalLogger||(lib_esm_globalLogger=new logger_lib_esm_Logger("logger/5.8.0")),lib_esm_globalLogger}static setCensorship(censorship,permanent){if(!censorship&&permanent&&this.globalLogger().throwError("cannot permanently disable censorship",logger_lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"}),lib_esm_permanentCensorErrors){if(!censorship)return;this.globalLogger().throwError("error censorship permanent",logger_lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}lib_esm_censorErrors=!!censorship,lib_esm_permanentCensorErrors=!!permanent}static setLogLevel(logLevel){const level=lib_esm_LogLevels[logLevel.toLowerCase()];null!=level?lib_esm_logLevel=level:logger_lib_esm_Logger.globalLogger().warn("invalid log level - "+logLevel)}static from(version){return new logger_lib_esm_Logger(version)}}logger_lib_esm_Logger.errors=lib_esm_ErrorCode,logger_lib_esm_Logger.levels=lib_esm_LogLevel;var properties_lib_esm_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};new logger_lib_esm_Logger("properties/5.8.0");function lib_esm_defineReadOnly(object,name,value){Object.defineProperty(object,name,{enumerable:!0,value,writable:!1})}function lib_esm_resolveProperties(object){return properties_lib_esm_awaiter(this,void 0,void 0,function*(){const promises=Object.keys(object).map(key=>{const value=object[key];return Promise.resolve(value).then(v=>({key,value:v}))});return(yield Promise.all(promises)).reduce((accum,result)=>(accum[result.key]=result.value,accum),{})})}var _ethersproject_abstract_signer_lib_esm_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const _ethersproject_abstract_signer_lib_esm_logger=new logger_lib_esm_Logger("abstract-signer/5.7.0"),abstract_signer_lib_esm_allowedTransactionKeys=["accessList","ccipReadEnabled","chainId","customData","data","from","gasLimit","gasPrice","maxFeePerGas","maxPriorityFeePerGas","nonce","to","type","value"],lib_esm_forwardErrors=[logger_lib_esm_Logger.errors.INSUFFICIENT_FUNDS,logger_lib_esm_Logger.errors.NONCE_EXPIRED,logger_lib_esm_Logger.errors.REPLACEMENT_UNDERPRICED];class lib_esm_Signer{constructor(){_ethersproject_abstract_signer_lib_esm_logger.checkAbstract(new.target,lib_esm_Signer),lib_esm_defineReadOnly(this,"_isSigner",!0)}getBalance(blockTag){return _ethersproject_abstract_signer_lib_esm_awaiter(this,void 0,void 0,function*(){return this._checkProvider("getBalance"),yield this.provider.getBalance(this.getAddress(),blockTag)})}getTransactionCount(blockTag){return _ethersproject_abstract_signer_lib_esm_awaiter(this,void 0,void 0,function*(){return this._checkProvider("getTransactionCount"),yield this.provider.getTransactionCount(this.getAddress(),blockTag)})}estimateGas(transaction){return _ethersproject_abstract_signer_lib_esm_awaiter(this,void 0,void 0,function*(){this._checkProvider("estimateGas");const tx=yield lib_esm_resolveProperties(this.checkTransaction(transaction));return yield this.provider.estimateGas(tx)})}call(transaction,blockTag){return _ethersproject_abstract_signer_lib_esm_awaiter(this,void 0,void 0,function*(){this._checkProvider("call");const tx=yield lib_esm_resolveProperties(this.checkTransaction(transaction));return yield this.provider.call(tx,blockTag)})}sendTransaction(transaction){return _ethersproject_abstract_signer_lib_esm_awaiter(this,void 0,void 0,function*(){this._checkProvider("sendTransaction");const tx=yield this.populateTransaction(transaction),signedTx=yield this.signTransaction(tx);return yield this.provider.sendTransaction(signedTx)})}getChainId(){return _ethersproject_abstract_signer_lib_esm_awaiter(this,void 0,void 0,function*(){this._checkProvider("getChainId");return(yield this.provider.getNetwork()).chainId})}getGasPrice(){return _ethersproject_abstract_signer_lib_esm_awaiter(this,void 0,void 0,function*(){return this._checkProvider("getGasPrice"),yield this.provider.getGasPrice()})}getFeeData(){return _ethersproject_abstract_signer_lib_esm_awaiter(this,void 0,void 0,function*(){return this._checkProvider("getFeeData"),yield this.provider.getFeeData()})}resolveName(name){return _ethersproject_abstract_signer_lib_esm_awaiter(this,void 0,void 0,function*(){return this._checkProvider("resolveName"),yield this.provider.resolveName(name)})}checkTransaction(transaction){for(const key in transaction)-1===abstract_signer_lib_esm_allowedTransactionKeys.indexOf(key)&&_ethersproject_abstract_signer_lib_esm_logger.throwArgumentError("invalid transaction key: "+key,"transaction",transaction);const tx=function lib_esm_shallowCopy(object){const result={};for(const key in object)result[key]=object[key];return result}(transaction);return null==tx.from?tx.from=this.getAddress():tx.from=Promise.all([Promise.resolve(tx.from),this.getAddress()]).then(result=>(result[0].toLowerCase()!==result[1].toLowerCase()&&_ethersproject_abstract_signer_lib_esm_logger.throwArgumentError("from address mismatch","transaction",transaction),result[0])),tx}populateTransaction(transaction){return _ethersproject_abstract_signer_lib_esm_awaiter(this,void 0,void 0,function*(){const tx=yield lib_esm_resolveProperties(this.checkTransaction(transaction));null!=tx.to&&(tx.to=Promise.resolve(tx.to).then(to=>_ethersproject_abstract_signer_lib_esm_awaiter(this,void 0,void 0,function*(){if(null==to)return null;const address=yield this.resolveName(to);return null==address&&_ethersproject_abstract_signer_lib_esm_logger.throwArgumentError("provided ENS name resolves to null","tx.to",to),address})),tx.to.catch(error=>{}));const hasEip1559=null!=tx.maxFeePerGas||null!=tx.maxPriorityFeePerGas;if(null==tx.gasPrice||2!==tx.type&&!hasEip1559?0!==tx.type&&1!==tx.type||!hasEip1559||_ethersproject_abstract_signer_lib_esm_logger.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas","transaction",transaction):_ethersproject_abstract_signer_lib_esm_logger.throwArgumentError("eip-1559 transaction do not support gasPrice","transaction",transaction),2!==tx.type&&null!=tx.type||null==tx.maxFeePerGas||null==tx.maxPriorityFeePerGas)if(0===tx.type||1===tx.type)null==tx.gasPrice&&(tx.gasPrice=this.getGasPrice());else{const feeData=yield this.getFeeData();if(null==tx.type)if(null!=feeData.maxFeePerGas&&null!=feeData.maxPriorityFeePerGas)if(tx.type=2,null!=tx.gasPrice){const gasPrice=tx.gasPrice;delete tx.gasPrice,tx.maxFeePerGas=gasPrice,tx.maxPriorityFeePerGas=gasPrice}else null==tx.maxFeePerGas&&(tx.maxFeePerGas=feeData.maxFeePerGas),null==tx.maxPriorityFeePerGas&&(tx.maxPriorityFeePerGas=feeData.maxPriorityFeePerGas);else null!=feeData.gasPrice?(hasEip1559&&_ethersproject_abstract_signer_lib_esm_logger.throwError("network does not support EIP-1559",logger_lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:"populateTransaction"}),null==tx.gasPrice&&(tx.gasPrice=feeData.gasPrice),tx.type=0):_ethersproject_abstract_signer_lib_esm_logger.throwError("failed to get consistent fee data",logger_lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:"signer.getFeeData"});else 2===tx.type&&(null==tx.maxFeePerGas&&(tx.maxFeePerGas=feeData.maxFeePerGas),null==tx.maxPriorityFeePerGas&&(tx.maxPriorityFeePerGas=feeData.maxPriorityFeePerGas))}else tx.type=2;return null==tx.nonce&&(tx.nonce=this.getTransactionCount("pending")),null==tx.gasLimit&&(tx.gasLimit=this.estimateGas(tx).catch(error=>{if(lib_esm_forwardErrors.indexOf(error.code)>=0)throw error;return _ethersproject_abstract_signer_lib_esm_logger.throwError("cannot estimate gas; transaction may fail or may require manual gas limit",logger_lib_esm_Logger.errors.UNPREDICTABLE_GAS_LIMIT,{error,tx})})),null==tx.chainId?tx.chainId=this.getChainId():tx.chainId=Promise.all([Promise.resolve(tx.chainId),this.getChainId()]).then(results=>(0!==results[1]&&results[0]!==results[1]&&_ethersproject_abstract_signer_lib_esm_logger.throwArgumentError("chainId address mismatch","transaction",transaction),results[0])),yield lib_esm_resolveProperties(tx)})}_checkProvider(operation){this.provider||_ethersproject_abstract_signer_lib_esm_logger.throwError("missing provider",logger_lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:operation||"_checkProvider"})}static isSigner(value){return!(!value||!value._isSigner)}}class lib_esm_VoidSigner extends lib_esm_Signer{constructor(address,provider){super(),lib_esm_defineReadOnly(this,"address",address),lib_esm_defineReadOnly(this,"provider",provider||null)}getAddress(){return Promise.resolve(this.address)}_fail(message,operation){return Promise.resolve().then(()=>{_ethersproject_abstract_signer_lib_esm_logger.throwError(message,logger_lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation})})}signMessage(message){return this._fail("VoidSigner cannot sign messages","signMessage")}signTransaction(transaction){return this._fail("VoidSigner cannot sign transactions","signTransaction")}_signTypedData(domain,types,value){return this._fail("VoidSigner cannot sign typed data","signTypedData")}connect(provider){return new lib_esm_VoidSigner(this.address,provider)}}var wallet_lib_esm=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/wallet/lib.esm/index.js"),addresses=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/constants/lib.esm/addresses.js"),bignumbers=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/constants/lib.esm/bignumbers.js");const HashZero="0x0000000000000000000000000000000000000000000000000000000000000000",EtherSymbol="Ξ";var abstract_provider_lib_esm=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/providers/node_modules/@ethersproject/abstract-provider/lib.esm/index.js"),networks_lib_esm=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/providers/node_modules/@ethersproject/networks/lib.esm/index.js"),base_provider=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/providers/lib.esm/base-provider.js"),properties_lib_esm=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/providers/node_modules/@ethersproject/properties/lib.esm/index.js"),formatter=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/providers/lib.esm/formatter.js"),lib_esm_bignumber=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/providers/node_modules/@ethersproject/bignumber/lib.esm/bignumber.js"),json_rpc_provider=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/providers/lib.esm/json-rpc-provider.js"),_ethersproject_logger_lib_esm=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/providers/node_modules/@ethersproject/logger/lib.esm/index.js"),lib_esm_version=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/providers/lib.esm/_version.js");let WS=null;try{if(WS=WebSocket,null==WS)throw new Error("inject please")}catch(error){const logger=new _ethersproject_logger_lib_esm.Vy(lib_esm_version.r);WS=function(){logger.throwError("WebSockets not supported in this environment",_ethersproject_logger_lib_esm.Vy.errors.UNSUPPORTED_OPERATION,{operation:"new WebSocket()"})}}var websocket_provider_console=__webpack_require__("./node_modules/console-browserify/index.js"),websocket_provider_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const websocket_provider_logger=new _ethersproject_logger_lib_esm.Vy(lib_esm_version.r);let NextId=1;class WebSocketProvider extends json_rpc_provider.F{constructor(url,network){"any"===network&&websocket_provider_logger.throwError("WebSocketProvider does not support 'any' network yet",_ethersproject_logger_lib_esm.Vy.errors.UNSUPPORTED_OPERATION,{operation:"network:any"}),super("string"==typeof url?url:"_websocket",network),this._pollingInterval=-1,this._wsReady=!1,"string"==typeof url?(0,properties_lib_esm.yY)(this,"_websocket",new WS(this.connection.url)):(0,properties_lib_esm.yY)(this,"_websocket",url),(0,properties_lib_esm.yY)(this,"_requests",{}),(0,properties_lib_esm.yY)(this,"_subs",{}),(0,properties_lib_esm.yY)(this,"_subIds",{}),(0,properties_lib_esm.yY)(this,"_detectNetwork",super.detectNetwork()),this.websocket.onopen=()=>{this._wsReady=!0,Object.keys(this._requests).forEach(id=>{this.websocket.send(this._requests[id].payload)})},this.websocket.onmessage=messageEvent=>{const data=messageEvent.data,result=JSON.parse(data);if(null!=result.id){const id=String(result.id),request=this._requests[id];if(delete this._requests[id],void 0!==result.result)request.callback(null,result.result),this.emit("debug",{action:"response",request:JSON.parse(request.payload),response:result.result,provider:this});else{let error=null;result.error?(error=new Error(result.error.message||"unknown error"),(0,properties_lib_esm.yY)(error,"code",result.error.code||null),(0,properties_lib_esm.yY)(error,"response",data)):error=new Error("unknown error"),request.callback(error,void 0),this.emit("debug",{action:"response",error,request:JSON.parse(request.payload),provider:this})}}else if("eth_subscription"===result.method){const sub=this._subs[result.params.subscription];sub&&sub.processFunc(result.params.result)}else websocket_provider_console.warn("this should not happen")};const fauxPoll=setInterval(()=>{this.emit("poll")},1e3);fauxPoll.unref&&fauxPoll.unref()}get websocket(){return this._websocket}detectNetwork(){return this._detectNetwork}get pollingInterval(){return 0}resetEventsBlock(blockNumber){websocket_provider_logger.throwError("cannot reset events block on WebSocketProvider",_ethersproject_logger_lib_esm.Vy.errors.UNSUPPORTED_OPERATION,{operation:"resetEventBlock"})}set pollingInterval(value){websocket_provider_logger.throwError("cannot set polling interval on WebSocketProvider",_ethersproject_logger_lib_esm.Vy.errors.UNSUPPORTED_OPERATION,{operation:"setPollingInterval"})}poll(){return websocket_provider_awaiter(this,void 0,void 0,function*(){return null})}set polling(value){value&&websocket_provider_logger.throwError("cannot set polling on WebSocketProvider",_ethersproject_logger_lib_esm.Vy.errors.UNSUPPORTED_OPERATION,{operation:"setPolling"})}send(method,params){const rid=NextId++;return new Promise((resolve,reject)=>{const payload=JSON.stringify({method,params,id:rid,jsonrpc:"2.0"});this.emit("debug",{action:"request",request:JSON.parse(payload),provider:this}),this._requests[String(rid)]={callback:function callback(error,result){return error?reject(error):resolve(result)},payload},this._wsReady&&this.websocket.send(payload)})}static defaultUrl(){return"ws://localhost:8546"}_subscribe(tag,param,processFunc){return websocket_provider_awaiter(this,void 0,void 0,function*(){let subIdPromise=this._subIds[tag];null==subIdPromise&&(subIdPromise=Promise.all(param).then(param=>this.send("eth_subscribe",param)),this._subIds[tag]=subIdPromise);const subId=yield subIdPromise;this._subs[subId]={tag,processFunc}})}_startEvent(event){switch(event.type){case"block":this._subscribe("block",["newHeads"],result=>{const blockNumber=lib_esm_bignumber.gH.from(result.number).toNumber();this._emitted.block=blockNumber,this.emit("block",blockNumber)});break;case"pending":this._subscribe("pending",["newPendingTransactions"],result=>{this.emit("pending",result)});break;case"filter":this._subscribe(event.tag,["logs",this._getFilter(event.filter)],result=>{null==result.removed&&(result.removed=!1),this.emit(event.filter,this.formatter.filterLog(result))});break;case"tx":{const emitReceipt=event=>{const hash=event.hash;this.getTransactionReceipt(hash).then(receipt=>{receipt&&this.emit(hash,receipt)})};emitReceipt(event),this._subscribe("tx",["newHeads"],result=>{this._events.filter(e=>"tx"===e.type).forEach(emitReceipt)});break}case"debug":case"poll":case"willPoll":case"didPoll":case"error":break;default:websocket_provider_console.log("unhandled:",event)}}_stopEvent(event){let tag=event.tag;if("tx"===event.type){if(this._events.filter(e=>"tx"===e.type).length)return;tag="tx"}else if(this.listenerCount(event.event))return;const subId=this._subIds[tag];subId&&(delete this._subIds[tag],subId.then(subId=>{this._subs[subId]&&(delete this._subs[subId],this.send("eth_unsubscribe",[subId]))}))}destroy(){return websocket_provider_awaiter(this,void 0,void 0,function*(){this.websocket.readyState===WS.CONNECTING&&(yield new Promise(resolve=>{this.websocket.onopen=function(){resolve(!0)},this.websocket.onerror=function(){resolve(!1)}})),this.websocket.close(1e3)})}}var url_json_rpc_provider_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const url_json_rpc_provider_logger=new _ethersproject_logger_lib_esm.Vy(lib_esm_version.r);class StaticJsonRpcProvider extends json_rpc_provider.F{detectNetwork(){const _super=Object.create(null,{detectNetwork:{get:()=>super.detectNetwork}});return url_json_rpc_provider_awaiter(this,void 0,void 0,function*(){let network=this.network;return null==network&&(network=yield _super.detectNetwork.call(this),network||url_json_rpc_provider_logger.throwError("no network detected",_ethersproject_logger_lib_esm.Vy.errors.UNKNOWN_ERROR,{}),null==this._network&&((0,properties_lib_esm.yY)(this,"_network",network),this.emit("network",network,null))),network})}}class UrlJsonRpcProvider extends StaticJsonRpcProvider{constructor(network,apiKey){url_json_rpc_provider_logger.checkAbstract(new.target,UrlJsonRpcProvider),network=(0,properties_lib_esm.$J)(new.target,"getNetwork")(network),apiKey=(0,properties_lib_esm.$J)(new.target,"getApiKey")(apiKey);super((0,properties_lib_esm.$J)(new.target,"getUrl")(network,apiKey),network),"string"==typeof apiKey?(0,properties_lib_esm.yY)(this,"apiKey",apiKey):null!=apiKey&&Object.keys(apiKey).forEach(key=>{(0,properties_lib_esm.yY)(this,key,apiKey[key])})}_startPending(){url_json_rpc_provider_logger.warn("WARNING: API provider does not support pending filters")}isCommunityResource(){return!1}getSigner(address){return url_json_rpc_provider_logger.throwError("API provider does not support signing",_ethersproject_logger_lib_esm.Vy.errors.UNSUPPORTED_OPERATION,{operation:"getSigner"})}listAccounts(){return Promise.resolve([])}static getApiKey(apiKey){return apiKey}static getUrl(network,apiKey){return url_json_rpc_provider_logger.throwError("not implemented; sub-classes must override getUrl",_ethersproject_logger_lib_esm.Vy.errors.NOT_IMPLEMENTED,{operation:"getUrl"})}}const alchemy_provider_logger=new _ethersproject_logger_lib_esm.Vy(lib_esm_version.r),defaultApiKey="_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC";class AlchemyWebSocketProvider extends WebSocketProvider{constructor(network,apiKey){const provider=new AlchemyProvider(network,apiKey);super(provider.connection.url.replace(/^http/i,"ws").replace(".alchemyapi.",".ws.alchemyapi."),provider.network),(0,properties_lib_esm.yY)(this,"apiKey",provider.apiKey)}isCommunityResource(){return this.apiKey===defaultApiKey}}class AlchemyProvider extends UrlJsonRpcProvider{static getWebSocketProvider(network,apiKey){return new AlchemyWebSocketProvider(network,apiKey)}static getApiKey(apiKey){return null==apiKey?defaultApiKey:(apiKey&&"string"!=typeof apiKey&&alchemy_provider_logger.throwArgumentError("invalid apiKey","apiKey",apiKey),apiKey)}static getUrl(network,apiKey){let host=null;switch(network.name){case"homestead":host="eth-mainnet.alchemyapi.io/v2/";break;case"goerli":host="eth-goerli.g.alchemy.com/v2/";break;case"matic":host="polygon-mainnet.g.alchemy.com/v2/";break;case"maticmum":host="polygon-mumbai.g.alchemy.com/v2/";break;case"arbitrum":host="arb-mainnet.g.alchemy.com/v2/";break;case"arbitrum-goerli":host="arb-goerli.g.alchemy.com/v2/";break;case"optimism":host="opt-mainnet.g.alchemy.com/v2/";break;case"optimism-goerli":host="opt-goerli.g.alchemy.com/v2/";break;default:alchemy_provider_logger.throwArgumentError("unsupported network","network",arguments[0])}return{allowGzip:!0,url:"https://"+host+apiKey,throttleCallback:(attempt,url)=>(apiKey===defaultApiKey&&(0,formatter.Zd)(),Promise.resolve(!0))}}isCommunityResource(){return this.apiKey===defaultApiKey}}const ankr_provider_logger=new _ethersproject_logger_lib_esm.Vy(lib_esm_version.r),ankr_provider_defaultApiKey="9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972";function getHost(name){switch(name){case"homestead":return"rpc.ankr.com/eth/";case"ropsten":return"rpc.ankr.com/eth_ropsten/";case"rinkeby":return"rpc.ankr.com/eth_rinkeby/";case"goerli":return"rpc.ankr.com/eth_goerli/";case"matic":return"rpc.ankr.com/polygon/";case"arbitrum":return"rpc.ankr.com/arbitrum/"}return ankr_provider_logger.throwArgumentError("unsupported network","name",name)}class AnkrProvider extends UrlJsonRpcProvider{isCommunityResource(){return this.apiKey===ankr_provider_defaultApiKey}static getApiKey(apiKey){return null==apiKey?ankr_provider_defaultApiKey:apiKey}static getUrl(network,apiKey){null==apiKey&&(apiKey=ankr_provider_defaultApiKey);const connection={allowGzip:!0,url:"https://"+getHost(network.name)+apiKey,throttleCallback:(attempt,url)=>(apiKey.apiKey===ankr_provider_defaultApiKey&&(0,formatter.Zd)(),Promise.resolve(!0))};return null!=apiKey.projectSecret&&(connection.user="",connection.password=apiKey.projectSecret),connection}}var cloudflare_provider_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const cloudflare_provider_logger=new _ethersproject_logger_lib_esm.Vy(lib_esm_version.r);class CloudflareProvider extends UrlJsonRpcProvider{static getApiKey(apiKey){return null!=apiKey&&cloudflare_provider_logger.throwArgumentError("apiKey not supported for cloudflare","apiKey",apiKey),null}static getUrl(network,apiKey){let host=null;if("homestead"===network.name)host="https://cloudflare-eth.com/";else cloudflare_provider_logger.throwArgumentError("unsupported network","network",arguments[0]);return host}perform(method,params){const _super=Object.create(null,{perform:{get:()=>super.perform}});return cloudflare_provider_awaiter(this,void 0,void 0,function*(){if("getBlockNumber"===method){return(yield _super.perform.call(this,"getBlock",{blockTag:"latest"})).number}return _super.perform.call(this,method,params)})}}var bytes_lib_esm=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/providers/node_modules/@ethersproject/bytes/lib.esm/index.js"),transactions_lib_esm=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/providers/node_modules/@ethersproject/transactions/lib.esm/index.js"),web_lib_esm=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/providers/node_modules/@ethersproject/web/lib.esm/index.js"),etherscan_provider_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const etherscan_provider_logger=new _ethersproject_logger_lib_esm.Vy(lib_esm_version.r);function getTransactionPostData(transaction){const result={};for(let key in transaction){if(null==transaction[key])continue;let value=transaction[key];"type"===key&&0===value||(value={type:!0,gasLimit:!0,gasPrice:!0,maxFeePerGs:!0,maxPriorityFeePerGas:!0,nonce:!0,value:!0}[key]?(0,bytes_lib_esm.Fh)((0,bytes_lib_esm.c$)(value)):"accessList"===key?"["+(0,transactions_lib_esm.$2)(value).map(set=>`{address:"${set.address}",storageKeys:["${set.storageKeys.join('","')}"]}`).join(",")+"]":(0,bytes_lib_esm.c$)(value),result[key]=value)}return result}function getResult(result){if(0==result.status&&("No records found"===result.message||"No transactions found"===result.message))return result.result;if(1!=result.status||"string"!=typeof result.message||!result.message.match(/^OK/)){const error=new Error("invalid response");throw error.result=JSON.stringify(result),(result.result||"").toLowerCase().indexOf("rate limit")>=0&&(error.throttleRetry=!0),error}return result.result}function getJsonResult(result){if(result&&0==result.status&&"NOTOK"==result.message&&(result.result||"").toLowerCase().indexOf("rate limit")>=0){const error=new Error("throttled response");throw error.result=JSON.stringify(result),error.throttleRetry=!0,error}if("2.0"!=result.jsonrpc){const error=new Error("invalid response");throw error.result=JSON.stringify(result),error}if(result.error){const error=new Error(result.error.message||"unknown error");throw result.error.code&&(error.code=result.error.code),result.error.data&&(error.data=result.error.data),error}return result.result}function checkLogTag(blockTag){if("pending"===blockTag)throw new Error("pending not supported");return"latest"===blockTag?blockTag:parseInt(blockTag.substring(2),16)}function checkError(method,error,transaction){if("call"===method&&error.code===_ethersproject_logger_lib_esm.Vy.errors.SERVER_ERROR){const e=error.error;if(e&&(e.message.match(/reverted/i)||e.message.match(/VM execution error/i))){let data=e.data;if(data&&(data="0x"+data.replace(/^.*0x/i,"")),(0,bytes_lib_esm.Lo)(data))return data;etherscan_provider_logger.throwError("missing revert data in call exception",_ethersproject_logger_lib_esm.Vy.errors.CALL_EXCEPTION,{error,data:"0x"})}}let message=error.message;throw error.code===_ethersproject_logger_lib_esm.Vy.errors.SERVER_ERROR&&(error.error&&"string"==typeof error.error.message?message=error.error.message:"string"==typeof error.body?message=error.body:"string"==typeof error.responseText&&(message=error.responseText)),message=(message||"").toLowerCase(),message.match(/insufficient funds/)&&etherscan_provider_logger.throwError("insufficient funds for intrinsic transaction cost",_ethersproject_logger_lib_esm.Vy.errors.INSUFFICIENT_FUNDS,{error,method,transaction}),message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)&&etherscan_provider_logger.throwError("nonce has already been used",_ethersproject_logger_lib_esm.Vy.errors.NONCE_EXPIRED,{error,method,transaction}),message.match(/another transaction with same nonce/)&&etherscan_provider_logger.throwError("replacement fee too low",_ethersproject_logger_lib_esm.Vy.errors.REPLACEMENT_UNDERPRICED,{error,method,transaction}),message.match(/execution failed due to an exception|execution reverted/)&&etherscan_provider_logger.throwError("cannot estimate gas; transaction may fail or may require manual gas limit",_ethersproject_logger_lib_esm.Vy.errors.UNPREDICTABLE_GAS_LIMIT,{error,method,transaction}),error}class EtherscanProvider extends base_provider.DJ{constructor(network,apiKey){super(network),(0,properties_lib_esm.yY)(this,"baseUrl",this.getBaseUrl()),(0,properties_lib_esm.yY)(this,"apiKey",apiKey||null)}getBaseUrl(){switch(this.network?this.network.name:"invalid"){case"homestead":return"https://api.etherscan.io";case"goerli":return"https://api-goerli.etherscan.io";case"sepolia":return"https://api-sepolia.etherscan.io";case"matic":return"https://api.polygonscan.com";case"maticmum":return"https://api-testnet.polygonscan.com";case"arbitrum":return"https://api.arbiscan.io";case"arbitrum-goerli":return"https://api-goerli.arbiscan.io";case"optimism":return"https://api-optimistic.etherscan.io";case"optimism-goerli":return"https://api-goerli-optimistic.etherscan.io"}return etherscan_provider_logger.throwArgumentError("unsupported network","network",this.network.name)}getUrl(module,params){const query=Object.keys(params).reduce((accum,key)=>{const value=params[key];return null!=value&&(accum+=`&${key}=${value}`),accum},""),apiKey=this.apiKey?`&apikey=${this.apiKey}`:"";return`${this.baseUrl}/api?module=${module}${query}${apiKey}`}getPostUrl(){return`${this.baseUrl}/api`}getPostData(module,params){return params.module=module,params.apikey=this.apiKey,params}fetch(module,params,post){return etherscan_provider_awaiter(this,void 0,void 0,function*(){const url=post?this.getPostUrl():this.getUrl(module,params),payload=post?this.getPostData(module,params):null,procFunc="proxy"===module?getJsonResult:getResult;this.emit("debug",{action:"request",request:url,provider:this});const connection={url,throttleSlotInterval:1e3,throttleCallback:(attempt,url)=>(this.isCommunityResource()&&(0,formatter.Zd)(),Promise.resolve(!0))};let payloadStr=null;payload&&(connection.headers={"content-type":"application/x-www-form-urlencoded; charset=UTF-8"},payloadStr=Object.keys(payload).map(key=>`${key}=${payload[key]}`).join("&"));const result=yield(0,web_lib_esm.x6)(connection,payloadStr,procFunc||getJsonResult);return this.emit("debug",{action:"response",request:url,response:(0,properties_lib_esm.A4)(result),provider:this}),result})}detectNetwork(){return etherscan_provider_awaiter(this,void 0,void 0,function*(){return this.network})}perform(method,params){const _super=Object.create(null,{perform:{get:()=>super.perform}});return etherscan_provider_awaiter(this,void 0,void 0,function*(){switch(method){case"getBlockNumber":return this.fetch("proxy",{action:"eth_blockNumber"});case"getGasPrice":return this.fetch("proxy",{action:"eth_gasPrice"});case"getBalance":return this.fetch("account",{action:"balance",address:params.address,tag:params.blockTag});case"getTransactionCount":return this.fetch("proxy",{action:"eth_getTransactionCount",address:params.address,tag:params.blockTag});case"getCode":return this.fetch("proxy",{action:"eth_getCode",address:params.address,tag:params.blockTag});case"getStorageAt":return this.fetch("proxy",{action:"eth_getStorageAt",address:params.address,position:params.position,tag:params.blockTag});case"sendTransaction":return this.fetch("proxy",{action:"eth_sendRawTransaction",hex:params.signedTransaction},!0).catch(error=>checkError("sendTransaction",error,params.signedTransaction));case"getBlock":if(params.blockTag)return this.fetch("proxy",{action:"eth_getBlockByNumber",tag:params.blockTag,boolean:params.includeTransactions?"true":"false"});throw new Error("getBlock by blockHash not implemented");case"getTransaction":return this.fetch("proxy",{action:"eth_getTransactionByHash",txhash:params.transactionHash});case"getTransactionReceipt":return this.fetch("proxy",{action:"eth_getTransactionReceipt",txhash:params.transactionHash});case"call":{if("latest"!==params.blockTag)throw new Error("EtherscanProvider does not support blockTag for call");const postData=getTransactionPostData(params.transaction);postData.module="proxy",postData.action="eth_call";try{return yield this.fetch("proxy",postData,!0)}catch(error){return checkError("call",error,params.transaction)}}case"estimateGas":{const postData=getTransactionPostData(params.transaction);postData.module="proxy",postData.action="eth_estimateGas";try{return yield this.fetch("proxy",postData,!0)}catch(error){return checkError("estimateGas",error,params.transaction)}}case"getLogs":{const args={action:"getLogs"};if(params.filter.fromBlock&&(args.fromBlock=checkLogTag(params.filter.fromBlock)),params.filter.toBlock&&(args.toBlock=checkLogTag(params.filter.toBlock)),params.filter.address&&(args.address=params.filter.address),params.filter.topics&&params.filter.topics.length>0&&(params.filter.topics.length>1&&etherscan_provider_logger.throwError("unsupported topic count",_ethersproject_logger_lib_esm.Vy.errors.UNSUPPORTED_OPERATION,{topics:params.filter.topics}),1===params.filter.topics.length)){const topic0=params.filter.topics[0];"string"==typeof topic0&&66===topic0.length||etherscan_provider_logger.throwError("unsupported topic format",_ethersproject_logger_lib_esm.Vy.errors.UNSUPPORTED_OPERATION,{topic0}),args.topic0=topic0}const logs=yield this.fetch("logs",args);let blocks={};for(let i=0;i<logs.length;i++){const log=logs[i];if(null==log.blockHash){if(null==blocks[log.blockNumber]){const block=yield this.getBlock(log.blockNumber);block&&(blocks[log.blockNumber]=block.hash)}log.blockHash=blocks[log.blockNumber]}}return logs}case"getEtherPrice":return"homestead"!==this.network.name?0:parseFloat((yield this.fetch("stats",{action:"ethprice"})).ethusd)}return _super.perform.call(this,method,params)})}getHistory(addressOrName,startBlock,endBlock){return etherscan_provider_awaiter(this,void 0,void 0,function*(){const params={action:"txlist",address:yield this.resolveName(addressOrName),startblock:null==startBlock?0:startBlock,endblock:null==endBlock?99999999:endBlock,sort:"asc"};return(yield this.fetch("account",params)).map(tx=>{["contractAddress","to"].forEach(function(key){""==tx[key]&&delete tx[key]}),null==tx.creates&&null!=tx.contractAddress&&(tx.creates=tx.contractAddress);const item=this.formatter.transactionResponse(tx);return tx.timeStamp&&(item.timestamp=parseInt(tx.timeStamp)),item})})}isCommunityResource(){return null==this.apiKey}}var fallback_provider_awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};const fallback_provider_logger=new _ethersproject_logger_lib_esm.Vy(lib_esm_version.r);function now(){return(new Date).getTime()}function checkNetworks(networks){let result=null;for(let i=0;i<networks.length;i++){const network=networks[i];if(null==network)return null;result?result.name===network.name&&result.chainId===network.chainId&&(result.ensAddress===network.ensAddress||null==result.ensAddress&&null==network.ensAddress)||fallback_provider_logger.throwArgumentError("provider mismatch","networks",networks):result=network}return result}function median(values,maxDelta){values=values.slice().sort();const middle=Math.floor(values.length/2);if(values.length%2)return values[middle];const a=values[middle-1],b=values[middle];return null!=maxDelta&&Math.abs(a-b)>maxDelta?null:(a+b)/2}function fallback_provider_serialize(value){if(null===value)return"null";if("number"==typeof value||"boolean"==typeof value)return JSON.stringify(value);if("string"==typeof value)return value;if(lib_esm_bignumber.gH.isBigNumber(value))return value.toString();if(Array.isArray(value))return JSON.stringify(value.map(i=>fallback_provider_serialize(i)));if("object"==typeof value){const keys=Object.keys(value);return keys.sort(),"{"+keys.map(key=>{let v=value[key];return v="function"==typeof v?"[function]":fallback_provider_serialize(v),JSON.stringify(key)+":"+v}).join(",")+"}"}throw new Error("unknown value type: "+typeof value)}let nextRid=1;function stall(duration){let cancel=null,timer=null,promise=new Promise(resolve=>{cancel=function(){timer&&(clearTimeout(timer),timer=null),resolve()},timer=setTimeout(cancel,duration)});return{cancel,getPromise:function getPromise(){return promise},wait:func=>(promise=promise.then(func),promise)}}const ForwardErrors=[_ethersproject_logger_lib_esm.Vy.errors.CALL_EXCEPTION,_ethersproject_logger_lib_esm.Vy.errors.INSUFFICIENT_FUNDS,_ethersproject_logger_lib_esm.Vy.errors.NONCE_EXPIRED,_ethersproject_logger_lib_esm.Vy.errors.REPLACEMENT_UNDERPRICED,_ethersproject_logger_lib_esm.Vy.errors.UNPREDICTABLE_GAS_LIMIT],ForwardProperties=["address","args","errorArgs","errorSignature","method","transaction"];function exposeDebugConfig(config,now){const result={weight:config.weight};return Object.defineProperty(result,"provider",{get:()=>config.provider}),config.start&&(result.start=config.start),now&&(result.duration=now-config.start),config.done&&(config.error?result.error=config.error:result.result=config.result||null),result}function getProcessFunc(provider,method,params){let normalize=fallback_provider_serialize;switch(method){case"getBlockNumber":return function(configs){const values=configs.map(c=>c.result);let blockNumber=median(configs.map(c=>c.result),2);if(null!=blockNumber)return blockNumber=Math.ceil(blockNumber),values.indexOf(blockNumber+1)>=0&&blockNumber++,blockNumber>=provider._highestBlockNumber&&(provider._highestBlockNumber=blockNumber),provider._highestBlockNumber};case"getGasPrice":return function(configs){const values=configs.map(c=>c.result);return values.sort(),values[Math.floor(values.length/2)]};case"getEtherPrice":return function(configs){return median(configs.map(c=>c.result))};case"getBalance":case"getTransactionCount":case"getCode":case"getStorageAt":case"call":case"estimateGas":case"getLogs":break;case"getTransaction":case"getTransactionReceipt":normalize=function(tx){return null==tx?null:((tx=(0,properties_lib_esm.Ic)(tx)).confirmations=-1,fallback_provider_serialize(tx))};break;case"getBlock":normalize=params.includeTransactions?function(block){return null==block?null:((block=(0,properties_lib_esm.Ic)(block)).transactions=block.transactions.map(tx=>((tx=(0,properties_lib_esm.Ic)(tx)).confirmations=-1,tx)),fallback_provider_serialize(block))}:function(block){return null==block?null:fallback_provider_serialize(block)};break;default:throw new Error("unknown method: "+method)}return function normalizedTally(normalize,quorum){return function(configs){const tally={};configs.forEach(c=>{const value=normalize(c.result);tally[value]||(tally[value]={count:0,result:c.result}),tally[value].count++});const keys=Object.keys(tally);for(let i=0;i<keys.length;i++){const check=tally[keys[i]];if(check.count>=quorum)return check.result}}}(normalize,provider.quorum)}function waitForSync(config,blockNumber){return fallback_provider_awaiter(this,void 0,void 0,function*(){const provider=config.provider;return null!=provider.blockNumber&&provider.blockNumber>=blockNumber||-1===blockNumber?provider:(0,web_lib_esm.wt)(()=>new Promise((resolve,reject)=>{setTimeout(function(){return provider.blockNumber>=blockNumber?resolve(provider):config.cancelled?resolve(null):resolve(void 0)},0)}),{oncePoll:provider})})}function getRunner(config,currentBlockNumber,method,params){return fallback_provider_awaiter(this,void 0,void 0,function*(){let provider=config.provider;switch(method){case"getBlockNumber":case"getGasPrice":return provider[method]();case"getEtherPrice":if(provider.getEtherPrice)return provider.getEtherPrice();break;case"getBalance":case"getTransactionCount":case"getCode":return params.blockTag&&(0,bytes_lib_esm.Lo)(params.blockTag)&&(provider=yield waitForSync(config,currentBlockNumber)),provider[method](params.address,params.blockTag||"latest");case"getStorageAt":return params.blockTag&&(0,bytes_lib_esm.Lo)(params.blockTag)&&(provider=yield waitForSync(config,currentBlockNumber)),provider.getStorageAt(params.address,params.position,params.blockTag||"latest");case"getBlock":return params.blockTag&&(0,bytes_lib_esm.Lo)(params.blockTag)&&(provider=yield waitForSync(config,currentBlockNumber)),provider[params.includeTransactions?"getBlockWithTransactions":"getBlock"](params.blockTag||params.blockHash);case"call":case"estimateGas":return params.blockTag&&(0,bytes_lib_esm.Lo)(params.blockTag)&&(provider=yield waitForSync(config,currentBlockNumber)),"call"===method&&params.blockTag?provider[method](params.transaction,params.blockTag):provider[method](params.transaction);case"getTransaction":case"getTransactionReceipt":return provider[method](params.transactionHash);case"getLogs":{let filter=params.filter;return(filter.fromBlock&&(0,bytes_lib_esm.Lo)(filter.fromBlock)||filter.toBlock&&(0,bytes_lib_esm.Lo)(filter.toBlock))&&(provider=yield waitForSync(config,currentBlockNumber)),provider.getLogs(filter)}}return fallback_provider_logger.throwError("unknown method error",_ethersproject_logger_lib_esm.Vy.errors.UNKNOWN_ERROR,{method,params})})}class FallbackProvider extends base_provider.DJ{constructor(providers,quorum){0===providers.length&&fallback_provider_logger.throwArgumentError("missing providers","providers",providers);const providerConfigs=providers.map((configOrProvider,index)=>{if(abstract_provider_lib_esm.Kq.isProvider(configOrProvider)){const stallTimeout=(0,formatter.ws)(configOrProvider)?2e3:750,priority=1;return Object.freeze({provider:configOrProvider,weight:1,stallTimeout,priority})}const config=(0,properties_lib_esm.Ic)(configOrProvider);null==config.priority&&(config.priority=1),null==config.stallTimeout&&(config.stallTimeout=(0,formatter.ws)(configOrProvider)?2e3:750),null==config.weight&&(config.weight=1);const weight=config.weight;return(weight%1||weight>512||weight<1)&&fallback_provider_logger.throwArgumentError("invalid weight; must be integer in [1, 512]",`providers[${index}].weight`,weight),Object.freeze(config)}),total=providerConfigs.reduce((accum,c)=>accum+c.weight,0);null==quorum?quorum=total/2:quorum>total&&fallback_provider_logger.throwArgumentError("quorum will always fail; larger than total weight","quorum",quorum);let networkOrReady=checkNetworks(providerConfigs.map(c=>c.provider.network));null==networkOrReady&&(networkOrReady=new Promise((resolve,reject)=>{setTimeout(()=>{this.detectNetwork().then(resolve,reject)},0)})),super(networkOrReady),(0,properties_lib_esm.yY)(this,"providerConfigs",Object.freeze(providerConfigs)),(0,properties_lib_esm.yY)(this,"quorum",quorum),this._highestBlockNumber=-1}detectNetwork(){return fallback_provider_awaiter(this,void 0,void 0,function*(){return checkNetworks(yield Promise.all(this.providerConfigs.map(c=>c.provider.getNetwork())))})}perform(method,params){return fallback_provider_awaiter(this,void 0,void 0,function*(){if("sendTransaction"===method){const results=yield Promise.all(this.providerConfigs.map(c=>c.provider.sendTransaction(params.signedTransaction).then(result=>result.hash,error=>error)));for(let i=0;i<results.length;i++){const result=results[i];if("string"==typeof result)return result}throw results[0]}-1===this._highestBlockNumber&&"getBlockNumber"!==method&&(yield this.getBlockNumber());const processFunc=getProcessFunc(this,method,params),configs=function shuffled(array){for(let i=(array=array.slice()).length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1)),tmp=array[i];array[i]=array[j],array[j]=tmp}return array}(this.providerConfigs.map(properties_lib_esm.Ic));configs.sort((a,b)=>a.priority-b.priority);const currentBlockNumber=this._highestBlockNumber;let i=0,first=!0;for(;;){const t0=now();let inflightWeight=configs.filter(c=>c.runner&&t0-c.start<c.stallTimeout).reduce((accum,c)=>accum+c.weight,0);for(;inflightWeight<this.quorum&&i<configs.length;){const config=configs[i++],rid=nextRid++;config.start=now(),config.staller=stall(config.stallTimeout),config.staller.wait(()=>{config.staller=null}),config.runner=getRunner(config,currentBlockNumber,method,params).then(result=>{config.done=!0,config.result=result,this.listenerCount("debug")&&this.emit("debug",{action:"request",rid,backend:exposeDebugConfig(config,now()),request:{method,params:(0,properties_lib_esm.A4)(params)},provider:this})},error=>{config.done=!0,config.error=error,this.listenerCount("debug")&&this.emit("debug",{action:"request",rid,backend:exposeDebugConfig(config,now()),request:{method,params:(0,properties_lib_esm.A4)(params)},provider:this})}),this.listenerCount("debug")&&this.emit("debug",{action:"request",rid,backend:exposeDebugConfig(config,null),request:{method,params:(0,properties_lib_esm.A4)(params)},provider:this}),inflightWeight+=config.weight}const waiting=[];configs.forEach(c=>{!c.done&&c.runner&&(waiting.push(c.runner),c.staller&&waiting.push(c.staller.getPromise()))}),waiting.length&&(yield Promise.race(waiting));const results=configs.filter(c=>c.done&&null==c.error);if(results.length>=this.quorum){const result=processFunc(results);if(void 0!==result)return configs.forEach(c=>{c.staller&&c.staller.cancel(),c.cancelled=!0}),result;first||(yield stall(100).getPromise()),first=!1}const errors=configs.reduce((accum,c)=>{if(!c.done||null==c.error)return accum;const code=c.error.code;return ForwardErrors.indexOf(code)>=0&&(accum[code]||(accum[code]={error:c.error,weight:0}),accum[code].weight+=c.weight),accum},{});if(Object.keys(errors).forEach(errorCode=>{const tally=errors[errorCode];if(tally.weight<this.quorum)return;configs.forEach(c=>{c.staller&&c.staller.cancel(),c.cancelled=!0});const e=tally.error,props={};ForwardProperties.forEach(name=>{null!=e[name]&&(props[name]=e[name])}),fallback_provider_logger.throwError(e.reason||e.message,errorCode,props)}),0===configs.filter(c=>!c.done).length)break}return configs.forEach(c=>{c.staller&&c.staller.cancel(),c.cancelled=!0}),fallback_provider_logger.throwError("failed to meet quorum",_ethersproject_logger_lib_esm.Vy.errors.SERVER_ERROR,{method,params,results:configs.map(c=>exposeDebugConfig(c)),provider:this})})}}const IpcProvider=null,infura_provider_logger=new _ethersproject_logger_lib_esm.Vy(lib_esm_version.r),defaultProjectId="84842078b09946638c03157f83405213";class InfuraWebSocketProvider extends WebSocketProvider{constructor(network,apiKey){const provider=new InfuraProvider(network,apiKey),connection=provider.connection;connection.password&&infura_provider_logger.throwError("INFURA WebSocket project secrets unsupported",_ethersproject_logger_lib_esm.Vy.errors.UNSUPPORTED_OPERATION,{operation:"InfuraProvider.getWebSocketProvider()"});super(connection.url.replace(/^http/i,"ws").replace("/v3/","/ws/v3/"),network),(0,properties_lib_esm.yY)(this,"apiKey",provider.projectId),(0,properties_lib_esm.yY)(this,"projectId",provider.projectId),(0,properties_lib_esm.yY)(this,"projectSecret",provider.projectSecret)}isCommunityResource(){return this.projectId===defaultProjectId}}class InfuraProvider extends UrlJsonRpcProvider{static getWebSocketProvider(network,apiKey){return new InfuraWebSocketProvider(network,apiKey)}static getApiKey(apiKey){const apiKeyObj={apiKey:defaultProjectId,projectId:defaultProjectId,projectSecret:null};return null==apiKey||("string"==typeof apiKey?apiKeyObj.projectId=apiKey:null!=apiKey.projectSecret?(infura_provider_logger.assertArgument("string"==typeof apiKey.projectId,"projectSecret requires a projectId","projectId",apiKey.projectId),infura_provider_logger.assertArgument("string"==typeof apiKey.projectSecret,"invalid projectSecret","projectSecret","[REDACTED]"),apiKeyObj.projectId=apiKey.projectId,apiKeyObj.projectSecret=apiKey.projectSecret):apiKey.projectId&&(apiKeyObj.projectId=apiKey.projectId),apiKeyObj.apiKey=apiKeyObj.projectId),apiKeyObj}static getUrl(network,apiKey){let host=null;switch(network?network.name:"unknown"){case"homestead":host="mainnet.infura.io";break;case"goerli":host="goerli.infura.io";break;case"sepolia":host="sepolia.infura.io";break;case"matic":host="polygon-mainnet.infura.io";break;case"maticmum":host="polygon-mumbai.infura.io";break;case"optimism":host="optimism-mainnet.infura.io";break;case"optimism-goerli":host="optimism-goerli.infura.io";break;case"arbitrum":host="arbitrum-mainnet.infura.io";break;case"arbitrum-goerli":host="arbitrum-goerli.infura.io";break;default:infura_provider_logger.throwError("unsupported network",_ethersproject_logger_lib_esm.Vy.errors.INVALID_ARGUMENT,{argument:"network",value:network})}const connection={allowGzip:!0,url:"https://"+host+"/v3/"+apiKey.projectId,throttleCallback:(attempt,url)=>(apiKey.projectId===defaultProjectId&&(0,formatter.Zd)(),Promise.resolve(!0))};return null!=apiKey.projectSecret&&(connection.user="",connection.password=apiKey.projectSecret),connection}isCommunityResource(){return this.projectId===defaultProjectId}}class JsonRpcBatchProvider extends json_rpc_provider.F{send(method,params){const request={method,params,id:this._nextId++,jsonrpc:"2.0"};null==this._pendingBatch&&(this._pendingBatch=[]);const inflightRequest={request,resolve:null,reject:null},promise=new Promise((resolve,reject)=>{inflightRequest.resolve=resolve,inflightRequest.reject=reject});return this._pendingBatch.push(inflightRequest),this._pendingBatchAggregator||(this._pendingBatchAggregator=setTimeout(()=>{const batch=this._pendingBatch;this._pendingBatch=null,this._pendingBatchAggregator=null;const request=batch.map(inflight=>inflight.request);return this.emit("debug",{action:"requestBatch",request:(0,properties_lib_esm.A4)(request),provider:this}),(0,web_lib_esm.x6)(this.connection,JSON.stringify(request)).then(result=>{this.emit("debug",{action:"response",request,response:result,provider:this}),batch.forEach((inflightRequest,index)=>{const payload=result[index];if(payload.error){const error=new Error(payload.error.message);error.code=payload.error.code,error.data=payload.error.data,inflightRequest.reject(error)}else inflightRequest.resolve(payload.result)})},error=>{this.emit("debug",{action:"response",error,request,provider:this}),batch.forEach(inflightRequest=>{inflightRequest.reject(error)})})},10)),promise}}const nodesmith_provider_logger=new _ethersproject_logger_lib_esm.Vy(lib_esm_version.r);class NodesmithProvider extends UrlJsonRpcProvider{static getApiKey(apiKey){return apiKey&&"string"!=typeof apiKey&&nodesmith_provider_logger.throwArgumentError("invalid apiKey","apiKey",apiKey),apiKey||"ETHERS_JS_SHARED"}static getUrl(network,apiKey){nodesmith_provider_logger.warn("NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.");let host=null;switch(network.name){case"homestead":host="https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc";break;case"ropsten":host="https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc";break;case"rinkeby":host="https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc";break;case"goerli":host="https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc";break;case"kovan":host="https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc";break;default:nodesmith_provider_logger.throwArgumentError("unsupported network","network",arguments[0])}return host+"?apiKey="+apiKey}}const pocket_provider_logger=new _ethersproject_logger_lib_esm.Vy(lib_esm_version.r);class PocketProvider extends UrlJsonRpcProvider{static getApiKey(apiKey){const apiKeyObj={applicationId:null,loadBalancer:!0,applicationSecretKey:null};return null==apiKey?apiKeyObj.applicationId="62e1ad51b37b8e00394bda3b":"string"==typeof apiKey?apiKeyObj.applicationId=apiKey:null!=apiKey.applicationSecretKey?(apiKeyObj.applicationId=apiKey.applicationId,apiKeyObj.applicationSecretKey=apiKey.applicationSecretKey):apiKey.applicationId?apiKeyObj.applicationId=apiKey.applicationId:pocket_provider_logger.throwArgumentError("unsupported PocketProvider apiKey","apiKey",apiKey),apiKeyObj}static getUrl(network,apiKey){let host=null;switch(network?network.name:"unknown"){case"goerli":host="eth-goerli.gateway.pokt.network";break;case"homestead":host="eth-mainnet.gateway.pokt.network";break;case"kovan":host="poa-kovan.gateway.pokt.network";break;case"matic":host="poly-mainnet.gateway.pokt.network";break;case"maticmum":host="polygon-mumbai-rpc.gateway.pokt.network";break;case"rinkeby":host="eth-rinkeby.gateway.pokt.network";break;case"ropsten":host="eth-ropsten.gateway.pokt.network";break;default:pocket_provider_logger.throwError("unsupported network",_ethersproject_logger_lib_esm.Vy.errors.INVALID_ARGUMENT,{argument:"network",value:network})}const connection={headers:{},url:`https://${host}/v1/lb/${apiKey.applicationId}`};return null!=apiKey.applicationSecretKey&&(connection.user="",connection.password=apiKey.applicationSecretKey),connection}isCommunityResource(){return"62e1ad51b37b8e00394bda3b"===this.applicationId}}var web3_provider=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/providers/lib.esm/web3-provider.js");const providers_lib_esm_logger=new _ethersproject_logger_lib_esm.Vy(lib_esm_version.r);function getDefaultProvider(network,options){if(null==network&&(network="homestead"),"string"==typeof network){const match=network.match(/^(ws|http)s?:/i);if(match)switch(match[1].toLowerCase()){case"http":case"https":return new json_rpc_provider.F(network);case"ws":case"wss":return new WebSocketProvider(network);default:providers_lib_esm_logger.throwArgumentError("unsupported URL scheme","network",network)}}const n=(0,networks_lib_esm.N)(network);return n&&n._defaultProvider||providers_lib_esm_logger.throwError("unsupported getDefaultProvider network",_ethersproject_logger_lib_esm.Vy.errors.NETWORK_ERROR,{operation:"getDefaultProvider",network}),n._defaultProvider({FallbackProvider,AlchemyProvider,AnkrProvider,CloudflareProvider,EtherscanProvider,InfuraProvider,JsonRpcProvider:json_rpc_provider.F,NodesmithProvider,PocketProvider,Web3Provider:web3_provider.j,IpcProvider},options)}var logger_lib_esm_console=__webpack_require__("./node_modules/console-browserify/index.js");let logger_lib_esm_permanentCensorErrors=!1,logger_lib_esm_censorErrors=!1;const logger_lib_esm_LogLevels={debug:1,default:2,info:2,warning:3,error:4,off:5};let logger_lib_esm_logLevel=logger_lib_esm_LogLevels.default,logger_lib_esm_globalLogger=null;const logger_lib_esm_normalizeError=function logger_lib_esm_checkNormalize(){try{const missing=[];if(["NFD","NFC","NFKD","NFKC"].forEach(form=>{try{if("test"!=="test".normalize(form))throw new Error("bad normalize")}catch(error){missing.push(form)}}),missing.length)throw new Error("missing "+missing.join(", "));if(String.fromCharCode(233).normalize("NFD")!==String.fromCharCode(101,769))throw new Error("broken implementation")}catch(error){return error.message}return null}();var logger_lib_esm_LogLevel,logger_lib_esm_ErrorCode;!function(LogLevel){LogLevel.DEBUG="DEBUG",LogLevel.INFO="INFO",LogLevel.WARNING="WARNING",LogLevel.ERROR="ERROR",LogLevel.OFF="OFF"}(logger_lib_esm_LogLevel||(logger_lib_esm_LogLevel={})),function(ErrorCode){ErrorCode.UNKNOWN_ERROR="UNKNOWN_ERROR",ErrorCode.NOT_IMPLEMENTED="NOT_IMPLEMENTED",ErrorCode.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION",ErrorCode.NETWORK_ERROR="NETWORK_ERROR",ErrorCode.SERVER_ERROR="SERVER_ERROR",ErrorCode.TIMEOUT="TIMEOUT",ErrorCode.BUFFER_OVERRUN="BUFFER_OVERRUN",ErrorCode.NUMERIC_FAULT="NUMERIC_FAULT",ErrorCode.MISSING_NEW="MISSING_NEW",ErrorCode.INVALID_ARGUMENT="INVALID_ARGUMENT",ErrorCode.MISSING_ARGUMENT="MISSING_ARGUMENT",ErrorCode.UNEXPECTED_ARGUMENT="UNEXPECTED_ARGUMENT",ErrorCode.CALL_EXCEPTION="CALL_EXCEPTION",ErrorCode.INSUFFICIENT_FUNDS="INSUFFICIENT_FUNDS",ErrorCode.NONCE_EXPIRED="NONCE_EXPIRED",ErrorCode.REPLACEMENT_UNDERPRICED="REPLACEMENT_UNDERPRICED",ErrorCode.UNPREDICTABLE_GAS_LIMIT="UNPREDICTABLE_GAS_LIMIT",ErrorCode.TRANSACTION_REPLACED="TRANSACTION_REPLACED",ErrorCode.ACTION_REJECTED="ACTION_REJECTED"}(logger_lib_esm_ErrorCode||(logger_lib_esm_ErrorCode={}));class _ethersproject_logger_lib_esm_Logger{constructor(version){Object.defineProperty(this,"version",{enumerable:!0,value:version,writable:!1})}_log(logLevel,args){const level=logLevel.toLowerCase();null==logger_lib_esm_LogLevels[level]&&this.throwArgumentError("invalid log level name","logLevel",logLevel),logger_lib_esm_logLevel>logger_lib_esm_LogLevels[level]||logger_lib_esm_console.log.apply(logger_lib_esm_console,args)}debug(...args){this._log(_ethersproject_logger_lib_esm_Logger.levels.DEBUG,args)}info(...args){this._log(_ethersproject_logger_lib_esm_Logger.levels.INFO,args)}warn(...args){this._log(_ethersproject_logger_lib_esm_Logger.levels.WARNING,args)}makeError(message,code,params){if(logger_lib_esm_censorErrors)return this.makeError("censored error",code,{});code||(code=_ethersproject_logger_lib_esm_Logger.errors.UNKNOWN_ERROR),params||(params={});const messageDetails=[];Object.keys(params).forEach(key=>{const value=params[key];try{if(value instanceof Uint8Array){let hex="";for(let i=0;i<value.length;i++)hex+="0123456789abcdef"[value[i]>>4],hex+="0123456789abcdef"[15&value[i]];messageDetails.push(key+"=Uint8Array(0x"+hex+")")}else messageDetails.push(key+"="+JSON.stringify(value))}catch(error){messageDetails.push(key+"="+JSON.stringify(params[key].toString()))}}),messageDetails.push(`code=${code}`),messageDetails.push(`version=${this.version}`);const reason=message;let url="";switch(code){case logger_lib_esm_ErrorCode.NUMERIC_FAULT:{url="NUMERIC_FAULT";const fault=message;switch(fault){case"overflow":case"underflow":case"division-by-zero":url+="-"+fault;break;case"negative-power":case"negative-width":url+="-unsupported";break;case"unbound-bitwise-result":url+="-unbound-result"}break}case logger_lib_esm_ErrorCode.CALL_EXCEPTION:case logger_lib_esm_ErrorCode.INSUFFICIENT_FUNDS:case logger_lib_esm_ErrorCode.MISSING_NEW:case logger_lib_esm_ErrorCode.NONCE_EXPIRED:case logger_lib_esm_ErrorCode.REPLACEMENT_UNDERPRICED:case logger_lib_esm_ErrorCode.TRANSACTION_REPLACED:case logger_lib_esm_ErrorCode.UNPREDICTABLE_GAS_LIMIT:url=code}url&&(message+=" [ See: https://links.ethers.org/v5-errors-"+url+" ]"),messageDetails.length&&(message+=" ("+messageDetails.join(", ")+")");const error=new Error(message);return error.reason=reason,error.code=code,Object.keys(params).forEach(function(key){error[key]=params[key]}),error}throwError(message,code,params){throw this.makeError(message,code,params)}throwArgumentError(message,name,value){return this.throwError(message,_ethersproject_logger_lib_esm_Logger.errors.INVALID_ARGUMENT,{argument:name,value})}assert(condition,message,code,params){condition||this.throwError(message,code,params)}assertArgument(condition,message,name,value){condition||this.throwArgumentError(message,name,value)}checkNormalize(message){null==message&&(message="platform missing String.prototype.normalize"),logger_lib_esm_normalizeError&&this.throwError("platform missing String.prototype.normalize",_ethersproject_logger_lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:logger_lib_esm_normalizeError})}checkSafeUint53(value,message){"number"==typeof value&&(null==message&&(message="value not safe"),(value<0||value>=9007199254740991)&&this.throwError(message,_ethersproject_logger_lib_esm_Logger.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value}),value%1&&this.throwError(message,_ethersproject_logger_lib_esm_Logger.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value}))}checkArgumentCount(count,expectedCount,message){message=message?": "+message:"",count<expectedCount&&this.throwError("missing argument"+message,_ethersproject_logger_lib_esm_Logger.errors.MISSING_ARGUMENT,{count,expectedCount}),count>expectedCount&&this.throwError("too many arguments"+message,_ethersproject_logger_lib_esm_Logger.errors.UNEXPECTED_ARGUMENT,{count,expectedCount})}checkNew(target,kind){target!==Object&&null!=target||this.throwError("missing new",_ethersproject_logger_lib_esm_Logger.errors.MISSING_NEW,{name:kind.name})}checkAbstract(target,kind){target===kind?this.throwError("cannot instantiate abstract class "+JSON.stringify(kind.name)+" directly; use a sub-class",_ethersproject_logger_lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{name:target.name,operation:"new"}):target!==Object&&null!=target||this.throwError("missing new",_ethersproject_logger_lib_esm_Logger.errors.MISSING_NEW,{name:kind.name})}static globalLogger(){return logger_lib_esm_globalLogger||(logger_lib_esm_globalLogger=new _ethersproject_logger_lib_esm_Logger("logger/5.8.0")),logger_lib_esm_globalLogger}static setCensorship(censorship,permanent){if(!censorship&&permanent&&this.globalLogger().throwError("cannot permanently disable censorship",_ethersproject_logger_lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"}),logger_lib_esm_permanentCensorErrors){if(!censorship)return;this.globalLogger().throwError("error censorship permanent",_ethersproject_logger_lib_esm_Logger.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}logger_lib_esm_censorErrors=!!censorship,logger_lib_esm_permanentCensorErrors=!!permanent}static setLogLevel(logLevel){const level=logger_lib_esm_LogLevels[logLevel.toLowerCase()];null!=level?logger_lib_esm_logLevel=level:_ethersproject_logger_lib_esm_Logger.globalLogger().warn("invalid log level - "+logLevel)}static from(version){return new _ethersproject_logger_lib_esm_Logger(version)}}_ethersproject_logger_lib_esm_Logger.errors=logger_lib_esm_ErrorCode,_ethersproject_logger_lib_esm_Logger.levels=logger_lib_esm_LogLevel;const bytes_lib_esm_logger=new _ethersproject_logger_lib_esm_Logger("bytes/5.8.0");function lib_esm_isHexable(value){return!!value.toHexString}function lib_esm_addSlice(array){return array.slice||(array.slice=function(){const args=Array.prototype.slice.call(arguments);return lib_esm_addSlice(new Uint8Array(Array.prototype.slice.apply(array,args)))}),array}function lib_esm_isInteger(value){return"number"==typeof value&&value==value&&value%1==0}function bytes_lib_esm_isBytes(value){if(null==value)return!1;if(value.constructor===Uint8Array)return!0;if("string"==typeof value)return!1;if(!lib_esm_isInteger(value.length)||value.length<0)return!1;for(let i=0;i<value.length;i++){const v=value[i];if(!lib_esm_isInteger(v)||v<0||v>=256)return!1}return!0}function bytes_lib_esm_arrayify(value,options){if(options||(options={}),"number"==typeof value){bytes_lib_esm_logger.checkSafeUint53(value,"invalid arrayify value");const result=[];for(;value;)result.unshift(255&value),value=parseInt(String(value/256));return 0===result.length&&result.push(0),lib_esm_addSlice(new Uint8Array(result))}if(options.allowMissingPrefix&&"string"==typeof value&&"0x"!==value.substring(0,2)&&(value="0x"+value),lib_esm_isHexable(value)&&(value=value.toHexString()),bytes_lib_esm_isHexString(value)){let hex=value.substring(2);hex.length%2&&("left"===options.hexPad?hex="0"+hex:"right"===options.hexPad?hex+="0":bytes_lib_esm_logger.throwArgumentError("hex data is odd-length","value",value));const result=[];for(let i=0;i<hex.length;i+=2)result.push(parseInt(hex.substring(i,i+2),16));return lib_esm_addSlice(new Uint8Array(result))}return bytes_lib_esm_isBytes(value)?lib_esm_addSlice(new Uint8Array(value)):bytes_lib_esm_logger.throwArgumentError("invalid arrayify value","value",value)}function bytes_lib_esm_isHexString(value,length){return!("string"!=typeof value||!value.match(/^0x[0-9A-Fa-f]*$/))&&(!length||value.length===2+2*length)}const lib_esm_utf8_logger=new _ethersproject_logger_lib_esm_Logger("strings/5.8.0");var utf8_UnicodeNormalizationForm,utf8_Utf8ErrorReason;function utf8_ignoreFunc(reason,offset,bytes,output,badCodepoint){if(reason===utf8_Utf8ErrorReason.BAD_PREFIX||reason===utf8_Utf8ErrorReason.UNEXPECTED_CONTINUE){let i=0;for(let o=offset+1;o<bytes.length&&bytes[o]>>6==2;o++)i++;return i}return reason===utf8_Utf8ErrorReason.OVERRUN?bytes.length-offset-1:0}!function(UnicodeNormalizationForm){UnicodeNormalizationForm.current="",UnicodeNormalizationForm.NFC="NFC",UnicodeNormalizationForm.NFD="NFD",UnicodeNormalizationForm.NFKC="NFKC",UnicodeNormalizationForm.NFKD="NFKD"}(utf8_UnicodeNormalizationForm||(utf8_UnicodeNormalizationForm={})),function(Utf8ErrorReason){Utf8ErrorReason.UNEXPECTED_CONTINUE="unexpected continuation byte",Utf8ErrorReason.BAD_PREFIX="bad codepoint prefix",Utf8ErrorReason.OVERRUN="string overrun",Utf8ErrorReason.MISSING_CONTINUE="missing continuation byte",Utf8ErrorReason.OUT_OF_RANGE="out of UTF-8 range",Utf8ErrorReason.UTF16_SURROGATE="UTF-16 surrogate",Utf8ErrorReason.OVERLONG="overlong representation"}(utf8_Utf8ErrorReason||(utf8_Utf8ErrorReason={}));Object.freeze({error:function utf8_errorFunc(reason,offset,bytes,output,badCodepoint){return lib_esm_utf8_logger.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`,"bytes",bytes)},ignore:utf8_ignoreFunc,replace:function utf8_replaceFunc(reason,offset,bytes,output,badCodepoint){return reason===utf8_Utf8ErrorReason.OVERLONG?(output.push(badCodepoint),0):(output.push(65533),utf8_ignoreFunc(reason,offset,bytes))}});function utf8_toUtf8Bytes(str,form=utf8_UnicodeNormalizationForm.current){form!=utf8_UnicodeNormalizationForm.current&&(lib_esm_utf8_logger.checkNormalize(),str=str.normalize(form));let result=[];for(let i=0;i<str.length;i++){const c=str.charCodeAt(i);if(c<128)result.push(c);else if(c<2048)result.push(c>>6|192),result.push(63&c|128);else if(55296==(64512&c)){i++;const c2=str.charCodeAt(i);if(i>=str.length||56320!=(64512&c2))throw new Error("invalid utf-8 string");const pair=65536+((1023&c)<<10)+(1023&c2);result.push(pair>>18|240),result.push(pair>>12&63|128),result.push(pair>>6&63|128),result.push(63&pair|128)}else result.push(c>>12|224),result.push(c>>6&63|128),result.push(63&c|128)}return bytes_lib_esm_arrayify(result)}function id_id(text){return function keccak256_lib_esm_keccak256(data){return"0x"+sha3_default().keccak_256(bytes_lib_esm_arrayify(data))}(utf8_toUtf8Bytes(text))}new _ethersproject_logger_lib_esm_Logger("properties/5.8.0");function properties_lib_esm_defineReadOnly(object,name,value){Object.defineProperty(object,name,{enumerable:!0,value,writable:!1})}const wordlist_logger=new _ethersproject_logger_lib_esm_Logger("wordlists/5.7.0");class Wordlist{constructor(locale){wordlist_logger.checkAbstract(new.target,Wordlist),properties_lib_esm_defineReadOnly(this,"locale",locale)}split(mnemonic){return mnemonic.toLowerCase().split(/ +/g)}join(words){return words.join(" ")}static check(wordlist){const words=[];for(let i=0;i<2048;i++){const word=wordlist.getWord(i);if(i!==wordlist.getWordIndex(word))return"0x";words.push(word)}return id_id(words.join("\n")+"\n")}static register(lang,name){name||(name=lang.locale)}}let wordlist=null;function loadWords(lang){if(null==wordlist&&(wordlist="AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo".replace(/([A-Z])/g," $1").toLowerCase().substring(1).split(" "),"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60"!==Wordlist.check(lang)))throw wordlist=null,new Error("BIP39 Wordlist for en (English) FAILED")}const langEn=new class LangEn extends Wordlist{constructor(){super("en")}getWord(index){return loadWords(this),wordlist[index]}getWordIndex(word){return loadWords(this),wordlist.indexOf(word)}};Wordlist.register(langEn);const wordlists={en:langEn};var abi_coder=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/abi/lib.esm/abi-coder.js"),fragments=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/abi/lib.esm/fragments.js"),abstract_coder=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js"),lib_esm_interface=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/abi/lib.esm/interface.js"),address_lib_esm=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/address/lib.esm/index.js"),base64_lib_esm=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/base64/lib.esm/index.js"),basex_lib_esm=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/basex/lib.esm/index.js"),_ethersproject_bytes_lib_esm=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/bytes/lib.esm/index.js"),namehash=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/hash/lib.esm/namehash.js"),message=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/hash/lib.esm/message.js"),lib_esm_id=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/hash/lib.esm/id.js"),typed_data=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/hash/lib.esm/typed-data.js"),hdnode_lib_esm=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/hdnode/lib.esm/index.js"),inspect=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/json-wallets/lib.esm/inspect.js"),keccak256_lib_esm=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/keccak256/lib.esm/index.js"),node_modules_ethersproject_logger_lib_esm=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/logger/lib.esm/index.js"),sha2=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/sha2/lib.esm/sha2.js"),solidity_lib_esm=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/solidity/lib.esm/index.js"),random=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/random/lib.esm/random.js"),shuffle=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/random/lib.esm/shuffle.js"),_ethersproject_properties_lib_esm=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/properties/lib.esm/index.js"),rlp_lib_esm=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/rlp/lib.esm/index.js"),signing_key_lib_esm=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/signing-key/lib.esm/index.js"),idna=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/strings/lib.esm/idna.js"),utf8=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/strings/lib.esm/utf8.js"),bytes32=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/strings/lib.esm/bytes32.js"),_ethersproject_transactions_lib_esm=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/transactions/lib.esm/index.js"),units_lib_esm=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/units/lib.esm/index.js"),_ethersproject_web_lib_esm=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/web/lib.esm/index.js"),types=__webpack_require__("./node_modules/ethers/node_modules/@ethersproject/sha2/lib.esm/types.js");const ethers_lib_esm_version_version="ethers/5.7.2",ethers_logger=new node_modules_ethersproject_logger_lib_esm.Logger(ethers_lib_esm_version_version);try{const anyGlobal=window;null==anyGlobal._ethers&&(anyGlobal._ethers=ethers_namespaceObject)}catch(error){}}}]);