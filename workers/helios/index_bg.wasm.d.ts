/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_ethereumclient_free(a: number, b: number): void;
export function ethereumclient_new(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number): Array;
export function ethereumclient_sync(a: number): number;
export function ethereumclient_wait_synced(a: number): number;
export function ethereumclient_chain_id(a: number): number;
export function ethereumclient_get_block_number(a: number): number;
export function ethereumclient_get_balance(a: number, b: number, c: number): number;
export function ethereumclient_get_transaction_by_hash(a: number, b: number, c: number): number;
export function ethereumclient_get_transaction_by_block_hash_and_index(a: number, b: number, c: number): number;
export function ethereumclient_get_transaction_by_block_number_and_index(a: number, b: number, c: number): number;
export function ethereumclient_get_transaction_count(a: number, b: number, c: number): number;
export function ethereumclient_get_block_transaction_count_by_hash(a: number, b: number): number;
export function ethereumclient_get_block_transaction_count_by_number(a: number, b: number): number;
export function ethereumclient_get_block_by_number(a: number, b: number, c: number): number;
export function ethereumclient_get_code(a: number, b: number, c: number): number;
export function ethereumclient_call(a: number, b: number, c: number): number;
export function ethereumclient_estimate_gas(a: number, b: number): number;
export function ethereumclient_gas_price(a: number): number;
export function ethereumclient_max_priority_fee_per_gas(a: number): number;
export function ethereumclient_send_raw_transaction(a: number, b: number, c: number): number;
export function ethereumclient_get_transaction_receipt(a: number, b: number): number;
export function ethereumclient_get_block_receipts(a: number, b: number): number;
export function ethereumclient_get_logs(a: number, b: number): number;
export function ethereumclient_client_version(a: number): number;
export function __wbg_opstackclient_free(a: number, b: number): void;
export function opstackclient_new(a: number, b: number, c: number, d: number): Array;
export function opstackclient_sync(a: number): number;
export function opstackclient_wait_synced(a: number): number;
export function opstackclient_chain_id(a: number): number;
export function opstackclient_get_block_number(a: number): number;
export function opstackclient_get_balance(a: number, b: number, c: number): number;
export function opstackclient_get_transaction_by_hash(a: number, b: number, c: number): number;
export function opstackclient_get_transaction_by_block_hash_and_index(a: number, b: number, c: number): number;
export function opstackclient_get_transaction_by_block_number_and_index(a: number, b: number, c: number): number;
export function opstackclient_get_transaction_count(a: number, b: number, c: number): number;
export function opstackclient_get_block_transaction_count_by_hash(a: number, b: number): number;
export function opstackclient_get_block_transaction_count_by_number(a: number, b: number): number;
export function opstackclient_get_block_by_number(a: number, b: number, c: number): number;
export function opstackclient_get_code(a: number, b: number, c: number): number;
export function opstackclient_call(a: number, b: number, c: number): number;
export function opstackclient_estimate_gas(a: number, b: number): number;
export function opstackclient_gas_price(a: number): number;
export function opstackclient_max_priority_fee_per_gas(a: number): number;
export function opstackclient_send_raw_transaction(a: number, b: number, c: number): number;
export function opstackclient_get_transaction_receipt(a: number, b: number): number;
export function opstackclient_get_block_receipts(a: number, b: number): number;
export function opstackclient_get_logs(a: number, b: number): number;
export function opstackclient_client_version(a: number): number;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export const __wbindgen_export_2: WebAssembly.Table;
export const __wbindgen_export_3: WebAssembly.Table;
export function closure238_externref_shim(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h01d972fcfce72436(a: number, b: number): void;
export function __externref_table_dealloc(a: number): void;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __wbindgen_exn_store(a: number): void;
export function __externref_table_alloc(): number;
export function closure179_externref_shim(a: number, b: number, c: number, d: number): void;
export function __wbindgen_start(): void;
